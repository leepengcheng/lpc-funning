#include <iostream>
#include <fstream>
#include <windows.h>
#include "resource.h"
using namespace std;
typedef int(*Fun)(char*);
char* path;
int IsLicenseValid();
void AnsysShowDialog(char*);
void AnsysExportScript(char*);
//////////////////////////////
void CoutScript_ManagerMaterial();//材料管理
void CoutScript_ExportResult();//结果导出
void CoutScript_ImportParaSolid();//模型导入
void CoutScript_PressureWave();//浪压力
void CoutScript_ManagerCase();//工况管理
void CoutScript_PressureConcentrated();//集中力
void CoutScript_PressureStatic();//静水压力
void CoutScript_PressureDynamic();//动水压力
void CoutScript_PressureUplift();//扬压力
void CoutScript_ManagerComponent();//组件管理
void CoutScript_SeismicTimeHistory();//时间历程
void CoutScript_SeismicSpectrum();//反应谱
void CoutScript_ToolKitSeismic();//地震分析工具
void CoutScript_ToolKitLoad();//载荷分析工具
int main(int argc, char *argv[])
{
	if (argc != 3) {
		return 1;
	}
	char* modulename = argv[1];
	path = argv[2];
	int verify = IsLicenseValid();
	if (verify == 0)
	{
		AnsysExportScript(modulename);
	}
	else if (verify == 1) {
		AnsysShowDialog("Can Not Find The License! ");
	}
	else {
		AnsysShowDialog("Can Not Find The DLL! ");
	}
	return 0;
}
void AnsysShowDialog(char* msg)
{
	cout << "set path " << path <<"/locale"<< endl;
	cout << "::msgcat::mcload  $path"<< endl;
	cout << "tk_messageBox -icon warning "
		"-title [::msgcat::mc \"Tips \"] "
		"-message  [::msgcat::mc \"" << msg << "\"]";
}

int IsLicenseValid()
{
	
    HINSTANCE mylib = LoadLibrary(L"licchecker.dll");
    if (mylib == NULL)
    {
        return -1;
    }
    Fun libFun = (Fun)GetProcAddress(mylib, "IsLicenseValid");
    return libFun("");
    
}
//锟斤拷锟侥ｏ拷锟斤拷欠锟斤拷锟斤拷
void AnsysExportScript(char* modulename)
{
	if (strcmp(modulename, "ManagerMaterial") == 0)
	{
		CoutScript_ManagerMaterial();
	}
	else if (strcmp(modulename, "ExportResult") == 0)
	{
		CoutScript_ExportResult();
	}
	else if (strcmp(modulename, "ImportParaSolid") == 0)
	{
		CoutScript_ImportParaSolid();
	}
	else if (strcmp(modulename, "PressureConcentrated") == 0)
	{
		CoutScript_PressureConcentrated();
	}
	else if (strcmp(modulename, "PressureStatic") == 0)
	{
		CoutScript_PressureStatic();
	}
	else if (strcmp(modulename, "PressureDynamic") == 0)
	{
		CoutScript_PressureDynamic();
	}
	else if (strcmp(modulename, "PressureUplift") == 0)
	{
		CoutScript_PressureUplift();
	}
	else if (strcmp(modulename, "PressureWave") == 0)
	{
		CoutScript_PressureWave();
	}
	else if (strcmp(modulename, "ManagerComponent") == 0)
	{
		CoutScript_ManagerComponent();
	}
	else if (strcmp(modulename, "SeismicTimeHistory") == 0)
	{
		CoutScript_SeismicTimeHistory();
	}
	else if (strcmp(modulename, "SeismicSpectrum") == 0)
	{
		CoutScript_SeismicSpectrum();
	}
	else if (strcmp(modulename, "ToolKitLoad") == 0)
	{
		CoutScript_ToolKitLoad();
	}
	else if (strcmp(modulename, "ManagerCase") == 0)
	{
		CoutScript_ManagerCase();
	}
	else if (strcmp(modulename, "ToolKitSeismic") == 0)
	{
		CoutScript_ToolKitSeismic();
	}
	else
	{
		AnsysShowDialog("Can Not Find The Module!");
	}
}

//////////////////////////////
//锟斤拷锟斤拷锟斤拷锟较匡拷
void CoutScript_ManagerMaterial()
{
cout<<"encoding system euc-cn"<<endl;
cout<<"package require msgcat"<<endl;
cout<<"package require tdom"<<endl;
cout << "set path "<<path << endl;
cout<<"set librayfile [file join $path mat.xml]"<<endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"::msgcat::mcload  [file join $path locale material]"<<endl;
cout<<"set imagePath [file join $env(EUIDL_DIR) gui $::euidl::euidlArray(language) images]"<<endl;
cout<<"image create photo mtlclose -file [file join $imagePath mtlclose16x16.png]"<<endl;
cout<<"image create photo mtlopen  -file [file join $imagePath mtlopen16x16.png]"<<endl;
cout<<"image create photo mtlicon  -file [file join $imagePath mtlicon16x16.png]"<<endl;
cout<<"namespace eval ::euidl::material::MaterialLibrary {} {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable treeMat"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable font"<<endl;
cout<<"variable menu"<<endl;
cout<<"variable theunit"<<endl;
cout<<"variable btn_del"<<endl;
cout<<"if {[chekcEnvironment]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .materiallibrary]} {"<<endl;
cout<<"wm deiconify .materiallibrary"<<endl;
cout<<"raise .materiallibrary"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set font(content)  {\"Microsoft YaHei\" 11 normal}"<<endl;
cout<<"set font(title)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set parent [toplevel .materiallibrary]"<<endl;
cout<<"wm title $parent [msgcat::mc \"Define Material Model Behavior \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-730)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-350)/2}]"<<endl;
cout<<"wm geometry $parent  730x350+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .tableitem]} {"<<endl;
cout<<"destroy .tableitem"<<endl;
cout<<"}"<<endl;
cout<<"destroy .materiallibrary"<<endl;
cout<<"catch {ans_sendcommand \"SAVE\"} err"<<endl;
cout<<"}"<<endl;
cout<<"option add *tearOff 0"<<endl;
cout<<"set menuBar [menu $parent.menubar]"<<endl;
cout<<"set menu(units) [menu $menuBar.units -tearoff 0]"<<endl;
cout<<"$menuBar add cascade \\"<<endl;
cout<<"-label [msgcat::mc \"Units \"]\\"<<endl;
cout<<"-menu $menu(units)"<<endl;
cout<<"$menu(units) add radio \\"<<endl;
cout<<"-label [msgcat::mc \"SI :m-kg-pa \"] \\"<<endl;
cout<<"-variable [scope theunit]  \\"<<endl;
cout<<"-value \"SI\"\\"<<endl;
cout<<"-command [code setModelUnit]"<<endl;
cout<<"$menu(units) add radio \\"<<endl;
cout<<"-label [msgcat::mc \"MPA:mm-t-mpa \"] \\"<<endl;
cout<<"-variable [scope theunit] \\"<<endl;
cout<<"-value \"MPA\"\\"<<endl;
cout<<"-command [code setModelUnit]"<<endl;
cout<<"$parent config -menu $menuBar"<<endl;
cout<<"set left [euidl::labeledframe $parent.left \\"<<endl;
cout<<"-font $font(content)  \\"<<endl;
cout<<"-text [msgcat::mc \"Material Available \"]]"<<endl;
cout<<"grid $left -row 1 -column 0  -sticky news"<<endl;
cout<<"set left [$left childsite]"<<endl;
cout<<"set center [frame $parent.center]"<<endl;
cout<<"grid $center  -row 1 -column 1  -sticky news"<<endl;
cout<<"set right [euidl::labeledframe $parent.right \\"<<endl;
cout<<"-font $font(content)\\"<<endl;
cout<<"-text [msgcat::mc \"Material Defined \"]]"<<endl;
cout<<"grid $right -row 1 -column 2  -sticky news"<<endl;
cout<<"set right [$right childsite]"<<endl;
cout<<"grid  columnconfigure $parent 0 -weight 0"<<endl;
cout<<"grid  columnconfigure $parent 2 -weight 1"<<endl;
cout<<"grid  rowconfigure $parent 1 -weight 1"<<endl;
cout<<"set btn_add [button $center.add -text \"[msgcat::mc \"Add \"]>>\" \\"<<endl;
cout<<"-width 8 -font $font(content)\\"<<endl;
cout<<"-command [namespace code addLocalMat] ]"<<endl;
cout<<"set btn_del [button $center.del -text \"[msgcat::mc \"Del \"]<<\" \\"<<endl;
cout<<"-width 8 -font $font(content) \\"<<endl;
cout<<"-command [namespace code deleteLocalMat] ]"<<endl;
cout<<"pack $btn_add  -side top -fill x -pady 90"<<endl;
cout<<"pack $btn_del  -side top -fill x"<<endl;
cout<<"set table [euidl::colhead $right.table \\"<<endl;
cout<<"-variable [namespace which -variable tabledata] \\"<<endl;
cout<<"-selectbackground #09f\\"<<endl;
cout<<"-borderwidth 0 \\"<<endl;
cout<<"-hscrollmode none \\"<<endl;
cout<<"-contextmenu 1 \\"<<endl;
cout<<"]"<<endl;
cout<<"$table tag configure ID -sortmethod integer"<<endl;
cout<<"$table tag configure {Name} -sortmethod dictionary"<<endl;
cout<<"$table tag configure {Type} -sortmethod dictionary"<<endl;
cout<<"$table tag configure title -anchor center"<<endl;
cout<<"$table tag configure title -font $font(title)"<<endl;
cout<<"$table tag configure row -font $font(content)"<<endl;
cout<<"$table tag configure row -anchor center"<<endl;
cout<<"$table insert cols ID end"<<endl;
cout<<"$table insert cols {Name} end"<<endl;
cout<<"$table insert cols {Type} end"<<endl;
cout<<"[$table component table] width [$table tag coltag {ID}] 10"<<endl;
cout<<"[$table component table] width [$table tag coltag {Name}] 30"<<endl;
cout<<"[$table component table] width [$table tag coltag {Type}] 30"<<endl;
cout<<"[$table component table] configure -rowheight 2"<<endl;
cout<<"bind $table <Double-1> [code showTableItem]"<<endl;
cout<<"pack $table -fill both -expand 1"<<endl;
cout<<"$table deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [::msgcat::mc \"Edit \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [code showTableItem]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [::msgcat::mc \"Delete \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-command [namespace code deleteLocalMat]"<<endl;
cout<<"set treeMat [euidl::hierarchy $left.modelControl \\"<<endl;
cout<<"-querycommand [list [namespace code queryXmlNode] %n] \\"<<endl;
cout<<"-execcommand [list [namespace code  selectTreeNode] %n %s]\\"<<endl;
cout<<"-selectcommand [list [namespace code selectTreeNode] %n %s ] \\"<<endl;
cout<<"-alwaysquery 1 \\"<<endl;
cout<<"-closedicon mtlclose \\"<<endl;
cout<<"-openicon mtlopen \\"<<endl;
cout<<"-nodeicon mtlicon \\"<<endl;
cout<<"-style single \\"<<endl;
cout<<"-width 200 \\"<<endl;
cout<<"-height 350 \\"<<endl;
cout<<"-contextmenu 1 \\"<<endl;
cout<<"-font $font(content)"<<endl;
cout<<"]"<<endl;
cout<<"$treeMat deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$treeMat insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [::msgcat::mc \"Add \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [namespace code addLocalMat]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$treeMat insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [::msgcat::mc \"Check \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [code showTreeItem]"<<endl;
cout<<"grid $treeMat -sticky news"<<endl;
cout<<"grid  columnconfigure $right 0 -weight 1"<<endl;
cout<<"grid  columnconfigure $left 0 -weight 1"<<endl;
cout<<"grid  rowconfigure $right 0 -weight 1"<<endl;
cout<<"grid  rowconfigure $left 0 -weight 1"<<endl;
cout<<"update idletasks"<<endl;
cout<<"::euidl::material::MaterialLibrary::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc loadXml {} \\"<<endl;
cout<<"{"<<endl;
cout<<"global librayfile"<<endl;
cout<<"set fl [open $librayfile r]"<<endl;
cout<<"set data [read $fl]"<<endl;
cout<<"if {[catch {close $fl} err]} {"<<endl;
cout<<"ans_senderror 1 \"Read Material Data Failed: $err \""<<endl;
cout<<"}"<<endl;
cout<<"return $data"<<endl;
cout<<"}"<<endl;
cout<<"proc queryXmlNode {node} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable localtable"<<endl;
cout<<"variable nodeproperty"<<endl;
cout<<"variable doc"<<endl;
cout<<"set xml_info [loadXml]"<<endl;
cout<<"set dom [dom parse $xml_info]"<<endl;
cout<<"set doc [$dom documentElement]"<<endl;
cout<<"set localmats(root) [ list ]"<<endl;
cout<<"set nodes [$doc selectNodes {/Root/Type}]"<<endl;
cout<<"foreach thenode $nodes { \\"<<endl;
cout<<"set typeid  [$thenode getAttribute id]"<<endl;
cout<<"set typename [::msgcat::mc $typeid]"<<endl;
cout<<"lappend localmats(root)  \"$typeid $typename\""<<endl;
cout<<"set subnodes [$thenode childNodes]"<<endl;
cout<<"set localmats($typeid) [list]"<<endl;
cout<<"foreach subnode $subnodes {"<<endl;
cout<<"set subid [$subnode getAttribute id]"<<endl;
cout<<"set subname [::msgcat::mc $subid]"<<endl;
cout<<"lappend localmats($typeid) \"$subid $subname\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {$node == \"\" } {"<<endl;
cout<<"set node root"<<endl;
cout<<"}"<<endl;
cout<<"if {[string match {} [array names localmats $node]]} {"<<endl;
cout<<"return \"\""<<endl;
cout<<"}"<<endl;
cout<<"return $localmats($node)"<<endl;
cout<<"}"<<endl;
cout<<"proc queryXmlProperty {thenode} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable doc"<<endl;
cout<<"variable theunit"<<endl;
cout<<"set matNodes [$doc selectNodes {/Root/Type/Mat}]"<<endl;
cout<<"foreach node $matNodes {"<<endl;
cout<<"set nodeid [$node getAttribute id]"<<endl;
cout<<"if {$nodeid==$thenode} {"<<endl;
cout<<"set name \"_NAME [::msgcat::mc $nodeid]\""<<endl;
cout<<"set parentid [[$node parentNode] getAttribute id]"<<endl;
cout<<"set type \"_TYPE [::msgcat::mc $parentid]\""<<endl;
cout<<"set property [$node text]"<<endl;
cout<<"array set propertyarray $property"<<endl;
cout<<"switch -regexp -- $theunit {"<<endl;
cout<<"MPA* {"<<endl;
cout<<"if {[lsearch $property EX]>=0} {"<<endl;
cout<<"set propertyarray(EX) [format \"%G\" [expr $propertyarray(EX)*1.0e-6]]"<<endl;
cout<<"}"<<endl;
cout<<"if {[lsearch $property TM]>=0} {"<<endl;
cout<<"set propertyarray(TM) [format \"%G\" [expr $propertyarray(TM)*1.0e-6]]"<<endl;
cout<<"}"<<endl;
cout<<"if {[lsearch $property YS]>=0} {"<<endl;
cout<<"set propertyarray(YS) [format \"%G\" [expr $propertyarray(YS)*1.0e-6]]"<<endl;
cout<<"}"<<endl;
cout<<"if {[lsearch $property DENS]>=0} {"<<endl;
cout<<"set propertyarray(DENS) [format \"%G\" [expr $propertyarray(DENS)*1.0e-12]]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"default {}"<<endl;
cout<<"}"<<endl;
cout<<"set property [array get propertyarray]"<<endl;
cout<<"return [concat $name $type $property ]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"return \"\""<<endl;
cout<<"}"<<endl;
cout<<"proc GetAnsysMatData { matid } \\"<<endl;
cout<<"{"<<endl;
cout<<"set resultlist [list]"<<endl;
cout<<"set propertylist {EX EY EZ NUXY NUYZ NUXZ PRXY PRYZ PRXZ GXY GYZ GXZ DENS BKIN}"<<endl;
cout<<"foreach index $propertylist {"<<endl;
cout<<"set flag [ans_getvalue $index,$matid,EXIS]"<<endl;
cout<<"if {$flag==1} {"<<endl;
cout<<"if {$index==\"BKIN\"} {"<<endl;
cout<<"lappend resultlist \"YS\" [format \"%G\" [ans_getvalue $index,$matid,TEMP,0,CONST,1]]"<<endl;
cout<<"lappend resultlist \"TM\" [format \"%G\" [ans_getvalue $index,$matid,TEMP,0,CONST,2]]"<<endl;
cout<<"} else {"<<endl;
cout<<"lappend resultlist $index [format \"%G\" [ans_getvalue $index,$matid,TEMP,0]]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"return $resultlist"<<endl;
cout<<"}"<<endl;
cout<<"proc GetAnsysMatNumberList {} \\"<<endl;
cout<<"{"<<endl;
cout<<"set maxMatlNum [ans_evalexpr mpinqr(0,0,14)]"<<endl;
cout<<"set maxMatlDef [ans_evalexpr mpinqr(0,0,12)]"<<endl;
cout<<"set matidlocal 1"<<endl;
cout<<"if {$maxMatlDef == 0 } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set matdef [list]"<<endl;
cout<<"set matidlocal [ans_evalexpr mpnext(0)]"<<endl;
cout<<"if {$maxMatlNum > 0} {"<<endl;
cout<<"while {$matidlocal > 0} {"<<endl;
cout<<"lappend matdef $matidlocal"<<endl;
cout<<"set matidlocal [ans_evalexpr mpnext($matidlocal)]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"return $matdef"<<endl;
cout<<"}"<<endl;
cout<<"proc getProperty {id key} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable doc"<<endl;
cout<<"set index  [format \"_mat_%s_%s\" $id $key]"<<endl;
cout<<"set flag [ans_getvalue parm,$index,type]"<<endl;
cout<<"if {$flag!=-1} {"<<endl;
cout<<"set data [ans_getvalue parm,$index,value]"<<endl;
cout<<"return [string trim $data]"<<endl;
cout<<"}"<<endl;
cout<<"set ansProperty [GetAnsysMatData $id]"<<endl;
cout<<"set matNodes [$doc selectNodes {/Root/Type/Mat}]"<<endl;
cout<<"foreach node $matNodes {"<<endl;
cout<<"set xmlProperty [$node text]"<<endl;
cout<<"if {[lsort $xmlProperty]==[lsort $ansProperty]} {"<<endl;
cout<<"if {$key==\"type\"} {"<<endl;
cout<<"return [msgcat::mc [[$node parentNode] getAttribute id]]"<<endl;
cout<<"} elseif {$key==\"name\"} {"<<endl;
cout<<"return [msgcat::mc [$node getAttribute id]]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"return \"None\""<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable menu"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable btn_del"<<endl;
cout<<"variable selTreeNode"<<endl;
cout<<"variable theunit"<<endl;
cout<<"variable lastunit"<<endl;
cout<<"set selTreeNode \"root\""<<endl;
cout<<"set index 0"<<endl;
cout<<"foreach id [GetAnsysMatNumberList] {\\"<<endl;
cout<<"set name [getProperty $id name]"<<endl;
cout<<"set type [getProperty $id type]"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($index,-1) {}"<<endl;
cout<<"set tabledata($index,0)  $id"<<endl;
cout<<"set tabledata($index,1)  $name"<<endl;
cout<<"set tabledata($index,2)  $type"<<endl;
cout<<"incr index"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"$btn_del configure -state disabled"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state disabled"<<endl;
cout<<"[$table getContextMenu] entryconfigure 1 -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"set unitID [ans_getvalue ACTIVE,,UNITS]"<<endl;
cout<<"set unitID  [string trim $unitID]"<<endl;
cout<<"if {$unitID==-1 || $unitID==1} {"<<endl;
cout<<"set theunit  \"SI\""<<endl;
cout<<"set lastunit \"SI\""<<endl;
cout<<"} else {"<<endl;
cout<<"set theunit  \"MPA\""<<endl;
cout<<"set lastunit \"MPA\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc exitmain {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable localTable"<<endl;
cout<<"if [winfo exists $parent] {"<<endl;
cout<<"destroy $parent"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists $localTable]} {"<<endl;
cout<<"destroy $localTable"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc selectTreeNode { node args } \\"<<endl;
cout<<"{"<<endl;
cout<<"variable treeMat"<<endl;
cout<<"variable selTreeNode"<<endl;
cout<<"$treeMat selection clear"<<endl;
cout<<"$treeMat selection add $node"<<endl;
cout<<"set selTreeNode $node"<<endl;
cout<<"}"<<endl;
cout<<"proc addLocalMat {}\\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable property"<<endl;
cout<<"variable selTreeNode"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable btn_del"<<endl;
cout<<"if { [regexp {\\d+root} $selTreeNode] } {"<<endl;
cout<<"puts \"please select no-root node!\""<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[info exists property]} {"<<endl;
cout<<"unset property"<<endl;
cout<<"}"<<endl;
cout<<"set data  [queryXmlProperty $selTreeNode]"<<endl;
cout<<"array set property $data"<<endl;
cout<<"set id [ans_evalexpr mpinqr(0,0,14)]"<<endl;
cout<<"incr id"<<endl;
cout<<"catch {ans_sendcommand \"MPTEMP,1,0\"} err"<<endl;
cout<<"foreach key [array names property]  {"<<endl;
cout<<"switch -exact -- $key {"<<endl;
cout<<"_NAME {set name    $property($key)}"<<endl;
cout<<"_TYPE {set type    $property($key)}"<<endl;
cout<<"TM   {set bkin_tm $property($key)}"<<endl;
cout<<"YS   {set bkin_ys $property($key)}"<<endl;
cout<<"default {catch {ans_sendcommand \"MPDATA,$key,$id,,$property($key)\"} err}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {[info exists bkin_tm] && [info exists bkin_ys]} {"<<endl;
cout<<"catch {ans_sendcommand \"TB,BKIN,$id,1,2,1 \"} err"<<endl;
cout<<"catch {ans_sendcommand \"TBTEMP,0\"} err"<<endl;
cout<<"catch {ans_sendcommand \"TBDATA,,$bkin_ys,$bkin_tm\"} err"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_name,'%s'\" $id $name]} err"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_type,'%s'\" $id $type]} err"<<endl;
cout<<"set index [$table index end row]"<<endl;
cout<<"incr index"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($index,-1) {}"<<endl;
cout<<"set tabledata($index,0)  $id"<<endl;
cout<<"set tabledata($index,1)  $name"<<endl;
cout<<"set tabledata($index,2)  $type"<<endl;
cout<<"$table selection set $index,-1"<<endl;
cout<<"$btn_del configure -state normal"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state normal"<<endl;
cout<<"[$table getContextMenu] entryconfigure 1 -state normal"<<endl;
cout<<"}"<<endl;
cout<<"proc deleteLocalMat {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable btn_del"<<endl;
cout<<"set selection [lsort -integer -decreasing [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"set matid $tabledata($sel,0)"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_name\" $matid]} err"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_type\"  $matid]} err"<<endl;
cout<<"catch {ans_sendcommand \"MPDE,ALL,$matid\"} err"<<endl;
cout<<"catch {ans_sendcommand \"TBDE,ALL,$matid\"} err"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"$table delete rows $sel"<<endl;
cout<<"}"<<endl;
cout<<"if { [llength $selection] > 1 } {"<<endl;
cout<<"set rowNum 0"<<endl;
cout<<"} else {"<<endl;
cout<<"set rowNum [$table index end row]"<<endl;
cout<<"if { $sel < $rowNum } {"<<endl;
cout<<"set rowNum $sel"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"$btn_del configure -state disabled"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state disabled"<<endl;
cout<<"[$table getContextMenu] entryconfigure 1 -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"$table selection set $rowNum,0"<<endl;
cout<<"}"<<endl;
cout<<"proc showTableItem {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable localTable"<<endl;
cout<<"variable font"<<endl;
cout<<"variable theunit"<<endl;
cout<<"variable tableitemarray"<<endl;
cout<<"variable tableitemarraycopy"<<endl;
cout<<"if {[winfo exists .tableitem]} {"<<endl;
cout<<"destroy .tableitem]"<<endl;
cout<<"}"<<endl;
cout<<"set selection [lsort -integer -decreasing [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection end]"<<endl;
cout<<"$table selection clear all"<<endl;
cout<<"$table selection set $sel,-1"<<endl;
cout<<"if {[info exists tableitemarray]} {"<<endl;
cout<<"unset tableitemarray"<<endl;
cout<<"}"<<endl;
cout<<"if {[info exists tableitemarraycopy]} {"<<endl;
cout<<"unset tableitemarraycopy"<<endl;
cout<<"}"<<endl;
cout<<"set data [GetAnsysMatData $tabledata($sel,0)]"<<endl;
cout<<"set id   \"_ID    $tabledata($sel,0)\""<<endl;
cout<<"set name \"_NAME  $tabledata($sel,1)\""<<endl;
cout<<"set type \"_TYPE  $tabledata($sel,2)\""<<endl;
cout<<"set tableitemdatalist [concat $id $name $type $data]"<<endl;
cout<<"array set tableitemarray $tableitemdatalist"<<endl;
cout<<"array set tableitemarraycopy $tableitemdatalist"<<endl;
cout<<"set localTable [toplevel .tableitem]"<<endl;
cout<<"grab set $localTable"<<endl;
cout<<"wm title $localTable  [format \"%s:%s  %s:%s\" \\"<<endl;
cout<<"[::msgcat::mc \"Material ID \"] $tableitemarray(_ID) \\"<<endl;
cout<<"[::msgcat::mc \"Material Name \"] $tableitemarray(_NAME)]"<<endl;
cout<<"set index 0"<<endl;
cout<<"foreach key  [lsort -dictionary [array names tableitemarray]] {"<<endl;
cout<<"set keyname [::msgcat::mc $key]"<<endl;
cout<<"switch -exact -- $key {"<<endl;
cout<<"_ID   {set keyname [::msgcat::mc \"Material ID \"]}"<<endl;
cout<<"_NAME {set keyname [::msgcat::mc \"Material Name \"]}"<<endl;
cout<<"_TYPE {set keyname [::msgcat::mc \"Material Type \"]}"<<endl;
cout<<"EX   { if {$theunit==\"SI\"} {lappend keyname \"(Pa)\"}    else { lappend keyname \"(Mpa)\"} }"<<endl;
cout<<"TM   { if {$theunit==\"SI\"} {lappend keyname \"(Pa)\"}    else { lappend keyname \"(Mpa)\"} }"<<endl;
cout<<"YS   { if {$theunit==\"SI\"} {lappend keyname \"(Pa)\"}    else { lappend keyname \"(Mpa)\"} }"<<endl;
cout<<"DENS { if {$theunit==\"SI\"} {lappend keyname [::msgcat::mc \"Kg/m2\"] } else { lappend keyname [::msgcat::mc \"T/mm2\"]} }"<<endl;
cout<<"}"<<endl;
cout<<"set label_property [label $localTable.label_$key \\"<<endl;
cout<<"-text $keyname  \\"<<endl;
cout<<"-font $font(content) ]"<<endl;
cout<<"set entry_property [entry $localTable.entry_$key \\"<<endl;
cout<<"-textvariable  [scope tableitemarray($key)] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"grid $label_property -row $index -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $entry_property -row $index -column 1 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"incr index"<<endl;
cout<<"}"<<endl;
cout<<"set btn_ok [button $localTable.btn_ok \\"<<endl;
cout<<"-text [::msgcat::mc \"Ok \"]  \\"<<endl;
cout<<"-width 8 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [code ok_tableonclick]]"<<endl;
cout<<"set btn_cancel [button $localTable.btn_cancel \\"<<endl;
cout<<"-text [::msgcat::mc \"Cancel \"]  \\"<<endl;
cout<<"-width 8 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command { destroy .tableitem }]"<<endl;
cout<<"grid $btn_ok     -row $index -column 0   -pady 6m"<<endl;
cout<<"grid $btn_cancel -row $index -column 1   -pady 6m"<<endl;
cout<<"set width [expr 55*[llength [array names tableitemarray]]]"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-320)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-$width)/2}]"<<endl;
cout<<"wm geometry $localTable  320x$width+$x+$y"<<endl;
cout<<"wm transient $localTable"<<endl;
cout<<"}"<<endl;
cout<<"proc showTreeItem {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable selTreeNode"<<endl;
cout<<"variable font"<<endl;
cout<<"variable theunit"<<endl;
cout<<"variable treeproperty"<<endl;
cout<<"if {[info exists treeproperty]} {"<<endl;
cout<<"unset treeproperty"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .treeitem]} {"<<endl;
cout<<"destroy .treeitem]"<<endl;
cout<<"}"<<endl;
cout<<"if {[string match *root $selTreeNode]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set data  [queryXmlProperty $selTreeNode]"<<endl;
cout<<"array set treeproperty $data"<<endl;
cout<<"set localTree [toplevel .treeitem]"<<endl;
cout<<"grab set $localTree"<<endl;
cout<<"wm title $localTree [::msgcat::mc \"Material Name \"]:$treeproperty(_NAME)"<<endl;
cout<<"set index 0"<<endl;
cout<<"foreach key  [lsort -dictionary [array names treeproperty]] {"<<endl;
cout<<"set keyname [::msgcat::mc $key]"<<endl;
cout<<"switch -exact -- $key {"<<endl;
cout<<"_NAME {set keyname [::msgcat::mc \"Material Name \"]}"<<endl;
cout<<"_TYPE {set keyname [::msgcat::mc \"Material Type \"]}"<<endl;
cout<<"EX   { if {$theunit==\"SI\"} {lappend keyname \"(Pa)\"}    else { lappend keyname \"(Mpa)\"} }"<<endl;
cout<<"TM   { if {$theunit==\"SI\"} {lappend keyname \"(Pa)\"}    else { lappend keyname \"(Mpa)\"} }"<<endl;
cout<<"YS   { if {$theunit==\"SI\"} {lappend keyname \"(Pa)\"}    else { lappend keyname \"(Mpa)\"} }"<<endl;
cout<<"DENS { if {$theunit==\"SI\"} {lappend keyname [::msgcat::mc \"Kg/m2\"] } else { lappend keyname [::msgcat::mc \"T/mm2\"]} }"<<endl;
cout<<"}"<<endl;
cout<<"set label_property [label $localTree.label_$key \\"<<endl;
cout<<"-text $keyname  \\"<<endl;
cout<<"-font $font(content) ]"<<endl;
cout<<"set entry_property [entry $localTree.entry_$key \\"<<endl;
cout<<"-textvariable  [scope treeproperty($key)] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"grid $label_property -row $index -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $entry_property -row $index -column 1 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"incr index"<<endl;
cout<<"}"<<endl;
cout<<"set btn_exit [button $localTree.btn_exit \\"<<endl;
cout<<"-text [::msgcat::mc \"Exit \"]  \\"<<endl;
cout<<"-width 8 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command { destroy .treeitem }]"<<endl;
cout<<"grid $btn_exit -row $index -column 0  -columnspan 2 -pady 5m"<<endl;
cout<<"set width [expr 55*[llength [array names treeproperty]]]"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-320)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-$width)/2}]"<<endl;
cout<<"wm geometry $localTree  320x$width+$x+$y"<<endl;
cout<<"wm transient $localTree"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_tableonclick {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable localTable"<<endl;
cout<<"variable tableitemarray"<<endl;
cout<<"variable tableitemarraycopy"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"set id_this    $tableitemarray(_ID)"<<endl;
cout<<"set id_last    $tableitemarraycopy(_ID)"<<endl;
cout<<"set name_this $tableitemarray(_NAME)"<<endl;
cout<<"set type_this $tableitemarray(_TYPE)"<<endl;
cout<<"if {[array get tableitemarray]==[array get tableitemarraycopy]} {"<<endl;
cout<<"destroy $localTable"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set ansysMatNumList [GetAnsysMatNumberList]"<<endl;
cout<<"if {$id_last!=$id_this} {"<<endl;
cout<<"if {[lsearch $ansysMatNumList  $id_this]>=0} {"<<endl;
cout<<"tk_messageBox  -parent $localTable -icon warning -title [::msgcat::mc \"Wrong Material Id \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Material Id %d is Existing! \" $id_this ]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"MPDE,ALL,$id_last\"} err"<<endl;
cout<<"catch {ans_sendcommand \"TBDE,ALL,$id_last\"} err"<<endl;
cout<<"catch {ans_sendcommand \"MPTEMP,1,0\"} err"<<endl;
cout<<"foreach key [array names tableitemarray]  {"<<endl;
cout<<"switch -exact -- $key {"<<endl;
cout<<"_ID   {}"<<endl;
cout<<"_NAME {"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_name\"  $id_last]} err"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_name,'%s'\"  $id_this $name_this]} err"<<endl;
cout<<"}"<<endl;
cout<<"_TYPE {"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_type\"  $id_last]} err"<<endl;
cout<<"catch {ans_sendcommand [format \"*set,_mat_%s_type,'%s'\"  $id_this $type_this]} err"<<endl;
cout<<"}"<<endl;
cout<<"TM   {set bkin_tm $tableitemarray($key)}"<<endl;
cout<<"YS   {set bkin_ys $tableitemarray($key)}"<<endl;
cout<<"default {"<<endl;
cout<<"catch {ans_sendcommand  \"MPDATA,$key,$id_this,,$tableitemarray($key)\"} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {[info exists bkin_tm] && [info exists bkin_ys]} {"<<endl;
cout<<"catch {ans_sendcommand \"TB,BKIN,$id_this,1,2,1 \"} err"<<endl;
cout<<"catch {ans_sendcommand \"TBTEMP,0\"} err"<<endl;
cout<<"catch {ans_sendcommand \"TBDATA,,$bkin_ys,$bkin_tm\"} err"<<endl;
cout<<"}"<<endl;
cout<<"set sel [$table curselection]"<<endl;
cout<<"set tabledata($sel,0)  $id_this"<<endl;
cout<<"set tabledata($sel,1)  $name_this"<<endl;
cout<<"set tabledata($sel,2)  $type_this"<<endl;
cout<<"destroy $localTable"<<endl;
cout<<"}"<<endl;
cout<<"proc setModelUnit {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable lastunit"<<endl;
cout<<"variable theunit"<<endl;
cout<<"set rowNum [$table index end row]"<<endl;
cout<<"if {$rowNum>=0 && $theunit!=$lastunit} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Can not change the theunit of added Material! \"]"<<endl;
cout<<"set theunit $lastunit"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"/UNITS,$theunit\"} err"<<endl;
cout<<"set lastunit $theunit"<<endl;
cout<<"}"<<endl;
cout<<"proc chekcEnvironment {} \\"<<endl;
cout<<"{"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=17 && $env!=21 } {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message \"[msgcat::mc \"This Operation Need Environment: \"] \\n [msgcat::mc \"PREP7\"]\\n [msgcat::mc \"SOLU\"]\" \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return 1"<<endl;
cout<<"}"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::material::MaterialLibrary::main"<<endl;

}

//锟斤拷锟斤拷锟斤拷锟?
void CoutScript_ExportResult()
{
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval ::euidl::IO::ExportResult {} {"<<endl;
cout<<"proc main {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable apdlfile"<<endl;
cout<<"variable optionallist"<<endl;
cout<<"variable selectedlist"<<endl;
cout<<"variable caseid"<<endl;
cout<<"variable casename"<<endl;
cout<<"variable caseproperty"<<endl;
cout<<"variable projectname"<<endl;
cout<<"variable projectproperty"<<endl;
cout<<"variable projectunits"<<endl;
cout<<"variable xmlfile"<<endl;
cout<<"variable cdbcheck"<<endl;
cout<<"variable xmlcheck"<<endl;
cout<<"variable cdbfile"<<endl;
cout<<"variable btnok"<<endl;
cout<<"variable projectCtrls"<<endl;
cout<<"variable cdbfileCtrls"<<endl;
cout<<"variable xmlfileCtrls"<<endl;
cout << "set path "<<path << endl;
cout<<"msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set apdlfile [file join [file dirname $path] apdl  ExportResult.apdl]"<<endl;
cout<<"set png_import [file join $path images import24x24.png]"<<endl;
cout<<"if [winfo exists .exportwindow] {"<<endl;
cout<<"wm deiconify .exportwindow"<<endl;
cout<<"raise .exportwindow"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .exportwindow]"<<endl;
cout<<"set font_cn  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font_bold {\"Microsoft YaHei\" 12 bold}"<<endl;
cout<<"wm title $parent [msgcat::mc \"Export Result \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-550)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-700)/2}]"<<endl;
cout<<"wm geometry .exportwindow 550x700+$x+$y"<<endl;
cout<<"set projectCtrls(label_name) [label $parent.label_projectname \\"<<endl;
cout<<"-text \"[msgcat::mc \"Project Name \"]:\" \\"<<endl;
cout<<"-font $font_bold]"<<endl;
cout<<"set projectCtrls(entry_name) [entry $parent.entry_projectname \\"<<endl;
cout<<"-textvariable [scope projectname] \\"<<endl;
cout<<"-width 14\\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set label_projectunits [label $parent.label_projectunits \\"<<endl;
cout<<"-text \"[msgcat::mc \"Model Units \"]:\" \\"<<endl;
cout<<"-font $font_bold]"<<endl;
cout<<"set combo_projectunits [euidl::combobox $parent.combo_projectunits \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-variable [scope projectunits]]"<<endl;
cout<<"set projectCtrls(label_property) [label $parent.label_projectProperty \\"<<endl;
cout<<"-text \"[msgcat::mc \"Project Property \"]:\" \\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set projectCtrls(entry_property) [entry $parent.entry_projectProperty \\"<<endl;
cout<<"-textvariable [scope projectproperty] \\"<<endl;
cout<<"-width 48\\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set cdbfileCtrls(label_tips) [label $parent.label_cdbtips \\"<<endl;
cout<<"-text \"[msgcat::mc \"Please Select Cdb File \"]:\" \\"<<endl;
cout<<"-font $font_bold]"<<endl;
cout<<"set cdbfileCtrls(entry_file) [entry $parent.entry_cdbfile  \\"<<endl;
cout<<"-font $font_cn  \\"<<endl;
cout<<"-textvariable [scope cdbfile]]"<<endl;
cout<<"set cdbfileCtrls(btn_file) [euidl::button $parent.btn_cdbfile \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Please Select Cdb File \"] \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-imagefile $png_import \\"<<endl;
cout<<"-command [list [code selectfile] cdb]]"<<endl;
cout<<"set frameExport [labelframe $parent.frameExport \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-text [msgcat::mc \"Export Data Type \"]]"<<endl;
cout<<"set checkbtn_cdb [euidl::checkbutton $parent.checkbtn_cdb \\"<<endl;
cout<<"-font $font_cn\\"<<endl;
cout<<"-command [code ChangeExportType]\\"<<endl;
cout<<"-text [msgcat::mc \"Export Cdb File \"]\\"<<endl;
cout<<"-variable [scope cdbcheck]]"<<endl;
cout<<"set checkbtn_xml [euidl::checkbutton $parent.checkbtn_xml \\"<<endl;
cout<<"-font $font_cn\\"<<endl;
cout<<"-text [msgcat::mc \"Export LoadCase File \"]\\"<<endl;
cout<<"-variable [scope xmlcheck]\\"<<endl;
cout<<"-command [code ChangeExportType]]"<<endl;
cout<<"pack $checkbtn_cdb $checkbtn_xml -in  $frameExport -side left -padx 12m -pady 1m"<<endl;
cout<<"grid $frameExport -row 0 -column 0  -columnspan 3 -sticky nsew"<<endl;
cout<<"grid $projectCtrls(label_name)  -row 1 -column 0 -sticky w -pady 2m"<<endl;
cout<<"grid $projectCtrls(entry_name)  -row 1 -column 0 -sticky e -pady 2m"<<endl;
cout<<"grid $label_projectunits   -row 1 -column 2 -sticky w -pady 2m"<<endl;
cout<<"grid $combo_projectunits  -row 1 -column 2 -sticky e -pady 2m"<<endl;
cout<<"grid $projectCtrls(label_property)  -row 2  -column 0 -sticky w -pady 2m"<<endl;
cout<<"grid $projectCtrls(entry_property)  -row 2 -column 0 -columnspan 3 -sticky e -pady 2m"<<endl;
cout<<"grid $cdbfileCtrls(label_tips) -row 3 -column 0 -columnspan 2 -sticky nw -pady 2m"<<endl;
cout<<"grid $cdbfileCtrls(btn_file) -row 3 -column 2 -pady 2m"<<endl;
cout<<"grid $cdbfileCtrls(entry_file) -row 4 -column 0 -columnspan 3 -sticky nsew"<<endl;
cout<<"set xmlfileCtrls(frame_Optional)   [labelframe $parent.frame_Optional \\"<<endl;
cout<<"-text [msgcat::mc \"Optional Result \"] \\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set xmlfileCtrls(frame_Selected)   [labelframe $parent.frame_Selected \\"<<endl;
cout<<"-text [msgcat::mc \"Selected Result \"] \\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set frame_AddDel [frame $parent.frame_AddDel ]"<<endl;
cout<<"set frame_OkCancel [frame $parent.frame_OkCancel]"<<endl;
cout<<"set scrollBar_Optional [scrollbar $parent.scrollBar_Optional \\"<<endl;
cout<<"-orient vertical \\"<<endl;
cout<<"-width 1\\"<<endl;
cout<<"-command {.exportwindow.listbox_optional yview}]"<<endl;
cout<<"set scrollBar_Selected [scrollbar $parent.scrollBar_Selected\\"<<endl;
cout<<"-orient vertical \\"<<endl;
cout<<"-width 1\\"<<endl;
cout<<"-command {.exportwindow.listbox_selected yview}]"<<endl;
cout<<"set xmlfileCtrls(listbox_Optional) [listbox $parent.listbox_optional \\"<<endl;
cout<<"-yscroll \"$scrollBar_Optional set\" \\"<<endl;
cout<<"-listvariable [scope optionallist]\\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-width 19 \\"<<endl;
cout<<"-height 8 \\"<<endl;
cout<<"-selectmode extended]"<<endl;
cout<<"set xmlfileCtrls(listbox_Selected) [listbox $parent.listbox_selected\\"<<endl;
cout<<"-yscroll \"$scrollBar_Selected set\" \\"<<endl;
cout<<"-listvariable [scope selectedlist] \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-width 19 \\"<<endl;
cout<<"-height 8 \\"<<endl;
cout<<"-selectmode extended]"<<endl;
cout<<"set xmlfileCtrls(label_caseid) [label $parent.label_caseid \\"<<endl;
cout<<"-text \"[msgcat::mc \"Case ID \"]:\" \\"<<endl;
cout<<"-font $font_bold]"<<endl;
cout<<"set xmlfileCtrls(combo_caseid) [euidl::combobox $parent.combo_caseid \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-command [code autoCompleteData]\\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-variable [scope caseid]]"<<endl;
cout<<"set xmlfileCtrls(label_casename) [label $parent.label_casename \\"<<endl;
cout<<"-text \"[msgcat::mc \"Case Name \"]:\" \\"<<endl;
cout<<"-font $font_bold]"<<endl;
cout<<"set xmlfileCtrls(entry_casename) [entry $parent.entry_casename \\"<<endl;
cout<<"-textvariable [scope casename] \\"<<endl;
cout<<"-width 14\\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set frame_CaseProperty [frame $parent.frame_caseproperty]"<<endl;
cout<<"set xmlfileCtrls(label_caseproperty) [label $parent.label_caseproperty \\"<<endl;
cout<<"-text \"[msgcat::mc \"Property \"]:\" \\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set xmlfileCtrls(entry_caseproperty) [entry $parent.entry_caseproperty \\"<<endl;
cout<<"-textvariable [scope caseproperty] \\"<<endl;
cout<<"-width 48\\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set xmlfileCtrls(btnadd) [button $parent.btn_add \\"<<endl;
cout<<"-text \"[msgcat::mc \"Add \"]>>\" \\"<<endl;
cout<<"-width 7 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-command [namespace code button_add_click]]"<<endl;
cout<<"set xmlfileCtrls(btndel) [button $parent.btn_del \\"<<endl;
cout<<"-text \"[msgcat::mc \"Del \"]<<\" \\"<<endl;
cout<<"-width 7\\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-command [namespace code button_del_click]]"<<endl;
cout<<"set xmlfileCtrls(label_xmltips) [label $parent.label_xmltips \\"<<endl;
cout<<"-text \"[msgcat::mc \"Please Select LoadCase File \"]:\" \\"<<endl;
cout<<"-font $font_bold]"<<endl;
cout<<"set xmlfileCtrls(entry_xmlfile) [entry $parent.entry_xmlfile  \\"<<endl;
cout<<"-font $font_cn  \\"<<endl;
cout<<"-textvariable [scope xmlfile]]"<<endl;
cout<<"set xmlfileCtrls(btn_xmlfile) [euidl::button $parent.btn_xmlfile \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Please Select LoadCase File \"] \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-imagefile $png_import \\"<<endl;
cout<<"-command [list [code selectfile] xml]]"<<endl;
cout<<"set btnok [button $parent.btn_ok\\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-font $font_cn  \\"<<endl;
cout<<"-width 6\\"<<endl;
cout<<"-command [namespace code onButtonOkClick]]"<<endl;
cout<<"set btncancel [button $parent.btn_cancel \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font_cn  \\"<<endl;
cout<<"-width 6\\"<<endl;
cout<<"-command {destroy .exportwindow}]"<<endl;
cout<<"$xmlfileCtrls(combo_caseid) insert list end [list 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9]"<<endl;
cout<<"$combo_projectunits insert list end [list \"\" \"\" \"m-Pa\" \"m-Pa\" \"m-Kpa\" \"m-Kpa\"  \"m-Mpa\" \"m-Mpa\" \"mm-Mpa\" \"mm-Mpa\"]"<<endl;
cout<<"grid $xmlfileCtrls(label_casename)  -row 5 -column 0 -sticky w -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(entry_casename)  -row 5 -column 0 -sticky e -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(label_caseid)  -row 5 -column 2 -sticky w -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(combo_caseid)  -row 5 -column 2 -sticky e -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(label_caseproperty)  -row 6 -column 0 -sticky w -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(entry_caseproperty)   -row 6 -column 0 -columnspan 3 -sticky e -pady 2m"<<endl;
cout<<"pack  $xmlfileCtrls(listbox_Optional) $scrollBar_Optional \\"<<endl;
cout<<"-in $xmlfileCtrls(frame_Optional) -side left -fill both -padx 2m -pady 4m"<<endl;
cout<<"grid $xmlfileCtrls(frame_Optional) -row 7 -column 0 -sticky nsew"<<endl;
cout<<"pack $xmlfileCtrls(btnadd) $xmlfileCtrls(btndel)  -in $frame_AddDel -side top -pady 5m"<<endl;
cout<<"grid $frame_AddDel    -row 7 -column 1  -padx 1m"<<endl;
cout<<"pack $xmlfileCtrls(listbox_Selected)  $scrollBar_Selected \\"<<endl;
cout<<"-in $xmlfileCtrls(frame_Selected) -fill y -side left -padx 2m -pady 4m"<<endl;
cout<<"grid $xmlfileCtrls(frame_Selected) -row 7 -column 2 -sticky nsew"<<endl;
cout<<"grid $xmlfileCtrls(label_xmltips)  -row 8 -column 0 -columnspan 2 -sticky nw -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(btn_xmlfile) -row 8 -column 2 -pady 2m"<<endl;
cout<<"grid $xmlfileCtrls(entry_xmlfile) -row 9 -column 0 -columnspan 3 -sticky nsew"<<endl;
cout<<"pack $btnok  $btncancel -in $frame_OkCancel -padx 25m  -side left -fill x"<<endl;
cout<<"grid $frame_OkCancel  -row 10 -column 0 -columnspan 3 -sticky nsew  -pady 4m"<<endl;
cout<<"::euidl::IO::ExportResult::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc selectfile {filetype} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cdbfile"<<endl;
cout<<"variable xmlfile"<<endl;
cout<<"variable caseid"<<endl;
cout<<"variable projectname"<<endl;
cout<<"set projectname [string trim $projectname]"<<endl;
cout<<"set xmlfilename [format \"%s-case-%s.xml\" $projectname $caseid]"<<endl;
cout<<"set cdbfilename [format \"%s.cdb\" $projectname]"<<endl;
cout<<"if {$filetype==\"xml\"} {"<<endl;
cout<<"set xmlfile [tk_getSaveFile -initialfile $xmlfilename -filetypes {{xml .xml}}]"<<endl;
cout<<"} else {"<<endl;
cout<<"set cdbfile [tk_getSaveFile -initialfile $cdbfilename -filetypes {{cdb .cdb}}]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc ChangeExportType {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable xmlcheck"<<endl;
cout<<"variable cdbcheck"<<endl;
cout<<"variable projectCtrls"<<endl;
cout<<"variable xmlfileCtrls"<<endl;
cout<<"variable cdbfileCtrls"<<endl;
cout<<"set state_xml [expr $xmlcheck==1?\"normal\":\"disabled\"]"<<endl;
cout<<"set state_cdb [expr $cdbcheck==1?\"normal\":\"disabled\"]"<<endl;
cout<<"foreach name [array names projectCtrls] {"<<endl;
cout<<"if {[string match \"*property\" $name]} {"<<endl;
cout<<"$projectCtrls($name) configure -state $state_cdb"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"foreach name [array names cdbfileCtrls] {"<<endl;
cout<<"$cdbfileCtrls($name) configure -state $state_cdb"<<endl;
cout<<"}"<<endl;
cout<<"foreach name [array names xmlfileCtrls] {"<<endl;
cout<<"if {[string match \"frame*\" $name]} {"<<endl;
cout<<"$xmlfileCtrls($name) configure -foreground [expr $xmlcheck==1?\"black\":\"gray\"]"<<endl;
cout<<"} else {"<<endl;
cout<<"$xmlfileCtrls($name) configure -state $state_xml"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc onButtonOkClick {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable btnok"<<endl;
cout<<"variable cdbcheck"<<endl;
cout<<"variable xmlcheck"<<endl;
cout<<"variable projectname"<<endl;
cout<<"variable projectproperty"<<endl;
cout<<"variable projectunits"<<endl;
cout<<"variable caseid"<<endl;
cout<<"variable casename"<<endl;
cout<<"variable caseproperty"<<endl;
cout<<"variable cdb_export"<<endl;
cout<<"variable xml_export"<<endl;
cout<<"set cdb_export 0"<<endl;
cout<<"set xml_export 0"<<endl;
cout<<"if {[exportValidation]==1} {"<<endl;
cout<<"$btnok configure -relief sunken"<<endl;
cout<<"$btnok configure -state  disabled"<<endl;
cout<<"catch {ans_sendcommand \"ALLSEL,ALL\"} err"<<endl;
cout<<"catch {ans_sendcommand \"*set,_PROJECT_UNITS,'$projectunits'\"} err"<<endl;
cout<<"if {$cdb_export==1} {"<<endl;
cout<<"catch {ans_sendcommand \"*set,_PROJECT_NAME,'$projectname'\"} err"<<endl;
cout<<"catch {ans_sendcommand \"*set,_PROJECT_PROPERTY,'$projectproperty'\"} err"<<endl;
cout<<"exportCdb"<<endl;
cout<<"}"<<endl;
cout<<"if {$xml_export==1} {"<<endl;
cout<<"set casename_index     [format \"_LOADCASE_%s_NAME\"     $caseid]"<<endl;
cout<<"set caseproperty_index [format \"_LOADCASE_%s_PROPERTY\" $caseid]"<<endl;
cout<<"catch {ans_sendcommand \"*set,$casename_index,'$casename'\"} err"<<endl;
cout<<"catch {ans_sendcommand \"*set,$caseproperty_index,'$caseproperty'\"} err"<<endl;
cout<<"exportXml"<<endl;
cout<<"}"<<endl;
cout<<"} else {"<<endl;
cout<<"$btnok configure -relief raised"<<endl;
cout<<"$btnok configure -state  normal"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"$btnok configure -relief raised"<<endl;
cout<<"$btnok configure -state  normal"<<endl;
cout<<"destroy $parent"<<endl;
cout<<"set msg [tk_messageBox -icon info \\"<<endl;
cout<<"-title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Export Is Done! \"]]"<<endl;
cout<<"}"<<endl;
cout<<"proc exportValidation {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable cdbcheck"<<endl;
cout<<"variable xmlcheck"<<endl;
cout<<"variable xmlfile"<<endl;
cout<<"variable cdbfile"<<endl;
cout<<"variable projectname"<<endl;
cout<<"variable casename"<<endl;
cout<<"variable projectunits"<<endl;
cout<<"variable selectedlist"<<endl;
cout<<"variable cdb_export"<<endl;
cout<<"variable xml_export"<<endl;
cout<<"if {$cdbcheck==0 && $xmlcheck==0} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon info \\"<<endl;
cout<<"-title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"No Result Was Select! \"]"<<endl;
cout<<"return  0"<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $projectname]==\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Project Name Can Not Be Empty! \"]"<<endl;
cout<<"return  0"<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $projectunits]==\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Please Select Current Units! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"if {$cdbcheck==1} {"<<endl;
cout<<"if {[string trim $cdbfile]==\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Wrong File Path Of CDB! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"if {[regexp -all -inline -- {[\\u4e00-\\u9fa5]|\\s+}  $cdbfile]!=\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"CDB File Path Contains Space or Chinese! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"set cdb_export 1"<<endl;
cout<<"}"<<endl;
cout<<"if {$xmlcheck==1} {"<<endl;
cout<<"if {[string trim $xmlfile]==\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Wrong File Path Of XML! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"if {[regexp -all -inline -- {[\\u4e00-\\u9fa5]|\\s+}  $xmlfile]!=\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"XML File Path Contains Space or Chinese! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $casename]==\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Case Name Can Not Be Empty! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"if {[llength $selectedlist]==0} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"No Result type is Selected! \"]"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"set essentials {Sx Sy Sz Sxy Sxz Syz S1}"<<endl;
cout<<"foreach var $essentials {"<<endl;
cout<<"if {[lsearch $selectedlist $var]<0} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [msgcat::mc \"Failed Export Result \"] \\"<<endl;
cout<<"-message  \"[msgcat::mc \"Output Results Must Contain: \"]$var\\n[msgcat::mc \"Else Can Not Solve! \"]\""<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"set xml_export 1"<<endl;
cout<<"}"<<endl;
cout<<"return  1"<<endl;
cout<<"}"<<endl;
cout<<"proc exportCdb {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cdbfile"<<endl;
cout<<"catch {ans_sendcommand \"CDWRITE,ALL,'$cdbfile'\"} err"<<endl;
cout<<"}"<<endl;
cout<<"proc exportXml {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable apdlfile"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable selectedlist"<<endl;
cout<<"variable xmlfile"<<endl;
cout<<"variable caseid"<<endl;
cout<<"variable casename"<<endl;
cout<<"variable caseproperty"<<endl;
cout<<"variable projectname"<<endl;
cout<<"variable projectunits"<<endl;
cout<<"catch {ans_sendcommand \"/UIS,MSGPOP,3\"} err"<<endl;
cout<<"set resultlen [llength $selectedlist]"<<endl;
cout<<"set results {}"<<endl;
cout<<"set MMMpa  {Ux 1 Uy 1 Uz 1 Usum 1 \\"<<endl;
cout<<"Sx 1 Sy 1 Sz 1 S1 1  S2 1 S3 1 \\"<<endl;
cout<<"Sxy 1 Syz 1 Sxz 1 Seqv 1}"<<endl;
cout<<"set MMpa_MMMpa {Ux 1000 Uy 1000 Uz 1000 Usum 1000 \\"<<endl;
cout<<"Sx 1 Sy 1 Sz 1 S1 1  S2 1 S3 1 \\"<<endl;
cout<<"Sxy 1 Syz 1 Sxz 1 Seqv 1}"<<endl;
cout<<"set MPa_MMMpa  {Ux 1000 Uy 1000 Uz 1000 Usum 1000 \\"<<endl;
cout<<"Sx 1.0e-6 Sy 1.0e-6 Sz 1.0e-6 S1 1.0e-6 S2 1.0e-6 S3 1.0e-6 Sxy \\"<<endl;
cout<<"1.0e-6 Syz 1.0e-6 Sxz 1.0e-6 Seqv 1.0e-6}"<<endl;
cout<<"set MKpa_MMMpa  {Ux 1000 Uy 1000 Uz 1000 Usum 1000 \\"<<endl;
cout<<"Sx 1.0e-3 Sy 1.0e-3 Sz 1.0e-3 S1 1.0e-3 S2 1.0e-3 S3 1.0e-3 Sxy \\"<<endl;
cout<<"1.0e-3 Syz 1.0e-3 Sxz 1.0e-3 Seqv 1.0e-3}"<<endl;
cout<<"if {$projectunits==\"m-Kpa\"} {"<<endl;
cout<<"array set theunitList $MKpa_MMMpa"<<endl;
cout<<"} elseif {$projectunits==\"m-Pa\"} {"<<endl;
cout<<"array set theunitList $MPa_MMMpa"<<endl;
cout<<"} elseif {$projectunits==\"m-Mpa\"} {"<<endl;
cout<<"array set theunitList $MMpa_MMMpa"<<endl;
cout<<"} else {"<<endl;
cout<<"array set theunitList $MMMpa"<<endl;
cout<<"}"<<endl;
cout<<"if {$resultlen>=12} {"<<endl;
cout<<"set len [expr $resultlen/2]"<<endl;
cout<<"incr len -1"<<endl;
cout<<"lappend results [lrange $selectedlist 0 $len]"<<endl;
cout<<"incr len"<<endl;
cout<<"lappend results [lrange $selectedlist $len end]"<<endl;
cout<<"} else {"<<endl;
cout<<"lappend results $selectedlist"<<endl;
cout<<"}"<<endl;
cout<<"set fl [open $apdlfile w]"<<endl;
cout<<"puts $fl \"*cfopen,'$xmlfile'\""<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('<?xml version=\"1.0\" encoding=\"gb2312\"?>')}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('<Results>')}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl [format {('<Project name=\"%s\">')} $projectname]"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl [format {('<Case id=\"%s\" name=\"%s\" property=\"%s\">')} $caseid $casename $caseproperty]"<<endl;
cout<<"puts $fl {*get,_count,node,,count}"<<endl;
cout<<"puts $fl {*set,_num,0}"<<endl;
cout<<"puts $fl {*do,i,1,_count}"<<endl;
cout<<"puts $fl {_num=ndnext(_num)}"<<endl;
cout<<"puts $fl {*if,_num,GT,0,then}"<<endl;
cout<<"foreach var $selectedlist  {"<<endl;
cout<<"set args [parseLabel $var]"<<endl;
cout<<"puts $fl \"*get,_$var,node,_num,$args\""<<endl;
cout<<"}"<<endl;
cout<<"foreach var $selectedlist  {"<<endl;
cout<<"if {[array get theunitList $var ]!=\"\"} {"<<endl;
cout<<"puts $fl \"*set,_$var,_$var*$theunitList($var)\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"puts $fl  { *vwrite,chrval(_num) }"<<endl;
cout<<"puts $fl  {('<Node id=\"',A8,'\">')}"<<endl;
cout<<"foreach result $results {"<<endl;
cout<<"set  line [join $result \",_\"]"<<endl;
cout<<"puts $fl  \"*vwrite,_$line\""<<endl;
cout<<"set line {}"<<endl;
cout<<"foreach var $result {"<<endl;
cout<<"lappend line [format \"'<%s>',E13.6,'</%s>'\" $var $var]"<<endl;
cout<<"}"<<endl;
cout<<"set  line [join $line \",/\"]"<<endl;
cout<<"puts $fl \"($line)\""<<endl;
cout<<"}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('</Node>')}"<<endl;
cout<<"puts $fl {*endif}"<<endl;
cout<<"puts $fl {*enddo}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('</Case>')}"<<endl;
cout<<"set etlist {}"<<endl;
cout<<"foreach {mat id} [ans_getlist TYPE] {"<<endl;
cout<<"if {[lindex $mat 1]==\"SOLID65\"} {"<<endl;
cout<<"lappend etlist $id"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {$etlist != {}} {"<<endl;
cout<<"set pts {53 60 67 74 81 88 95 102}"<<endl;
cout<<"set et0  [lindex  $etlist 0]"<<endl;
cout<<"puts $fl  \"ESEL,S,TYPE,,$et0\""<<endl;
cout<<"for {set i 1} {$i < [llength $etlist]} {incr i} {"<<endl;
cout<<"set  et   [lindex  $etlist $i]"<<endl;
cout<<"puts $fl  \"ESEL,A,TYPE,,$et\""<<endl;
cout<<"}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('<Damages>')}"<<endl;
cout<<"puts $fl  {*GET,_ecount,ELEM,,COUNT}"<<endl;
cout<<"puts $fl  {*SET,_enum,0}"<<endl;
cout<<"puts $fl  {*DO,I,1,_ecount}"<<endl;
cout<<"puts $fl  {_enum=ELNEXT(_enum)}"<<endl;
cout<<"puts $fl  {*IF,_enum,NE,0,THEN}"<<endl;
cout<<"for {set i 0 } {$i < [llength $pts]} {incr i} {"<<endl;
cout<<"set num [expr $i+1]"<<endl;
cout<<"set index [lindex $pts $i]"<<endl;
cout<<"puts $fl \"*GET,_c$num,ELEM,_enum,NMISC,$index\""<<endl;
cout<<"}"<<endl;
cout<<"puts $fl {*vwrite,chrval(_enum),_c1,_c2,_c3,c_4,_c5,_6,_c7,_c8}"<<endl;
cout<<"puts $fl {('<Element id=\"',A8,'\">',8F5.1,'</Element>')}"<<endl;
cout<<"puts $fl {*ENDIF}"<<endl;
cout<<"puts $fl {*ENDDO}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('</Damages>')}"<<endl;
cout<<"}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('</Project>')}"<<endl;
cout<<"puts $fl {*vwrite}"<<endl;
cout<<"puts $fl {('</Results>')}"<<endl;
cout<<"puts $fl {*cfclos}"<<endl;
cout<<"catch {close $fl} err"<<endl;
cout<<"catch {ans_sendcommand \"/INPUT,$apdlfile\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/UIS,MSGPOP,DEFA\"} err"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable optionallist"<<endl;
cout<<"variable selectedlist"<<endl;
cout<<"variable projectname"<<endl;
cout<<"variable caseid"<<endl;
cout<<"variable xmlcheck"<<endl;
cout<<"variable cdbcheck"<<endl;
cout<<"variable tipsFlag"<<endl;
cout<<"variable projectunits"<<endl;
cout<<"set index  \"_PROJECT_NAME\""<<endl;
cout<<"set flag [ans_getvalue PARM,$index,type]"<<endl;
cout<<"set projectunits \"\""<<endl;
cout<<"if {[string trim $flag]!=-1} {"<<endl;
cout<<"set projectname [string trim [ans_getvalue parm,$index,value]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set projectname [string trim [ans_getvalue \"ACTIVE,0,JOBNAM\"]]"<<endl;
cout<<"}"<<endl;
cout<<"set optionallist {}"<<endl;
cout<<"set selectedlist {}"<<endl;
cout<<"set caseid 1"<<endl;
cout<<"set cdbcheck 1"<<endl;
cout<<"set xmlcheck 1"<<endl;
cout<<"set tipsFlag 0"<<endl;
cout<<"set list1  {EPTOx EPTOy EPTOz EPTOxy EPTOyz EPTOxz EPTO1 EPTO2 EPTO3 EPTOeqv}"<<endl;
cout<<"set list2  {Ux Uy Uz Usum Sx Sy Sz Sxy Syz Sxz  S1 S2 S3 Seqv}"<<endl;
cout<<"set firstnode [ans_evalexpr \"ndnext(0)\"]"<<endl;
cout<<"catch {ans_sendcommand \"/UIS,MSGPOP,4\"} err"<<endl;
cout<<"foreach result $list1 {"<<endl;
cout<<"set args [parseLabel $result]"<<endl;
cout<<"if {[catch {set _tmp_ [ans_getvalue \"node,$firstnode,$args\"]} err]} {"<<endl;
cout<<"puts $err"<<endl;
cout<<"} else {"<<endl;
cout<<"lappend optionallist $result"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"foreach result $list2 {"<<endl;
cout<<"set args [parseLabel $result]"<<endl;
cout<<"if {[catch {set _tmp_ [ans_getvalue \"node,$firstnode,$args\"]} err]} {"<<endl;
cout<<"puts $err"<<endl;
cout<<"} else {"<<endl;
cout<<"lappend  selectedlist $result"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"/UIS,MSGPOP,DEFA\"} err"<<endl;
cout<<"ChangeExportType"<<endl;
cout<<"}"<<endl;
cout<<"proc parseLabel {var} \\"<<endl;
cout<<"{"<<endl;
cout<<"set arg1 [string index $var 0]"<<endl;
cout<<"if {$arg1==\"U\" ||$arg1==\"S\"} {"<<endl;
cout<<"set arg2 [string range $var 1 end]"<<endl;
cout<<"} else {"<<endl;
cout<<"set arg1 \"EPTO\""<<endl;
cout<<"set arg2 [string range $var 4 end]"<<endl;
cout<<"}"<<endl;
cout<<"return $arg1,$arg2"<<endl;
cout<<"}"<<endl;
cout<<"proc button_add_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable optionallist"<<endl;
cout<<"variable selectedlist"<<endl;
cout<<"variable xmlfileCtrls"<<endl;
cout<<"variable tipsFlag"<<endl;
cout<<"set templist $optionallist"<<endl;
cout<<"set sellist [$xmlfileCtrls(listbox_Optional) curselection]"<<endl;
cout<<"if {$sellist==\"\"} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $sellist {"<<endl;
cout<<"lset templist $sel  {}"<<endl;
cout<<"lappend selectedlist [$xmlfileCtrls(listbox_Optional) get $sel]"<<endl;
cout<<"}"<<endl;
cout<<"set optionallist {}"<<endl;
cout<<"foreach var $templist {"<<endl;
cout<<"if {![string match {} $var]} {"<<endl;
cout<<"lappend  optionallist $var"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {[llength $selectedlist]>8 && $tipsFlag==0} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon info \\"<<endl;
cout<<"-title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"Too Many Result is Selected! \"]"<<endl;
cout<<"set tipsFlag 1"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc button_del_click {args} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable optionallist"<<endl;
cout<<"variable selectedlist"<<endl;
cout<<"variable xmlfileCtrls"<<endl;
cout<<"set templist $selectedlist"<<endl;
cout<<"set sellist [$xmlfileCtrls(listbox_Selected) curselection]"<<endl;
cout<<"if {$sellist==\"\"} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $sellist {"<<endl;
cout<<"lset templist $sel  {}"<<endl;
cout<<"lappend optionallist [$xmlfileCtrls(listbox_Selected) get $sel]"<<endl;
cout<<"}"<<endl;
cout<<"set selectedlist {}"<<endl;
cout<<"foreach var $templist {"<<endl;
cout<<"if {![string match {} $var]} {"<<endl;
cout<<"lappend  selectedlist $var"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc autoCompleteData {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable caseid"<<endl;
cout<<"variable casename"<<endl;
cout<<"variable caseproperty"<<endl;
cout<<"set casename_index     [format \"_LOADCASE_%s_NAME\"     $caseid]"<<endl;
cout<<"set caseproperty_index [format \"_LOADCASE_%s_PROPERTY\" $caseid]"<<endl;
cout<<"if {[ans_getvalue parm,$casename_index,type]!=-1} {"<<endl;
cout<<"set casename [string trim [ans_getvalue parm,$casename_index,value]]"<<endl;
cout<<"}"<<endl;
cout<<"if {[ans_getvalue parm,$caseproperty_index,type]!=-1} {"<<endl;
cout<<"set caseproperty [string trim [ans_getvalue parm,$caseproperty_index,value]]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::IO::ExportResult::main"<<endl;

}

//锟斤拷锟斤拷ParaSolid模锟斤拷
void CoutScript_ImportParaSolid()
{
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval  ImportParaSolid {"<<endl;
cout<<"proc main {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable msg"<<endl;
cout<<"variable font_cn"<<endl;
cout<<"variable progressimport"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable  buttonok"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"::msgcat::mcload  [file join $path locale import]"<<endl;
cout<<"set png_import [file join $path images import24x24.png]"<<endl;
cout<<"if [winfo exists .importxtwindow] {"<<endl;
cout<<"wm deiconify .importxtwindow"<<endl;
cout<<"raise .importxtwindow"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .importxtwindow]"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Import ParaSolid Model \"]"<<endl;
cout<<"wm iconname $parent \"ImportParaSolid\""<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-360)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-160)/2}]"<<endl;
cout<<"set font_cn  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"wm geometry .importxtwindow  360x160+$x+$y"<<endl;
cout<<"set labeltips [label $parent.labeltips \\"<<endl;
cout<<"-text \"[::msgcat::mc \"Please Select ParaSolid File \"]:\" \\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set textfile [entry $parent.textfile \\"<<endl;
cout<<"-textvariable [scope filename] \\"<<endl;
cout<<"-font $font_cn]"<<endl;
cout<<"set buttonselect [euidl::button $parent.selectbtn \\"<<endl;
cout<<"-tooltip [::msgcat::mc \"Please Select ParaSolid File \"] \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-imagefile $png_import \\"<<endl;
cout<<"-command [code btn_select_click]]"<<endl;
cout<<"set frame_okcancel [frame $parent.frame_okcancel]"<<endl;
cout<<"set buttonok [button $parent.ok \\"<<endl;
cout<<"-text [::msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-width 8 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-command [code btn_ok_click] ]"<<endl;
cout<<"set buttoncancel   [button $parent.cancel \\"<<endl;
cout<<"-text [::msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-width 8 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-command {destroy .importxtwindow}]"<<endl;
cout<<"grid  $labeltips    -row 0 -column 0   -pady 4m"<<endl;
cout<<"grid  $buttonselect -row 0 -column 1"<<endl;
cout<<"grid  $textfile     -row 1 -column 0  -columnspan 2  -sticky ew"<<endl;
cout<<"grid $frame_okcancel -row 2 -column 0 -columnspan 2"<<endl;
cout<<"pack $buttonok $buttoncancel -in $frame_okcancel -side left -padx 8m -pady 6m"<<endl;
cout<<"ImportParaSolid::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_select_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable filename"<<endl;
cout<<"set filename [tk_getOpenFile -initialfile *.x_t -filetypes {{ParaSolid .x_t}}]"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_ok_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable  buttonok"<<endl;
cout<<"variable msg"<<endl;
cout<<"if {[regexp -all -inline -- {[\\u4e00-\\u9fa5]|\\s+}  $filename]!=\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [msgcat::mc \"File Path Contains Space or Chinese! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {![file exists $filename]} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning -title [::msgcat::mc \"Failed import model \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"File not exists,Please check the path! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set filedirname [file dirname $filename]"<<endl;
cout<<"set name_postfix [split [file tail $filename] .]"<<endl;
cout<<"set name [lindex $name_postfix 0]"<<endl;
cout<<"set postfix [lindex $name_postfix 1]"<<endl;
cout<<"set filesize [file size $filename]"<<endl;
cout<<"$buttonok configure -relief sunken"<<endl;
cout<<"$buttonok configure -state disabled"<<endl;
cout<<"ans_sendcommand  \"/NOPR\""<<endl;
cout<<"ans_sendcommand  \"~PARAIN,'$name','$postfix','$filedirname',ALL,0,0   \""<<endl;
cout<<"ans_sendcommand  \"/FACET,NORML\""<<endl;
cout<<"ans_sendcommand  \"/REPLOT\""<<endl;
cout<<"ans_sendcommand   \"VPLOT\""<<endl;
cout<<"ans_sendcommand   \"/GOPR\""<<endl;
cout<<"$buttonok configure -relief raised"<<endl;
cout<<"$buttonok configure -state normal"<<endl;
cout<<"destroy .importxtwindow"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable msg"<<endl;
cout<<"variable buttonok"<<endl;
cout<<"set filename {}"<<endl;
cout<<"set msg { }"<<endl;
cout<<"$buttonok configure -relief raised"<<endl;
cout<<"$buttonok configure -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"ImportParaSolid::main"<<endl;

}

//锟斤拷压锟斤拷
void CoutScript_PressureWave()
{
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval ::Customized::Util::WaveForce {"<<endl;
cout<<"proc main {} {\\"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable h1cent"<<endl;
cout<<"variable H"<<endl;
cout<<"variable Lm"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"variable png"<<endl;
cout<<"variable font"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set png(pick) [file join $path images pick24x24.png]"<<endl;
cout<<"set png(update) [file join $path images update24x24.png]"<<endl;
cout<<"set png(check) [file join $path images check24x24.png]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"if [winfo exists .waveforce] {"<<endl;
cout<<"wm deiconify .waveforce"<<endl;
cout<<"raise .waveforce"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .waveforce]"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Wave Force \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-400)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-460)/2}]"<<endl;
cout<<"wm geometry .waveforce 400x460+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"destroy .waveforce"<<endl;
cout<<"}"<<endl;
cout<<"set label_loadtype  [label $parent.label_loadtype \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Load Pattern \"] ]"<<endl;
cout<<"set combo_loadtype [euidl::combobox $parent.loadtype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope loadpattern] ]"<<endl;
cout<<"set combo_pick [euidl::combobox $parent.picktype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope picktype] \\"<<endl;
cout<<"-command [code changePickTypeEvent]]"<<endl;
cout<<"set btn_pick [euidl::button $parent.btn_pick \\"<<endl;
cout<<"-command [namespace code pick_node_area]   \\"<<endl;
cout<<"-imagefile $png(pick) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Nodes \"] ]"<<endl;
cout<<"set entry_pickinfo [entry $parent.entry_pickinfo \\"<<endl;
cout<<"-textvariable [scope selobjs] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-relief  ridge]"<<endl;
cout<<"set btn_selcurrent [euidl::button $parent.btn_selcurrent \\"<<endl;
cout<<"-command [namespace code selCurrentEvent]   \\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Current \"] ]"<<endl;
cout<<"set label_H [euidl::label $parent.label_H \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Mean WaveHeight \"]]"<<endl;
cout<<"set entry_H [entry  $parent.entry_H -width 10  \\"<<endl;
cout<<"-textvariable [scope H] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set label_Lm [euidl::label $parent.label_Lm \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Mean WaveLength \"]]"<<endl;
cout<<"set entry_Lm [entry  $parent.entry_Lm -width 10  \\"<<endl;
cout<<"-textvariable [scope Lm] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set label_h1cent [euidl::label $parent.label_h1cent  \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Height 1% \"]]"<<endl;
cout<<"set entry_h1cent  [euidl::entry  $parent.entry_h1cent  -width 10  \\"<<endl;
cout<<"-variable [scope h1cent] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_gravity [euidl::label $parent.label_d \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"GravityDirection: \"]]"<<endl;
cout<<"set combo_gravity [euidl::combobox $parent.gravity \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(en) \\"<<endl;
cout<<"-variable [scope gravity] ]"<<endl;
cout<<"set label_rw [euidl::label $parent.label_rw \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Water Weight \"]]"<<endl;
cout<<"set entry_rw [euidl::entry  $parent.entry_rw -width 10  \\"<<endl;
cout<<"-variable [scope rw] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_factor [euidl::label $parent.label_factor \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Partial Factor: \"]]"<<endl;
cout<<"set entry_factor [euidl::entry  $parent.entryfactor -width 10  \\"<<endl;
cout<<"-variable [scope factor] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set frame_oncancel [frame $parent.frame_oncancel]"<<endl;
cout<<"set btn_next [button $parent.btn_next  \\"<<endl;
cout<<"-text [msgcat::mc \"Next \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [namespace code buttonNextEvent] ]"<<endl;
cout<<"set btn_cancel [button $parent.btn_cancel  \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .waveforce}]"<<endl;
cout<<"grid $label_loadtype  -row 0 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_loadtype  -row 0 -column 1 -sticky w -pady 2m"<<endl;
cout<<"grid $label_gravity -row 1 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $combo_gravity -row 1 -column 1 -sticky w"<<endl;
cout<<"grid $combo_pick -row 2 -column 0  -sticky w -padx 2m"<<endl;
cout<<"grid $entry_pickinfo -row 2 -column 1 -sticky w"<<endl;
cout<<"grid $btn_pick -row 2 -column 2"<<endl;
cout<<"grid $btn_selcurrent -row 2 -column 3  -sticky w"<<endl;
cout<<"grid $label_H -row 4 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_H -row 4 -column 1 -sticky w"<<endl;
cout<<"grid $label_Lm -row 5 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_Lm -row 5 -column 1 -sticky w"<<endl;
cout<<"grid $label_h1cent -row 6 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_h1cent  -row 6 -column 1 -sticky w"<<endl;
cout<<"grid $label_rw -row 7 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_rw -row 7 -column 1 -sticky w"<<endl;
cout<<"grid $label_factor -row 8 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_factor -row 8 -column 1 -sticky w"<<endl;
cout<<"pack  $btn_next  $btn_cancel -in $frame_oncancel -side left -fill both  -padx 12m -pady 2m"<<endl;
cout<<"grid  $frame_oncancel  -row 9 -column 0   -columnspan 3   -sticky nsew"<<endl;
cout<<"$combo_pick insert list end [list [msgcat::mc \"Selected Areas: \"] \"AREAS\" [msgcat::mc \"Selected Nodes: \"] \"NODES\"]"<<endl;
cout<<"$combo_gravity insert list end [list X X -X -X  Y  Y -Y -Y  Z  Z  -Z -Z]"<<endl;
cout<<"$combo_loadtype  insert list end [list [msgcat::mc \"Replace \"] \"Replace\" [msgcat::mc \"Append \" ] \"Append\"]"<<endl;
cout<<"Customized::Util::WaveForce::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable last_picktype"<<endl;
cout<<"variable H"<<endl;
cout<<"variable Lm"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable slopei"<<endl;
cout<<"variable ki"<<endl;
cout<<"variable pwk"<<endl;
cout<<"variable Hp1f"<<endl;
cout<<"set loadpattern \"Replace\""<<endl;
cout<<"set picktype    \"NODES\""<<endl;
cout<<"set last_picktype  \"NODES\""<<endl;
cout<<"set factor 1.2"<<endl;
cout<<"set rw 10"<<endl;
cout<<"set pwk {}"<<endl;
cout<<"set H  {}"<<endl;
cout<<"set Lm  {}"<<endl;
cout<<"set Hp1f 0"<<endl;
cout<<"set slopei 1.61"<<endl;
cout<<"set ki 1.61"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"set acelX [ans_getvalue common,,acelcm,,real,22]"<<endl;
cout<<"set acelY [ans_getvalue common,,acelcm,,real,23]"<<endl;
cout<<"set acelZ [ans_getvalue common,,acelcm,,real,24]"<<endl;
cout<<"set  gravity \"-Z\""<<endl;
cout<<"if {$acelX>0} {set gravity X }"<<endl;
cout<<"if {$acelX<0} {set gravity -X }"<<endl;
cout<<"if {$acelY>0} {set gravity Y }"<<endl;
cout<<"if {$acelY<0} {set gravity -Y }"<<endl;
cout<<"if {$acelZ>0} {set gravity Z }"<<endl;
cout<<"if {$acelZ<0} {set gravity -Z }"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_node_area {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable picktype"<<endl;
cout<<"catch {ans_sendcommand )/NOPR} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_area,AREA} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"if {$picktype==\"NODES\"} {"<<endl;
cout<<"::uidl::callFnc Fnc_NSEL_S [namespace code picknode_callback]"<<endl;
cout<<"} else {"<<endl;
cout<<"::uidl::callFnc Fnc_ASEL_S [namespace code pickarea_callback]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc picknode_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .waveforce]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedNodes {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"for {set i 0} {$i < $node_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr ndnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend selobjs $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc pickarea_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .waveforce]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedAreas {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"set area_nums [ans_getvalue \"area,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"for {set i 0} {$i < $area_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr arnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend selobjs $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc getNodesAttachToArea {}\\"<<endl;
cout<<"{"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"set selnodes {}"<<endl;
cout<<"ans_sendcommand \"ASEL,NONE\""<<endl;
cout<<"foreach area $selobjs {"<<endl;
cout<<"ans_sendcommand \"ASEL,A,,,$area\""<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"NSLA,S,1\"} err]"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"for {set i 0} {$i < $node_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr ndnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend selnodes $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"return $selnodes"<<endl;
cout<<"}"<<endl;
cout<<"proc buttonNextEvent {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable H"<<endl;
cout<<"variable Lm"<<endl;
cout<<"variable h1cent"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable hz"<<endl;
cout<<"variable Hcr"<<endl;
cout<<"variable caseindex"<<endl;
cout<<"variable pi"<<endl;
cout<<"set pi 3.141592653"<<endl;
cout<<"set err {}"<<endl;
cout<<"if {[llength $selobjs]==0} {"<<endl;
cout<<"set err \"No Object Was Select! \""<<endl;
cout<<"}"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"set nodes [getNodesAttachToArea]"<<endl;
cout<<"} else {"<<endl;
cout<<"set nodes $selobjs"<<endl;
cout<<"}"<<endl;
cout<<"if {[llength $nodes]==0} {"<<endl;
cout<<"set err \"No Nodes Was Select!\""<<endl;
cout<<"}"<<endl;
cout<<"if {[catch {set t1 [expr ($Lm+2*$pi*$h1cent)/($Lm-2*$pi*$h1cent)]} error]} {"<<endl;
cout<<"set err \"Hcr Can Not Be Calculated! \""<<endl;
cout<<"}  else {"<<endl;
cout<<"if {$t1<=0} {"<<endl;
cout<<"set err \"Hcr Can Not Be Calculated! \""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"foreach var [list $H $Lm $h1cent $rw] {"<<endl;
cout<<"if {[string trim $var]==\"\"} {"<<endl;
cout<<"set err \"Empty Input Data!\""<<endl;
cout<<"break"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {![string match {} $err]} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc $err]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set Hcr   [expr 0.25*$Lm*log($t1)/$pi]"<<endl;
cout<<"set t2  [expr 2*$pi*$H/$Lm]"<<endl;
cout<<"set et2  [expr (exp($t2)+exp(-$t2))/(exp($t2)-exp(-$t2))]"<<endl;
cout<<"set hz   [expr $pi*$h1cent*$h1cent*$et2/$Lm]"<<endl;
cout<<"if {$H>=$Hcr && $H>=[expr 0.5*$Lm]} {"<<endl;
cout<<"set caseindex 1"<<endl;
cout<<"showSubCaseWindow"<<endl;
cout<<"} elseif {$H>=$Hcr && $H<[expr 0.5*$Lm]} {"<<endl;
cout<<"set caseindex 2"<<endl;
cout<<"showSubCaseWindow"<<endl;
cout<<"} else {"<<endl;
cout<<"set caseindex 3"<<endl;
cout<<"showSubCaseWindow"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc apply_load {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable pwk"<<endl;
cout<<"variable Hcr"<<endl;
cout<<"variable hz"<<endl;
cout<<"set direction_flag [get_direction $gravity]"<<endl;
cout<<"set direction [lindex $direction_flag 0]"<<endl;
cout<<"set flag [lindex $direction_flag 1]"<<endl;
cout<<"set nodedata {}"<<endl;
cout<<"foreach node $nodes {"<<endl;
cout<<"lappend nodedata [ans_evalexpr [format \"N%s(%s)\" $direction $node]]"<<endl;
cout<<"}"<<endl;
cout<<"set nodedata [lsort -real $nodedata]"<<endl;
cout<<"set min_val [lindex $nodedata 0]"<<endl;
cout<<"set max_val [lindex $nodedata end]"<<endl;
cout<<"set height [expr $max_val-$min_val]"<<endl;
cout<<"set stepsize [expr -$flag*$factor*$pwk]"<<endl;
cout<<"if {$loadpattern==\"Replace\"} {"<<endl;
cout<<"set cmd_sfcum \"SFCUM,PRES,REPL,1,1,\""<<endl;
cout<<"} else {"<<endl;
cout<<"set cmd_sfcum \"SFCUM,PRES,ADD,1,1,\""<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand $cmd_sfcum} err"<<endl;
cout<<"catch {ans_sendcommand \"SFGRAD,PRES,0,$direction,$max_val,$stepsize\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SF,ALL,PRES,0\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/PSF,PRES,NORM,2,0,1\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/REP,FAST\"} err"<<endl;
cout<<"puts \"######## Wave Force APDL Start ############\""<<endl;
cout<<"puts \">>>Hcr:$Hcr   hz:$hz\""<<endl;
cout<<"puts \">>>> $cmd_sfcum\""<<endl;
cout<<"puts \">>>> SFGRAD,PRES,0,$direction,$max_val,$stepsize\""<<endl;
cout<<"puts \">>>> SF,ALL,PRES,0\""<<endl;
cout<<"puts \"######## Wave Force APDL Finish ############\""<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )/GO} err"<<endl;
cout<<"after 500 {destroy .waveforce}"<<endl;
cout<<"}"<<endl;
cout<<"proc showSubCaseWindow {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout<<"variable caseindex"<<endl;
cout<<"variable H"<<endl;
cout<<"variable Lm"<<endl;
cout<<"variable h1cent"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable pi"<<endl;
cout<<"variable hz"<<endl;
cout<<"variable Hp1f"<<endl;
cout<<"variable slopei"<<endl;
cout<<"variable ki"<<endl;
cout<<"variable pwk"<<endl;
cout<<"if [winfo exists $parent] {"<<endl;
cout<<"lower $parent"<<endl;
cout<<"}"<<endl;
cout<<"if [winfo exists .waveforce.case] {"<<endl;
cout<<"destroy .waveforce.case"<<endl;
cout<<"}"<<endl;
cout<<"set case [toplevel .waveforce.case]"<<endl;
cout<<"wm title $case [::msgcat::mc \"Wave Force \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-380)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-200)/2}]"<<endl;
cout<<"wm geometry .waveforce.case 380x200+$x+$y"<<endl;
cout<<"wm protocol .waveforce.case WM_DELETE_WINDOW {"<<endl;
cout<<"destroy .waveforce.case"<<endl;
cout<<"}"<<endl;
cout<<"set label_Hp1f [euidl::label $case.label_Hp1f  \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Surplus WaveHeight \"]]"<<endl;
cout<<"set entry_Hp1f [entry  $case.entry_Hp1f  -width 10  \\"<<endl;
cout<<"-textvariable [scope Hp1f] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set label_slopei [euidl::label $case.label_slopei \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Slope \"]]"<<endl;
cout<<"set combo_slopei [euidl::combobox $case.combo_slopei \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(en) \\"<<endl;
cout<<"-variable [scope slopei]\\"<<endl;
cout<<"-command [code changeSlopeEvent]]"<<endl;
cout<<"set label_ki [euidl::label $case.label_ki  \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Slope Coefficient \"]]"<<endl;
cout<<"set entry_ki [entry  $case.entry_ki  \\"<<endl;
cout<<"-width 10  \\"<<endl;
cout<<"-textvariable [scope ki] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set label_step [euidl::label $case.label_p \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"WaveStepSize \"]]"<<endl;
cout<<"set entry_step [euidl::entry  $case.entry_p -width 10  \\"<<endl;
cout<<"-variable [scope pwk] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set btn_update_ss [euidl::button $case.btn_update_ss\\"<<endl;
cout<<"-command [code calculatePwk]   \\"<<endl;
cout<<"-imagefile $png(update) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Auto Calculate \"]]"<<endl;
cout<<"set frame_oncancel [frame $case.frame_oncancel]"<<endl;
cout<<"set btn_ok [button $case.btn_ok  \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command [namespace code apply_load] ]"<<endl;
cout<<"set btn_cancel [button $case.btn_cancel  \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command {destroy .waveforce.case}]"<<endl;
cout<<"if {$caseindex==1} {"<<endl;
cout<<"set pwk [expr 0.25*$rw*$Lm*($h1cent+$hz)]"<<endl;
cout<<"} elseif {$caseindex==2} {"<<endl;
cout<<"grid $label_Hp1f -row 0 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_Hp1f  -row 0 -column 1 -sticky w"<<endl;
cout<<"} else {"<<endl;
cout<<"grid $label_slopei -row 1 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $combo_slopei  -row 1 -column 1 -sticky w"<<endl;
cout<<"grid $label_ki -row 2 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_ki  -row 2 -column 1 -sticky w"<<endl;
cout<<"$combo_slopei insert list end [list \\"<<endl;
cout<<"\"1/10\" 1.89\\"<<endl;
cout<<"\"1/20\" 1.61\\"<<endl;
cout<<"\"1/30\"  1.48\\"<<endl;
cout<<"\"1/40\" 1.41\\"<<endl;
cout<<"\"1/50\"  1.36 \\"<<endl;
cout<<"\"1/60\" 1.33\\"<<endl;
cout<<"\"1/80\" 1.29\\"<<endl;
cout<<"\"<1/100\" 1.25]"<<endl;
cout<<"}"<<endl;
cout<<"grid $label_step -row 3 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_step -row 3 -column 1 -sticky w"<<endl;
cout<<"grid $btn_update_ss -row 3 -column 2  -padx 2m"<<endl;
cout<<"pack  $btn_ok  $btn_cancel -in $frame_oncancel -side left -fill both  -padx 12m -pady 2m"<<endl;
cout<<"grid  $frame_oncancel  -row 4 -column 0   -columnspan 3   -sticky nsew"<<endl;
cout<<"calculatePwk"<<endl;
cout<<"}"<<endl;
cout<<"proc changeSlopeEvent {} {"<<endl;
cout<<"variable slopei"<<endl;
cout<<"variable ki"<<endl;
cout<<"set ki $slopei"<<endl;
cout<<"}"<<endl;
cout<<"proc changePickTypeEvent {} {"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"variable last_picktype"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"if {$picktype==$last_picktype} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set last_picktype $picktype"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"$btn_pick configure -tooltip [msgcat::mc \"Select Areas \"]"<<endl;
cout<<"} else {"<<endl;
cout<<"$btn_pick configure -tooltip [msgcat::mc \"Select Nodes \"]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc selCurrentEvent {} {"<<endl;
cout<<"variable picktype"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"} else {"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc calculatePwk {} {"<<endl;
cout<<"variable caseindex"<<endl;
cout<<"variable H"<<endl;
cout<<"variable Lm"<<endl;
cout<<"variable h1cent"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable pi"<<endl;
cout<<"variable hz"<<endl;
cout<<"variable Hp1f"<<endl;
cout<<"variable ki"<<endl;
cout<<"variable pwk"<<endl;
cout<<"if {$caseindex==1} {"<<endl;
cout<<"set pwk [expr 0.25*$rw*$Lm*($h1cent+$hz)]"<<endl;
cout<<"} elseif {$caseindex==2} {"<<endl;
cout<<"set index [expr 2*$pi*$H/$Lm]"<<endl;
cout<<"set p1f [expr 2*$rw*$h1cent/(exp($index)+exp(-$index))]"<<endl;
cout<<"set pwk [expr 0.5*( ($h1cent+$hz)*($rw*$H+$p1f)+$Hp1f ) ]"<<endl;
cout<<"} else {"<<endl;
cout<<"set lambda 0.6"<<endl;
cout<<"if {$H > [expr 1.7*$h1cent]} {"<<endl;
cout<<"set lambda 0.5"<<endl;
cout<<"}"<<endl;
cout<<"set p0 [expr $ki*$rw*$h1cent]"<<endl;
cout<<"set pwk [expr 0.5*$p0*((1.5-0.5*$lambda)*$h1cent+(0.7+$lambda)*$H)]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc get_direction {thedirection} \\"<<endl;
cout<<"{"<<endl;
cout<<"if {[string length $thedirection]==1} {"<<endl;
cout<<"set direction $thedirection"<<endl;
cout<<"set  flag  -1.0"<<endl;
cout<<"} else {"<<endl;
cout<<"set direction [string index $thedirection 1]"<<endl;
cout<<"set flag 1.0"<<endl;
cout<<"}"<<endl;
cout<<"return [list $direction $flag]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::Customized::Util::WaveForce::main"<<endl;

}

//锟斤拷锟斤拷锟斤拷锟斤拷
void CoutScript_ManagerCase()
{
cout<<"encoding system euc-cn"<<endl;
cout<<"package require msgcat"<<endl;
cout<<"namespace eval ::euidl::Manager::LoadCase {} {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"variable lclistvar"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set png(import) [file join $path images import24x24.png]"<<endl;
cout<<"set png(pick) [file join $path images pick24x24.png]"<<endl;
cout<<"set png(new) [file join $path images new24x24.png]"<<endl;
cout<<"set png(del) [file join $path images delete24x24.png]"<<endl;
cout<<"set png(erase) [file join $path images erase24x24.png]"<<endl;
cout<<"set png(read) [file join $path images read24x24.png]"<<endl;
cout<<"set png(write) [file join $path images write24x24.png]"<<endl;
cout<<"set png(add) [file join $path images add24x24.png]"<<endl;
cout<<"set png(sub) [file join $path images sub24x24.png]"<<endl;
cout<<"set png(square) [file join $path images square24x24.png]"<<endl;
cout<<"set png(min) [file join $path images min24x24.png]"<<endl;
cout<<"set png(absmin) [file join $path images absmin24x24.png]"<<endl;
cout<<"set png(max) [file join $path images max24x24.png]"<<endl;
cout<<"set png(absmax) [file join $path images absmax24x24.png]"<<endl;
cout<<"set png(sqrt) [file join $path images sqrt24x24.png]"<<endl;
cout<<"set png(srss) [file join $path images srss24x24.png]"<<endl;
cout<<"set font(content)  {\"Microsoft YaHei\" 11 normal}"<<endl;
cout<<"set font(title)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"if {[chekcEnvironment]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .loadcasemanager]} {"<<endl;
cout<<"wm deiconify .loadcasemanager"<<endl;
cout<<"raise .loadcasemanager"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .loadcasemanager]"<<endl;
cout<<"wm title $parent [msgcat::mc \"LoadCases Manager \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-700)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-450)/2}]"<<endl;
cout<<"wm geometry $parent  700x450+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .lcapdl]} {"<<endl;
cout<<"destroy .lcapdl"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .cmpinfo]} {"<<endl;
cout<<"destroy .cmpinfo"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .lcnew]} {"<<endl;
cout<<"destroy .lcnew"<<endl;
cout<<"}"<<endl;
cout<<"destroy .loadcasemanager"<<endl;
cout<<"}"<<endl;
cout<<"set header [euidl::labeledframe $parent.header \\"<<endl;
cout<<"-font $font(title) -text [msgcat::mc \"Toolbar \"]]"<<endl;
cout<<"set btn_create [euidl::button $parent.btn_create \\"<<endl;
cout<<"-command [namespace code createLoadCase] \\"<<endl;
cout<<"-imagefile $png(new) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Create LoadCase \"]]"<<endl;
cout<<"set btn_delete [euidl::button $parent.btn_delete \\"<<endl;
cout<<"-command [list [code deleteLoadCase] \"SEL\"] \\"<<endl;
cout<<"-imagefile $png(del) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Delete Loadcase \"] ]"<<endl;
cout<<"set btn_write [euidl::button $parent.btn_write \\"<<endl;
cout<<"-command [namespace code writeLoadCase]\\"<<endl;
cout<<"-imagefile $png(write) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Write loadcase\"] ]"<<endl;
cout<<"set btn_erase [euidl::button $parent.btn_erase \\"<<endl;
cout<<"-command [list [code deleteLoadCase] \"ALL\"] \\"<<endl;
cout<<"-imagefile $png(erase) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Erase loadcase\"] ]"<<endl;
cout<<"set btn_read [euidl::button $parent.btn_read \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"READ\"]\\"<<endl;
cout<<"-imagefile $png(read) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Read loadcase\"] ]"<<endl;
cout<<"set btn_add [euidl::button $parent.btn_add \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(add) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"ADD\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Add loadcase\"]]"<<endl;
cout<<"set btn_sub [euidl::button $parent.btn_sub \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(sub) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"SUB\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Sub loadcase\"]]"<<endl;
cout<<"set btn_min [euidl::button $parent.btn_min \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-text \" Min \"\\"<<endl;
cout<<"-imagefile $png(min) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"MIN\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Min loadcase\"]]"<<endl;
cout<<"set btn_absmin [euidl::button $parent.btn_absmin \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(absmin) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"ABMIN\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Absolute min loadcase\"]]"<<endl;
cout<<"set btn_max [euidl::button $parent.btn_max \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(max) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"MAX\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Max loadcase\"]]"<<endl;
cout<<"set btn_absmax [euidl::button $parent.btn_absmax \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(absmax) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"ABMAX\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Absolute max loadcase\"]]"<<endl;
cout<<"set btn_squa [euidl::button $parent.btn_squa \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(square) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"SQUA\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Square loadcase \"]]"<<endl;
cout<<"set btn_sqrt [euidl::button $parent.btn_sqrt \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(sqrt) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"SQRT\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Square root loadcase \"]]"<<endl;
cout<<"set btn_srss [euidl::button $parent.btn_srss \\"<<endl;
cout<<"-command [namespace code intersectComponents] \\"<<endl;
cout<<"-imagefile $png(srss) \\"<<endl;
cout<<"-command [list [code handleLoadCase] \"SRSS\"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Srss loadcase \"]]"<<endl;
cout<<"grid $header -row 0 -column 0 -sticky news -columnspan 2"<<endl;
cout<<"set header [$header childsite]"<<endl;
cout<<"pack $btn_create $btn_delete $btn_write $btn_erase $btn_read $btn_add \\"<<endl;
cout<<"$btn_sub $btn_min $btn_absmin $btn_max $btn_absmax \\"<<endl;
cout<<"$btn_squa $btn_sqrt $btn_srss -in $header -side left -padx 1m"<<endl;
cout<<"set left [euidl::labeledframe $parent.left -font $font(title) \\"<<endl;
cout<<"-text [msgcat::mc \"Defined LoadCases \"]]"<<endl;
cout<<"grid $left -row 1 -column 0  -sticky news"<<endl;
cout<<"set left [$left childsite]"<<endl;
cout<<"set footer [frame $parent.footer]"<<endl;
cout<<"grid $footer  -row 2 -column 0  -columnspan 2"<<endl;
cout<<"set right [euidl::labeledframe $parent.right -font $font(title) \\"<<endl;
cout<<"-text [msgcat::mc \"Selected LoadCases \"]]"<<endl;
cout<<"grid $right -row 1 -column 1  -sticky news"<<endl;
cout<<"set right [$right childsite]"<<endl;
cout<<"grid  columnconfigure $parent 0 -weight 2"<<endl;
cout<<"grid  columnconfigure $parent 1 -weight 1"<<endl;
cout<<"grid  rowconfigure $parent 1 -weight 3"<<endl;
cout<<"grid  rowconfigure $parent 2 -weight 1"<<endl;
cout<<"set btnplot [button $parent.create -text [msgcat::mc \"Plot Loadcase \"]  -width 8 -font $font(content) -command [list [code plotLoadCase] \"ALL\" \"Eqv\"] ]"<<endl;
cout<<"set btnok [button $parent.ok -text [msgcat::mc \"Ok \"]  -width 8 -font $font(content) -command [code execAPDL] ]"<<endl;
cout<<"set btncancel [button $parent.cancel -text [msgcat::mc \"Cancel \"] -width 8 -font $font(content) -command {destroy .loadcasemanager} ]"<<endl;
cout<<"pack $btnplot $btnok  $btncancel -in $footer -side left -padx 10m -pady 4m"<<endl;
cout<<"set table [euidl::colhead $left.table \\"<<endl;
cout<<"-variable [scope tabledata] \\"<<endl;
cout<<"-selectbackground #09f\\"<<endl;
cout<<"-borderwidth 0 \\"<<endl;
cout<<"-hscrollmode none \\"<<endl;
cout<<"-contextmenu 1 ]"<<endl;
cout<<"$table insert cols {ID} end"<<endl;
cout<<"$table insert cols {Factor} end"<<endl;
cout<<"$table insert cols {ABS} end"<<endl;
cout<<"$table insert cols {Property} end"<<endl;
cout<<"$table tag configure {ID} -sortmethod integer"<<endl;
cout<<"$table tag configure {Factor} -sortmethod real"<<endl;
cout<<"$table tag configure {ABS} -sortmethod dictionary"<<endl;
cout<<"$table tag configure {Property} -sortmethod dictionary"<<endl;
cout<<"$table tag configure title -anchor center"<<endl;
cout<<"$table tag configure title -font $font(title)"<<endl;
cout<<"$table tag configure row -font $font(content)"<<endl;
cout<<"$table tag configure row -anchor center"<<endl;
cout<<"[$table component table] width [$table tag coltag {ID}] 10"<<endl;
cout<<"[$table component table] width [$table tag coltag {Factor}] 10"<<endl;
cout<<"[$table component table] width [$table tag coltag {ABS}] 10"<<endl;
cout<<"[$table component table] width [$table tag coltag {Property}] 36"<<endl;
cout<<"[$table component table] configure -rowheight 2"<<endl;
cout<<"bind $table <Double-1> [code showLoadCase]"<<endl;
cout<<"pack $table -fill both -expand 1"<<endl;
cout<<"$table deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Plot Sel LoadCase Eqv \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [list [code plotLoadCase] \"Sel\" \"Eqv\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Delete LoadCase \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [list [code deleteLoadCase] \"SEL\"]"<<endl;
cout<<"set lclistbox [euidl::scrolledlistbox $right.lclistbox \\"<<endl;
cout<<"-listvariable [scope lclistvar]\\"<<endl;
cout<<"-exportselection false \\"<<endl;
cout<<"-height 250 \\"<<endl;
cout<<"-selectmode extended\\"<<endl;
cout<<"-hscrollmode none \\"<<endl;
cout<<"-textfont  $font(content) \\"<<endl;
cout<<"-contextmenu 1 \\"<<endl;
cout<<"-selectbackground #09f\\"<<endl;
cout<<"-dblclickcommand [namespace code editAPDL] \\"<<endl;
cout<<"-relief  flat"<<endl;
cout<<"]"<<endl;
cout<<"$lclistbox deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$lclistbox insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"MoveUp \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [list [namespace code cmplistMove] \"up\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$lclistbox insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"MoveDown \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [list [namespace code cmplistMove] \"down\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$lclistbox insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Del \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [namespace code delAPDL]"<<endl;
cout<<"grid $lclistbox -sticky news"<<endl;
cout<<"grid  columnconfigure $right 0 -weight 1"<<endl;
cout<<"grid  columnconfigure $left 0 -weight 1"<<endl;
cout<<"grid  rowconfigure $right 0 -weight 1"<<endl;
cout<<"grid  rowconfigure $left 0 -weight 1"<<endl;
cout<<"update idletasks"<<endl;
cout<<"::euidl::Manager::LoadCase::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable casesinfo"<<endl;
cout<<"variable casenum"<<endl;
cout<<"variable lclistvar"<<endl;
cout<<"set lclistvar {}"<<endl;
cout<<"update_LoadCaseList"<<endl;
cout<<"set i 0"<<endl;
cout<<"foreach caseid [array names casesinfo] {"<<endl;
cout<<"set caserow $casesinfo($caseid)"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($i,-1) {}"<<endl;
cout<<"set tabledata($i,0)  $caseid"<<endl;
cout<<"set tabledata($i,1)  [lindex $caserow 0]"<<endl;
cout<<"set tabledata($i,2)  [lindex $caserow 1]"<<endl;
cout<<"set index  \"_lc_pro_$caseid\""<<endl;
cout<<"set flag [ans_getvalue parm,$index,type]"<<endl;
cout<<"if {$flag!=-1} {"<<endl;
cout<<"set property [string trim [ans_getvalue parm,$index,value]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set property \"UnDefined\""<<endl;
cout<<"}"<<endl;
cout<<"set tabledata($i,3)  $property"<<endl;
cout<<"set tabledata($i,4)  [lindex $caserow 2]"<<endl;
cout<<"set tabledata($i,5)  [lindex $caserow 3]"<<endl;
cout<<"set tabledata($i,6)  [lindex $caserow 4]"<<endl;
cout<<"incr i"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state disabled"<<endl;
cout<<"[$table getContextMenu] entryconfigure 1 -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc update_LoadCaseList { } \\"<<endl;
cout<<"{"<<endl;
cout<<"variable casesinfo"<<endl;
cout<<"variable casenum"<<endl;
cout<<"if {[info exists casesinfo]} {"<<endl;
cout<<"unset casesinfo"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"/GO\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/OUTPUT,lclist,log\"} err"<<endl;
cout<<"catch {ans_sendcommand \"LCDEF,STAT,ALL\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/OUTPUT\"} err"<<endl;
cout<<"set f [open lclist.log r]"<<endl;
cout<<"set lclist [read $f]"<<endl;
cout<<"close $f"<<endl;
cout<<"set case_id [regexp -all -inline -- {LOAD CASE=\\s*([0-9]*[0-9]+)\\s*}  $lclist]"<<endl;
cout<<"set case_abs [regexp -all -inline -- {ABS KEY=\\s*([0-9]*[0-9]+)\\s*}  $lclist]"<<endl;
cout<<"set case_fac [regexp -all -inline -- {FACTOR=\\s*([\\d.E+]+)\\s*}  $lclist]"<<endl;
cout<<"set case_step [regexp -all -inline -- {LOAD STEP=\\s*([0-9]*[0-9]+)\\s*}  $lclist]"<<endl;
cout<<"set case_substep [regexp -all -inline -- {SUBSTEP=\\s*([0-9]*[0-9]+)\\s*}  $lclist]"<<endl;
cout<<"set case_file [regexp -all -inline -- {\\s*FILE=(\\w+\\.\\w+)\\s*}  $lclist]"<<endl;
cout<<"set casenum [expr [llength $case_id]/2]"<<endl;
cout<<"for {set i 0} {$i < $casenum} {incr i} {"<<endl;
cout<<"set index [expr 2*$i+1]"<<endl;
cout<<"set id [lindex $case_id  $index]"<<endl;
cout<<"set abs [lindex $case_abs  $index]"<<endl;
cout<<"set fac [expr [lindex $case_fac  $index]]"<<endl;
cout<<"set step [lindex $case_step  $index]"<<endl;
cout<<"set substep [lindex $case_substep  $index]"<<endl;
cout<<"set file [lindex $case_file  $index]"<<endl;
cout<<"set casesinfo($id) \"$fac $abs $step $substep $file\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc handleLoadCase {operator} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"set selection [lsort -integer  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"set caseid $tabledata($sel,0)"<<endl;
cout<<"if {[$lclistbox size]==0} {"<<endl;
cout<<"set command \"LCASE,$caseid\""<<endl;
cout<<"} else {"<<endl;
cout<<"switch -exact -- $operator {"<<endl;
cout<<"READ {"<<endl;
cout<<"set command \"LCASE,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"ADD {"<<endl;
cout<<"set command \"LCOPER,ADD,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"SUB {"<<endl;
cout<<"set command \"LCOPER,SUB,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"SQUA {"<<endl;
cout<<"set command \"LCOPER,SQUA \""<<endl;
cout<<"}"<<endl;
cout<<"MIN {"<<endl;
cout<<"set command \"LCOPER,MIN,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"ABMIN {"<<endl;
cout<<"set command \"LCOPER,ABMN,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"MAX {"<<endl;
cout<<"set command \"LCOPER,MAX,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"ABMAX {"<<endl;
cout<<"set command \"LCOPER,ABMX,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"SQRT {"<<endl;
cout<<"set command \"LCOPER,SQRT\""<<endl;
cout<<"}"<<endl;
cout<<"SRSS {"<<endl;
cout<<"set command \"LCOPER,SRSS,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"default {}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"$lclistbox insert end [list $command $command]"<<endl;
cout<<"}"<<endl;
cout<<"if { [llength $selection] > 1 } {"<<endl;
cout<<"set rowNum 0"<<endl;
cout<<"} else {"<<endl;
cout<<"set rowNum [$table index end row]"<<endl;
cout<<"if { $sel < $rowNum } {"<<endl;
cout<<"set rowNum $sel"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if { [$lclistbox size]>0} {"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$lclistbox getContextMenu] entryconfigure $i -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc writeLoadCase {} {"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout<<"variable writefile"<<endl;
cout<<"variable outid"<<endl;
cout<<"if {[winfo exists .lcwrite]} {"<<endl;
cout<<"destroy .lcwrite]"<<endl;
cout<<"}"<<endl;
cout<<"set subtitle [msgcat::mc \"Write loadcase\"]"<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set lcwrite [toplevel .lcwrite]"<<endl;
cout<<"wm title $lcwrite $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-320)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-160)/2}]"<<endl;
cout<<"wm geometry $lcwrite  320x160+$x+$y"<<endl;
cout<<"set label_outid [label $lcwrite.label_outid \\"<<endl;
cout<<"-text \"[msgcat::mc \"Case ID \"]:        \"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10]"<<endl;
cout<<"set entry_outid [euidl::entry $lcwrite.entry_outid\\"<<endl;
cout<<"-variable [scope outid] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 16 \\"<<endl;
cout<<"-font $font(content)\\"<<endl;
cout<<"-validatedata ansinteger]"<<endl;
cout<<"set labelfile [label $lcwrite.labelfile \\"<<endl;
cout<<"-text \"[msgcat::mc \"Please Select The LoadCase File \"]:\"\\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set framefile [label $lcwrite.framefile]"<<endl;
cout<<"set entryfile [entry $lcwrite.entryfile\\"<<endl;
cout<<"-textvariable [scope writefile] \\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set btnfile [euidl::button $lcwrite.btnfile\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Please Select The LoadCase File \"] \\"<<endl;
cout<<"-imagefile $png(import) \\"<<endl;
cout<<"-command [list [code selectfile] \"EXPORT\"]\\"<<endl;
cout<<"-font $font(content) ]"<<endl;
cout<<"set frameokcancel [label $lcwrite.frameokcancel]"<<endl;
cout<<"set btnok [button $lcwrite.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [code ok_write_lc_click]]"<<endl;
cout<<"set btnexit [button $lcwrite.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .lcwrite }]"<<endl;
cout<<"grid $label_outid -row 1  -column 0  -sticky w"<<endl;
cout<<"grid $entry_outid -row 1  -column 1  -sticky w -pady 2m"<<endl;
cout<<"grid $labelfile -row 2  -column 0  -columnspan 2  -sticky w"<<endl;
cout<<"grid $entryfile -row 3  -column 0   -columnspan 2 -sticky w"<<endl;
cout<<"grid $btnfile   -row 3  -column 1    -sticky e"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 4 -column 0  -columnspan 2 -pady 2m"<<endl;
cout<<"}"<<endl;
cout<<"proc showLoadCase {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable font"<<endl;
cout<<"variable subform"<<endl;
cout<<"variable the_fac"<<endl;
cout<<"variable the_abs"<<endl;
cout<<"variable the_pro"<<endl;
cout<<"variable entrystep"<<endl;
cout<<"if {[winfo exists .cmpinfo]} {"<<endl;
cout<<"destroy .cmpinfo]"<<endl;
cout<<"}"<<endl;
cout<<"set selection [lsort -integer  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection 0]"<<endl;
cout<<"$table selection clear all"<<endl;
cout<<"$table selection set $sel,-1"<<endl;
cout<<"set the_fac  $tabledata($sel,1)"<<endl;
cout<<"set the_abs  $tabledata($sel,2)"<<endl;
cout<<"set the_pro  $tabledata($sel,3)"<<endl;
cout<<"set id $tabledata($sel,0)"<<endl;
cout<<"set subtitle \"[msgcat::mc \"ComponentID \"]:$id\""<<endl;
cout<<"set sublabeltips  [msgcat::mc \"LoadCase Property \"]"<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set subform [toplevel .cmpinfo]"<<endl;
cout<<"grab set $subform"<<endl;
cout<<"wm title .cmpinfo $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-360)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-360)/2}]"<<endl;
cout<<"wm geometry $subform  360x360+$x+$y"<<endl;
cout<<"wm transient $subform"<<endl;
cout<<"set lableid [label $subform.lableid \\"<<endl;
cout<<"-text \"[msgcat::mc \"ComponentID \"](ID):          \"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 14]"<<endl;
cout<<"set entryid [entry $subform.entryid\\"<<endl;
cout<<"-textvariable [scope tabledata($sel,0)] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelfactor [label $subform.labelfactor\\"<<endl;
cout<<"-text \"[msgcat::mc \"Factor \"](Factor):  \" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 14]"<<endl;
cout<<"set entryfactor [entry $subform.entryfactor \\"<<endl;
cout<<"-textvariable [scope the_fac] \\"<<endl;
cout<<"-width 10 -font $font(content)\\"<<endl;
cout<<"-width 15 ]"<<endl;
cout<<"set labelabs [label $subform.labelabs \\"<<endl;
cout<<"-text \"[msgcat::mc \"ABS \"](ABS):      \"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 14]"<<endl;
cout<<"set comboabs [euidl::combobox $subform.comboabs \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope the_abs]]"<<endl;
cout<<"set labelstep [label $subform.labelstep \\"<<endl;
cout<<"-text \"[msgcat::mc \"Step \"](Step):          \" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 14]"<<endl;
cout<<"set entrystep [entry $subform.entrystep \\"<<endl;
cout<<"-textvariable [scope tabledata($sel,4)] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelsubstep [label $subform.labelsubstep \\"<<endl;
cout<<"-text \"[msgcat::mc \"Substep \"](Substep):\" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 14]"<<endl;
cout<<"set entrysubstep [entry $subform.entrysubstep \\"<<endl;
cout<<"-textvariable [scope tabledata($sel,5)] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelfile [label $subform.labelfile \\"<<endl;
cout<<"-text \"[msgcat::mc \"LCFile \"](CaseFile):\"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 14]"<<endl;
cout<<"set entryfile [entry $subform.entryfile \\"<<endl;
cout<<"-textvariable [scope tabledata($sel,6)] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelproperty [label $subform.labelId \\"<<endl;
cout<<"-text \"[msgcat::mc \"Property \"](Property):  \" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 16]"<<endl;
cout<<"set entryproperty [entry $subform.entryId \\"<<endl;
cout<<"-textvariable [scope the_pro] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set frameokcancel [label $subform.frameokcancel]"<<endl;
cout<<"set btnok [button $subform.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-command [namespace code ok_case_info_click]]"<<endl;
cout<<"set btnexit [button $subform.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-command { destroy .cmpinfo }]"<<endl;
cout<<"grid $lableid -row 1  -column 0  -sticky w"<<endl;
cout<<"grid $entryid -row 1  -column 1  -padx 6m -pady 2m"<<endl;
cout<<"grid $labelfactor -row 2  -column 0 -sticky w"<<endl;
cout<<"grid $entryfactor -row 2   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelabs -row 3  -column 0 -sticky w"<<endl;
cout<<"grid $comboabs -row 3   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelproperty -row 4  -column 0 -sticky w"<<endl;
cout<<"grid $entryproperty -row 4   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelstep -row 5  -column 0 -sticky w"<<endl;
cout<<"grid $entrystep -row 5   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelsubstep -row 6  -column 0 -sticky w"<<endl;
cout<<"grid $entrysubstep -row 6  -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelfile -row 7  -column 0 -sticky w"<<endl;
cout<<"grid $entryfile -row 7  -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 8 -column 0  -columnspan 2 -pady 4m"<<endl;
cout<<"$comboabs insert list end  [list YES 1 NO 0]"<<endl;
cout<<"update idletasks"<<endl;
cout<<"}"<<endl;
cout<<"proc cmplistMove {direction} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable lclistvar"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"set len [$lclistbox size]"<<endl;
cout<<"set sel [lindex [$lclistbox curselection] 0]"<<endl;
cout<<"if {$direction==\"up\"} {"<<endl;
cout<<"set nextsel [expr $sel==0?$len-1:$sel-1]"<<endl;
cout<<"} else {"<<endl;
cout<<"set nextsel [expr $sel==$len-1?0:$sel+1]"<<endl;
cout<<"}"<<endl;
cout<<"set data [$lclistbox get $sel]"<<endl;
cout<<"set nextdata [$lclistbox get $nextsel]"<<endl;
cout<<"lset lclistvar $nextsel $data"<<endl;
cout<<"lset lclistvar $sel $nextdata"<<endl;
cout<<"$lclistbox selection clear 0 end"<<endl;
cout<<"$lclistbox selection set  $nextsel"<<endl;
cout<<"$lclistbox activate  $nextsel"<<endl;
cout<<"}"<<endl;
cout<<"proc editAPDL {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable casesinfo"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"variable selid"<<endl;
cout<<"variable seloper"<<endl;
cout<<"variable selproperty"<<endl;
cout<<"variable apdlform"<<endl;
cout<<"if {[winfo exists .lcapdl]} {"<<endl;
cout<<"destroy .lcapdl]"<<endl;
cout<<"}"<<endl;
cout<<"set selection [lsort -integer  [$lclistbox curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection 0]"<<endl;
cout<<"$lclistbox selection clear 0 end"<<endl;
cout<<"$lclistbox selection set $sel"<<endl;
cout<<"set item [$lclistbox get $sel]"<<endl;
cout<<"set apdl [split $item ,]"<<endl;
cout<<"set seltype [string trim [lindex $apdl 0]]"<<endl;
cout<<"if {$seltype==\"LCASE\"} {"<<endl;
cout<<"set seloper \"INIT\""<<endl;
cout<<"set selid [string trim [lindex $apdl 1]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set seloper [string trim [lindex $apdl 1]]"<<endl;
cout<<"if {[llength $apdl]==3} {"<<endl;
cout<<"set selid [string trim [lindex $apdl 2]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set selid {}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"set index  \"_lc_pro_$selid\""<<endl;
cout<<"set flag [ans_getvalue parm,$index,type]"<<endl;
cout<<"if {$flag!=-1} {"<<endl;
cout<<"set selproperty [string trim [ans_getvalue parm,$index,value]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set selproperty \"UnDefined\""<<endl;
cout<<"}"<<endl;
cout<<"set subtitle \"[msgcat::mc \"LoadCase \"]:$selid\""<<endl;
cout<<"set sublabeltips  [::msgcat::mc \"LoadCase Property \"]"<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set apdlform [toplevel .lcapdl]"<<endl;
cout<<"grab set $apdlform"<<endl;
cout<<"wm title .lcapdl $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-250)/2}]"<<endl;
cout<<"wm geometry $apdlform  300x250+$x+$y"<<endl;
cout<<"wm transient $apdlform"<<endl;
cout<<"set labelTips       [label $apdlform.labelTips -text $sublabeltips -font $font(content)]"<<endl;
cout<<"set labelName [label $apdlform.labelName \\"<<endl;
cout<<"-text \"[msgcat::mc \"Case ID \"]:\"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set comboID [euidl::combobox $apdlform.comboID\\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 18\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope selid]]"<<endl;
cout<<"set labelType [label $apdlform.labelType\\"<<endl;
cout<<"-text \"[msgcat::mc \"OperateType \"]:\" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set comboOper [euidl::combobox $apdlform.comboOper \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 18\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope seloper]]"<<endl;
cout<<"set labelProperty [label $apdlform.labelId \\"<<endl;
cout<<"-text \"[msgcat::mc \"Property \"]:\" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryProperty [entry $apdlform.entryId \\"<<endl;
cout<<"-textvariable [scope selproperty] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 20]"<<endl;
cout<<"set frameokcancel [label $apdlform.frameokcancel]"<<endl;
cout<<"set btnok [button $apdlform.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [namespace code ok_apdl_click]]"<<endl;
cout<<"set btnexit [button $apdlform.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .lcapdl }]"<<endl;
cout<<"grid $labelTips  -row 0  -column 0  -columnspan 2  -pady 2m"<<endl;
cout<<"grid $labelName -row 1  -column 0  -sticky w"<<endl;
cout<<"grid $comboID -row 1  -column 1  -padx 6m -pady 2m"<<endl;
cout<<"grid $labelType -row 2  -column 0 -sticky w"<<endl;
cout<<"grid $comboOper -row 2   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelProperty -row 3  -column 0 -sticky w"<<endl;
cout<<"grid $entryProperty -row 3  -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 4 -column 0  -columnspan 2 -pady 4m"<<endl;
cout<<"$comboOper insert list end [list \\"<<endl;
cout<<"[msgcat::mc \"INIT \"] INIT\\"<<endl;
cout<<"[msgcat::mc \"ADD \"] ADD \\"<<endl;
cout<<"[msgcat::mc \"SUB \"] SUB \\"<<endl;
cout<<"[msgcat::mc \"MIN \"] MIN \\"<<endl;
cout<<"[msgcat::mc \"MAX \"] MAX\\"<<endl;
cout<<"[msgcat::mc \"ABMN \"] ABMN\\"<<endl;
cout<<"[msgcat::mc \"ABMX \"] ABMX\\"<<endl;
cout<<"[msgcat::mc \"SQRT \"] SQRT\\"<<endl;
cout<<"[msgcat::mc \"SQUA \"] SQUA\\"<<endl;
cout<<"[msgcat::mc \"SRSS \"] SRSS\\"<<endl;
cout<<"]"<<endl;
cout<<"set ids {\"\" \"\"}"<<endl;
cout<<"foreach var [array names casesinfo] {"<<endl;
cout<<"lappend ids $var $var"<<endl;
cout<<"}"<<endl;
cout<<"$comboID insert list end $ids"<<endl;
cout<<"update idletasks"<<endl;
cout<<"}"<<endl;
cout<<"proc delAPDL {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"set selection [lsort -integer -decreasing [$lclistbox  curselection]]"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"$lclistbox delete $sel"<<endl;
cout<<"}"<<endl;
cout<<"if { [$lclistbox size]==0} {"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$lclistbox getContextMenu] entryconfigure $i -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"} else {"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$lclistbox getContextMenu] entryconfigure $i -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_write_lc_click {}\\"<<endl;
cout<<"{"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"variable outid"<<endl;
cout<<"variable writefile"<<endl;
cout<<"variable parent"<<endl;
cout<<"set err {}"<<endl;
cout<<"if {[$lclistbox size]==0} {"<<endl;
cout<<"set err \"No LoadCase Was Read! \""<<endl;
cout<<"}"<<endl;
cout<<"if {$outid==\"\" || $outid>99 ||$outid<1 } {"<<endl;
cout<<"set err \"the Scope Of CaseID is 0-99!\""<<endl;
cout<<"}"<<endl;
cout<<"if {$writefile==\"\"} {"<<endl;
cout<<"set err \"Please Select The LoadCase File \""<<endl;
cout<<"}"<<endl;
cout<<"if {![string match {} $err]} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-parent .lcwrite\\"<<endl;
cout<<"-message [msgcat::mc $err] \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set dirname [file dirname $writefile]"<<endl;
cout<<"set filename_postfix [split [file tail $writefile] .]"<<endl;
cout<<"set filename_nopostfix [lindex $filename_postfix 0]"<<endl;
cout<<"set command \"LCWRITE,$outid,'$filename_nopostfix','','$dirname'\""<<endl;
cout<<"catch {ans_sendcommand $command} err"<<endl;
cout<<"destroy .lcwrite"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-message [msgcat::mc \"Export Is Done! \"] \\"<<endl;
cout<<"-icon info"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_case_info_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable subform"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable the_fac"<<endl;
cout<<"variable the_abs"<<endl;
cout<<"variable the_pro"<<endl;
cout<<"set sel [$table curselection]"<<endl;
cout<<"set tabledata($sel,1)  $the_fac"<<endl;
cout<<"set tabledata($sel,2)  $the_abs"<<endl;
cout<<"set tabledata($sel,3)  $the_pro"<<endl;
cout<<"if {[string length $the_pro]>10} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message [msgcat::mc \"Property length is too long! \"] \\"<<endl;
cout<<"-icon question"<<endl;
cout<<"}"<<endl;
cout<<"set caseid $tabledata($sel,0)"<<endl;
cout<<"catch {ans_sendcommand \"LCFACT,$caseid,$the_fac\"} err"<<endl;
cout<<"catch {ans_sendcommand \"LCABS,$caseid,$the_abs\"} err"<<endl;
cout<<"catch {ans_sendcommand \"*set,_lc_pro_$caseid,'$the_pro'\"} err"<<endl;
cout<<"destroy $subform"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_apdl_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable apdlform"<<endl;
cout<<"variable selid"<<endl;
cout<<"variable seloper"<<endl;
cout<<"variable lclistvar"<<endl;
cout<<"variable lclistbox"<<endl;
cout<<"set sel [$lclistbox curselection]"<<endl;
cout<<"switch -exact -- $seloper {"<<endl;
cout<<"INIT {"<<endl;
cout<<"if {$selid==\"\"} {return}"<<endl;
cout<<"set command \"LCASE,$selid\""<<endl;
cout<<"}"<<endl;
cout<<"SQRT {"<<endl;
cout<<"set command \"LCOPER,SQRT\""<<endl;
cout<<"}"<<endl;
cout<<"SQUA {"<<endl;
cout<<"set command \"LCOPER,SQUA\""<<endl;
cout<<"}"<<endl;
cout<<"default {"<<endl;
cout<<"if {$selid==\"\"} {return}"<<endl;
cout<<"set command \"LCOPER,$seloper,$selid\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"lset lclistvar $sel $command"<<endl;
cout<<"destroy $apdlform"<<endl;
cout<<"}"<<endl;
cout<<"proc deleteLoadCase {arg} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"if {$arg==\"ALL\"} {"<<endl;
cout<<"set selection {}"<<endl;
cout<<"set casenum [$table index end row]"<<endl;
cout<<"puts $casenum"<<endl;
cout<<"for {set i $casenum} {$i >=0} {incr i -1} { lappend selection $i }"<<endl;
cout<<"} else {"<<endl;
cout<<"set selection [lsort -integer -decreasing  [$table curselection]]"<<endl;
cout<<"}"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"set caseid $tabledata($sel,0)"<<endl;
cout<<"catch {ans_sendcommand \"LCDEF,$caseid,ERASE\"} err"<<endl;
cout<<"catch {ans_sendcommand \"*set,_lc_pro_$caseid\"} err"<<endl;
cout<<"$table delete rows $sel"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state disabled"<<endl;
cout<<"[$table getContextMenu] entryconfigure 1 -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc createLoadCase {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable newlcform"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout<<"variable method"<<endl;
cout<<"variable step"<<endl;
cout<<"variable substep"<<endl;
cout<<"variable casefile"<<endl;
cout<<"variable newid"<<endl;
cout<<"variable newproperty"<<endl;
cout<<"variable labelstep"<<endl;
cout<<"variable entrystep"<<endl;
cout<<"variable labelsubstep"<<endl;
cout<<"variable entrysubstep"<<endl;
cout<<"variable labelfile"<<endl;
cout<<"variable entryfile"<<endl;
cout<<"variable btnfile"<<endl;
cout<<"if {[winfo exists .lcnew]} {"<<endl;
cout<<"destroy .lcnew]"<<endl;
cout<<"}"<<endl;
cout<<"set subtitle [msgcat::mc \"Create LoadCase \"]"<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set newlcform [toplevel .lcnew]"<<endl;
cout<<"wm title $newlcform $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-320)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-360)/2}]"<<endl;
cout<<"wm geometry $newlcform  320x360+$x+$y"<<endl;
cout<<"set labelMethod [label $newlcform.labelmethod\\"<<endl;
cout<<"-text \"[msgcat::mc \"Creation Method \"]:        \" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10]"<<endl;
cout<<"set comboMethod [euidl::combobox $newlcform.combomethod \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 14\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [code changmethod]\\"<<endl;
cout<<"-variable [scope method]]"<<endl;
cout<<"set labelID [label $newlcform.labelID \\"<<endl;
cout<<"-text \"[msgcat::mc \"Case ID \"]:        \"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10]"<<endl;
cout<<"set entryID [euidl::entry $newlcform.entryID\\"<<endl;
cout<<"-variable [scope newid] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 16 \\"<<endl;
cout<<"-font $font(content)\\"<<endl;
cout<<"-validatedata ansinteger]"<<endl;
cout<<"set labelstep [label $newlcform.labelstep \\"<<endl;
cout<<"-text \"[msgcat::mc \"Step ID \"]:    \"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10]"<<endl;
cout<<"set entrystep [entry $newlcform.entrystep\\"<<endl;
cout<<"-textvariable [scope step] \\"<<endl;
cout<<"-width 16 \\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set labelsubstep [label $newlcform.labelsubstep \\"<<endl;
cout<<"-text \"[msgcat::mc \"Substep ID \"]:\"\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10]"<<endl;
cout<<"set entrysubstep [entry $newlcform.entrysubstep\\"<<endl;
cout<<"-textvariable [scope substep] \\"<<endl;
cout<<"-width 16 \\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set labelfile [label $newlcform.labelfile \\"<<endl;
cout<<"-text \"[msgcat::mc \"Please Select The LoadCase File \"]:\"\\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set framefile [label $newlcform.framefile]"<<endl;
cout<<"set entryfile [entry $newlcform.entryfile\\"<<endl;
cout<<"-textvariable [scope casefile] \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set btnfile [euidl::button $newlcform.btnfile\\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Please Select The LoadCase File \"] \\"<<endl;
cout<<"-imagefile $png(import) \\"<<endl;
cout<<"-command [list [code selectfile] \"IMPORT\"]\\"<<endl;
cout<<"-font $font(content) ]"<<endl;
cout<<"set labelProperty [label $newlcform.labelpro \\"<<endl;
cout<<"-text \"[msgcat::mc \"Property \"]:        \" \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 10]"<<endl;
cout<<"set entryProperty [entry $newlcform.entryId \\"<<endl;
cout<<"-textvariable [scope newproperty] \\"<<endl;
cout<<"-width 16 \\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set frameokcancel [label $newlcform.frameokcancel]"<<endl;
cout<<"set btnok [button $newlcform.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [code ok_new_lc_click]]"<<endl;
cout<<"set btnexit [button $newlcform.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .lcnew }]"<<endl;
cout<<"grid $labelMethod -row 1  -column 0 -sticky w"<<endl;
cout<<"grid $comboMethod -row 1  -column 1 -sticky w -pady 2m"<<endl;
cout<<"grid $labelID -row 2  -column 0  -sticky w"<<endl;
cout<<"grid $entryID -row 2  -column 1  -sticky w -pady 2m"<<endl;
cout<<"grid $labelProperty -row 3  -column 0  -sticky w"<<endl;
cout<<"grid $entryProperty -row 3  -column 1  -sticky w -pady 2m"<<endl;
cout<<"grid $labelProperty -row 4  -column 0 -sticky w"<<endl;
cout<<"grid $entryProperty -row 4  -column 1 -sticky w -pady 2m"<<endl;
cout<<"grid $labelstep -row 5  -column 0  -sticky w"<<endl;
cout<<"grid $entrystep -row 5  -column 1  -sticky w  -pady 2m"<<endl;
cout<<"grid $labelsubstep -row 6  -column 0  -sticky w"<<endl;
cout<<"grid $entrysubstep -row 6  -column 1  -sticky w -pady 2m"<<endl;
cout<<"grid $labelfile -row 7  -column 0  -columnspan 2  -sticky w"<<endl;
cout<<"grid $entryfile -row 8  -column 0   -columnspan 2 -sticky w"<<endl;
cout<<"grid $btnfile   -row 8  -column 1    -sticky e"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 9 -column 0  -columnspan 2 -pady 2m"<<endl;
cout<<"$comboMethod insert list end [list \\"<<endl;
cout<<"[msgcat::mc \"From Result File \"] Result \\"<<endl;
cout<<"[msgcat::mc \"From LoadCase File \"] LoadCase]"<<endl;
cout<<"set method Result"<<endl;
cout<<"set newid {}"<<endl;
cout<<"set newproperty {}"<<endl;
cout<<"set step 1"<<endl;
cout<<"set substep 0"<<endl;
cout<<"set casefile {}"<<endl;
cout<<"update idletasks"<<endl;
cout<<"}"<<endl;
cout<<"proc changmethod {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable newlcform"<<endl;
cout<<"variable font"<<endl;
cout<<"variable method"<<endl;
cout<<"variable step"<<endl;
cout<<"variable substep"<<endl;
cout<<"variable casefile"<<endl;
cout<<"variable labelstep"<<endl;
cout<<"variable entrystep"<<endl;
cout<<"variable labelsubstep"<<endl;
cout<<"variable entrysubstep"<<endl;
cout<<"variable labelfile"<<endl;
cout<<"variable entryfile"<<endl;
cout<<"variable btnfile"<<endl;
cout<<"if {$method==\"Result\"} {"<<endl;
cout<<"set casefile {}"<<endl;
cout<<"set step 1"<<endl;
cout<<"set substep 0"<<endl;
cout<<"$labelstep configure -state normal"<<endl;
cout<<"$entrystep configure -state normal"<<endl;
cout<<"$labelsubstep configure -state normal"<<endl;
cout<<"$entrysubstep configure -state normal"<<endl;
cout<<"$labelfile configure -state disabled"<<endl;
cout<<"$entryfile configure -state disabled"<<endl;
cout<<"$btnfile configure -state disabled"<<endl;
cout<<"} else {"<<endl;
cout<<"set step {}"<<endl;
cout<<"set substep {}"<<endl;
cout<<"$labelstep configure -state disabled"<<endl;
cout<<"$entrystep configure -state disabled"<<endl;
cout<<"$labelsubstep configure -state disabled"<<endl;
cout<<"$entrysubstep configure -state disabled"<<endl;
cout<<"$labelfile configure -state normal"<<endl;
cout<<"$entryfile configure -state normal"<<endl;
cout<<"$btnfile configure -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_new_lc_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable method"<<endl;
cout<<"variable step"<<endl;
cout<<"variable substep"<<endl;
cout<<"variable casefile"<<endl;
cout<<"variable newid"<<endl;
cout<<"variable newproperty"<<endl;
cout<<"variable newlcform"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable table"<<endl;
cout<<"if {$newid>99 ||$newid<1} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message [msgcat::mc \"the Scope Of CaseID is 0-99!\"] \\"<<endl;
cout<<"-icon error"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set msg {}"<<endl;
cout<<"set num {}"<<endl;
cout<<"set rownum [$table index end row]"<<endl;
cout<<"for {set i 0} {$i <= $rownum} {incr i} {"<<endl;
cout<<"if {$newid==$tabledata($i,0)} {"<<endl;
cout<<"set num $i"<<endl;
cout<<"set msg [tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-type yesno\\"<<endl;
cout<<"-message [msgcat::mc \"Really Cover The LoadCase? \"] \\"<<endl;
cout<<"-icon error]"<<endl;
cout<<"if {$msg==\"no\"} { return}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"switch -exact -- $method {"<<endl;
cout<<"Result {"<<endl;
cout<<"set thestep [expr $step==1?\"\":$step]"<<endl;
cout<<"set thesubstep [expr $substep==0?\"\":$substep]"<<endl;
cout<<"catch {ans_sendcommand \"LCDEF,$newid,$thestep,$thesubstep\"} err"<<endl;
cout<<"}"<<endl;
cout<<"default {"<<endl;
cout<<"if {![file exists $casefile]} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message [msgcat::mc \"File not exists,Please check the path! \"] \\"<<endl;
cout<<"-icon error"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set filelist [split [string trim $casefile] .]"<<endl;
cout<<"set prefix [lindex $filelist 0]"<<endl;
cout<<"set postfix [lindex $filelist 1]"<<endl;
cout<<"catch {ans_sendcommand \"LCFILE,$newid,'$prefix','$postfix'\"} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $newproperty]==\"\"} {"<<endl;
cout<<"set newproperty \"UnDefined\""<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"*set,_lc_pro_$newid,'$newproperty'\"} err"<<endl;
cout<<"if {$msg==\"yes\"} {"<<endl;
cout<<"set rownum $num"<<endl;
cout<<"} else {"<<endl;
cout<<"incr rownum"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"}"<<endl;
cout<<"set tabledata($rownum,-1) {}"<<endl;
cout<<"set tabledata($rownum,0)  $newid"<<endl;
cout<<"set tabledata($rownum,1)  1"<<endl;
cout<<"set tabledata($rownum,2)  0"<<endl;
cout<<"set tabledata($rownum,3)  $newproperty"<<endl;
cout<<"$table  selection set  $rownum,-1"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state normal"<<endl;
cout<<"[$table getContextMenu] entryconfigure 1 -state normal"<<endl;
cout<<"destroy  $newlcform"<<endl;
cout<<"}"<<endl;
cout<<"proc selectfile {event} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable casefile"<<endl;
cout<<"variable writefile"<<endl;
cout<<"switch $event {"<<endl;
cout<<"\"IMPORT\" {"<<endl;
cout<<"set casefile [tk_getOpenFile  -filetypes {{Loadcase .l*}}]"<<endl;
cout<<"}"<<endl;
cout<<"\"EXPORT\" {"<<endl;
cout<<"set writefile   [tk_getSaveFile  -filetypes {{loadcase .l*}}]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc execAPDL {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable lclistvar"<<endl;
cout<<"foreach var $lclistvar {"<<endl;
cout<<"catch {ans_sendcommand $var} err"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"SAVE\"} err"<<endl;
cout<<"}"<<endl;
cout<<"proc plotLoadCase {arg rst} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"if {$arg==\"ALL\"} {"<<endl;
cout<<"execAPDL"<<endl;
cout<<"} else {"<<endl;
cout<<"set selection [lsort -integer  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection 0]"<<endl;
cout<<"$table selection clear all"<<endl;
cout<<"$table selection set $sel,-1"<<endl;
cout<<"set caseid $tabledata($sel,0)"<<endl;
cout<<"ans_sendcommand \"LCASE,$caseid\""<<endl;
cout<<"}"<<endl;
cout<<"switch -exact -- $rst {"<<endl;
cout<<"Usum {"<<endl;
cout<<"puts \"PLNSOL,U,Usum,0,1.0 \""<<endl;
cout<<"}"<<endl;
cout<<"Eqv {"<<endl;
cout<<"ans_sendcommand \"PLNSOL,S,EQV,0,1.0\""<<endl;
cout<<"}"<<endl;
cout<<"default {}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc chekcEnvironment {} \\"<<endl;
cout<<"{"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=31 } {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message \"[msgcat::mc \"This Operation Need Environment: \"] \\n [msgcat::mc \"POST1\"]\" \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return 1"<<endl;
cout<<"}"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::Manager::LoadCase::main"<<endl;

}

//锟斤拷锟斤拷锟斤拷
void CoutScript_PressureConcentrated()
{
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval ::Customized::Util::ConcentratedForce {"<<endl;
cout<<"proc main {} {\\"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"variable font_cn"<<endl;
cout<<"variable font_en"<<endl;
cout<<"variable fx"<<endl;
cout<<"variable fy"<<endl;
cout<<"variable fz"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable nodes"<<endl;
cout<<"global png_pick"<<endl;
cout<<"global png_check"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"::msgcat::mcload  [file join $path locale load]"<<endl;
cout<<"set png_pick [file join $path images pick24x24.png]"<<endl;
cout<<"set png_check [file join $path images check24x24.png]"<<endl;
cout<<"if [winfo exists .concentratedforce] {"<<endl;
cout<<"wm deiconify .concentratedforce"<<endl;
cout<<"raise .concentratedforce"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .concentratedforce]"<<endl;
cout<<"set font_cn  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font_en  {Consolas 12 normal}"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Concentrated Force \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-330)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-320)/2}]"<<endl;
cout<<"wm geometry .concentratedforce 330x320+$x+$y"<<endl;
cout<<"set label_pick [euidl::label $parent.label_pick \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-text [msgcat::mc \"Selected Nodes: \"]]"<<endl;
cout<<"set btn_pick [euidl::button $parent.btn_pick \\"<<endl;
cout<<"-command [namespace code pick_Node]   \\"<<endl;
cout<<"-imagefile $png_pick \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Nodes \"] ]"<<endl;
cout<<"set entry_pickinfo [entry $parent.entry_pickinfo \\"<<endl;
cout<<"-textvariable [scope nodes] \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-font $font_en\\"<<endl;
cout<<"-relief  ridge]"<<endl;
cout<<"set btn_selall [euidl::button $parent.btn_selall \\"<<endl;
cout<<"-command [code select_all]   \\"<<endl;
cout<<"-imagefile $png_check \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Current \"] ]"<<endl;
cout<<"set label_x [euidl::label $parent.label_x \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-text [msgcat::mc \"X Force: \"]]"<<endl;
cout<<"set entry_x [euidl::entry  $parent.entry_h -width 10  \\"<<endl;
cout<<"-variable [scope fx] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font_en\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_y [euidl::label $parent.label_y \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-text [msgcat::mc \"Y Force: \"]]"<<endl;
cout<<"set entry_y [euidl::entry  $parent.entry_y \\"<<endl;
cout<<"-width 10  \\"<<endl;
cout<<"-variable [scope fy] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font_en\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_z [euidl::label $parent.label_p \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-text [msgcat::mc \"Z Force: \"]]"<<endl;
cout<<"set entry_z [euidl::entry  $parent.entry_p -width 10  \\"<<endl;
cout<<"-variable [scope fz] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font_en\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_factor [euidl::label $parent.label_factor \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-text [msgcat::mc \"Partial Factor: \"]]"<<endl;
cout<<"set entry_factor [euidl::entry  $parent.entryfactor -width 10  \\"<<endl;
cout<<"-variable [scope factor] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font_en\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set frame_oncancel [frame $parent.frame_oncancel]"<<endl;
cout<<"set btn_ok [button $parent.btn_ok  \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command [namespace code apply_load] ]"<<endl;
cout<<"set btn_cancel [button $parent.btn_cancel  \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font_cn \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command { destroy .concentratedforce}]"<<endl;
cout<<"grid $label_pick -row 0 -column 0  -sticky w -padx 2m"<<endl;
cout<<"grid $entry_pickinfo -row 0 -column 1 -sticky w"<<endl;
cout<<"grid $btn_pick -row 0 -column 1 -sticky e"<<endl;
cout<<"grid $btn_selall -row 0 -column 2 -sticky e"<<endl;
cout<<"grid $label_x -row 1 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_x -row 1 -column 1 -sticky w"<<endl;
cout<<"grid $label_y -row 2 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_y -row 2 -column 1 -sticky w"<<endl;
cout<<"grid $label_z -row 3 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_z -row 3 -column 1 -sticky w"<<endl;
cout<<"grid $label_factor -row 4 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_factor -row 4 -column 1 -sticky w"<<endl;
cout<<"pack  $btn_ok  $btn_cancel -in $frame_oncancel -side left -fill both -padx 12m -pady 5m"<<endl;
cout<<"grid $frame_oncancel  -row 5 -column 0   -columnspan 3   -sticky nsew"<<endl;
cout<<"::Customized::Util::ConcentratedForce::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable fx"<<endl;
cout<<"variable fy"<<endl;
cout<<"variable fz"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable nodes"<<endl;
cout<<"set fx {}"<<endl;
cout<<"set fy {}"<<endl;
cout<<"set fz {}"<<endl;
cout<<"set factor 1.0"<<endl;
cout<<"set nodes {}"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_Node {} \\"<<endl;
cout<<"{"<<endl;
cout<<"catch {ans_sendcommand )/NOPR} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"lower .concentratedforce"<<endl;
cout<<"::uidl::callFnc Fnc_NSEL_S [namespace code picknode_callback]"<<endl;
cout<<"}"<<endl;
cout<<"proc picknode_callback { uidlRtn } {"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"set nodes {}"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .concentratedforce]"<<endl;
cout<<"}"<<endl;
cout<<"proc select_all {} \\"<<endl;
cout<<"{"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedNodes {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"global png_pick"<<endl;
cout<<"set nodes {}"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"$btn_pick configure -relief sunken"<<endl;
cout<<"set num 0"<<endl;
cout<<"for {set i 0} {$i < $node_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr \"ndnext($num)\"]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend nodes $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc apply_load {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable fx"<<endl;
cout<<"variable fy"<<endl;
cout<<"variable fz"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable parent"<<endl;
cout<<"if {[llength $nodes]==0} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"No Nodes Was Select! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $fx]!=\"\"} {"<<endl;
cout<<"ans_sendcommand \"F,all,Fx,[expr $fx*$factor]\""<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $fy]!=\"\"} {"<<endl;
cout<<"ans_sendcommand \"F,all,Fy,[expr $fy*$factor]\""<<endl;
cout<<"}"<<endl;
cout<<"if {[string trim $fz]!=\"\"} {"<<endl;
cout<<"ans_sendcommand \"F,all,Fz,[expr $fz*$factor]\""<<endl;
cout<<"}"<<endl;
cout<<"puts \"#########Concentrated Force APDL Start ############\""<<endl;
cout<<"puts \"NSEL,[join $nodes ,]\""<<endl;
cout<<"if {[string trim $fx]!=\"\"} {puts \"F,all,Fx,$fx*$factor\"}"<<endl;
cout<<"if {[string trim $fy]!=\"\"} {puts \"F,all,Fy,$fy*$factor\"}"<<endl;
cout<<"if {[string trim $fz]!=\"\"} {puts \"F,all,Fz,$fz*$factor\"}"<<endl;
cout<<"puts \"#########Concentrated Force APDL Finish ############\""<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )/GO} err"<<endl;
cout<<"destroy .concentratedforce"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::Customized::Util::ConcentratedForce::main"<<endl;

}
void CoutScript_PressureStatic()
{
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval ::Customized::Util::StaticPressure {"<<endl;
cout<<"proc main {} {\\"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable toploc"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable stepsize"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set png(pick) [file join $path images pick24x24.png]"<<endl;
cout<<"set png(update) [file join $path images update24x24.png]"<<endl;
cout<<"set png(check) [file join $path images check24x24.png]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"if [winfo exists .staticpressure] {"<<endl;
cout<<"wm deiconify .staticpressure"<<endl;
cout<<"raise .staticpressure"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .staticpressure]"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Hydrostatic Pressure \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-360)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-420)/2}]"<<endl;
cout<<"wm geometry .staticpressure 360x420+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"destroy .staticpressure"<<endl;
cout<<"}"<<endl;
cout<<"set label_loadtype  [label $parent.label_loadtype \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Load Pattern \"] ]"<<endl;
cout<<"set combo_loadtype [euidl::combobox $parent.loadtype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope loadpattern] ]"<<endl;
cout<<"set combo_pick [euidl::combobox $parent.picktype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope picktype] \\"<<endl;
cout<<"-command [code changePickTypeEvent]]"<<endl;
cout<<"set btn_pick [euidl::button $parent.btn_pick \\"<<endl;
cout<<"-command [namespace code pick_node_area]   \\"<<endl;
cout<<"-imagefile $png(pick) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Nodes \"] ]"<<endl;
cout<<"set entry_pickinfo [entry $parent.entry_pickinfo \\"<<endl;
cout<<"-textvariable [scope selobjs] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-relief  ridge]"<<endl;
cout<<"set btn_selcurrent [euidl::button $parent.btn_selcurrent \\"<<endl;
cout<<"-command [namespace code selCurrentEvent]   \\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Current \"] ]"<<endl;
cout<<"set label_top [euidl::label $parent.label_top \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"TopPosition: \"]]"<<endl;
cout<<"set entry_top [euidl::entry  $parent.entry_top -width 10  \\"<<endl;
cout<<"-variable [scope toploc] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set btn_update_top [euidl::button $parent.btn_update_top\\"<<endl;
cout<<"-command [list [code autoCalculate] \"WaterTop\"]    \\"<<endl;
cout<<"-imagefile $png(update) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Auto Calculate \"]]"<<endl;
cout<<"set btn_top [euidl::button $parent.btn_top \\"<<endl;
cout<<"-command [code ::uidl::callFnc Fnc_NSEL_S [namespace code pick_top_node]]   \\"<<endl;
cout<<"-imagefile $png(pick) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Top Node \"] ]"<<endl;
cout<<"set label_gravity [euidl::label $parent.label_d \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"GravityDirection: \"]]"<<endl;
cout<<"set combo_gravity [euidl::combobox $parent.gravity \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(en) \\"<<endl;
cout<<"-variable [scope gravity] ]"<<endl;
cout<<"set frame_oncancel [frame $parent.frame_oncancel]"<<endl;
cout<<"set btn_ok [button $parent.btn_ok  \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command [namespace code apply_load] ]"<<endl;
cout<<"set label_factor [euidl::label $parent.label_p \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Partial Factor: \"]]"<<endl;
cout<<"set entry_factor [euidl::entry  $parent.entryfactor -width 10  \\"<<endl;
cout<<"-variable [scope factor] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set btn_cancel [button $parent.btn_cancel  \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command { destroy .staticpressure}]"<<endl;
cout<<"set label_stepsize [euidl::label $parent.label_stepsize \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Water Stepsize \"]]"<<endl;
cout<<"set entry_stepsize [euidl::entry  $parent.entry_stepsize -width 10  \\"<<endl;
cout<<"-variable [scope stepsize] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set btn_update_stepsize [euidl::button $parent.btn_update_stepsize\\"<<endl;
cout<<"-command [list [code autoCalculate] \"Stepsize\"]    \\"<<endl;
cout<<"-imagefile $png(update) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Auto Calculate \"]]"<<endl;
cout<<"set label_rw [euidl::label $parent.label_rw \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Water Weight \"]]"<<endl;
cout<<"set entry_rw [euidl::entry  $parent.entry_rw -width 10  \\"<<endl;
cout<<"-variable [scope rw] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"grid $label_loadtype  -row 0 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_loadtype  -row 0 -column 1 -sticky w -pady 2m"<<endl;
cout<<"grid $label_gravity -row 1 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $combo_gravity -row 1 -column 1 -sticky w"<<endl;
cout<<"grid $combo_pick -row 2 -column 0  -sticky w -padx 2m"<<endl;
cout<<"grid $entry_pickinfo -row 2 -column 1 -sticky w"<<endl;
cout<<"grid $btn_pick -row 2 -column 2"<<endl;
cout<<"grid $btn_selcurrent -row 2 -column 3 -sticky w"<<endl;
cout<<"grid $label_top -row 3 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_top -row 3 -column 1 -sticky w"<<endl;
cout<<"grid $btn_update_top -row 3 -column 2"<<endl;
cout<<"grid $btn_top -row 3 -column 3 -sticky w"<<endl;
cout<<"grid $label_rw -row 5 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_rw -row 5 -column 1 -sticky w"<<endl;
cout<<"grid $label_factor -row 6 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_factor -row 6 -column 1 -sticky w"<<endl;
cout<<"grid $label_stepsize -row 7 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_stepsize -row 7 -column 1 -sticky w"<<endl;
cout<<"grid $btn_update_stepsize -row 7 -column 2 -padx 2m"<<endl;
cout<<"pack  $btn_ok  $btn_cancel -in $frame_oncancel -side left -fill both -padx 12m -pady 2m"<<endl;
cout<<"grid $frame_oncancel  -row 8 -column 0   -columnspan 3   -sticky nsew"<<endl;
cout<<"$combo_pick insert list end [list [msgcat::mc \"Selected Areas: \"] \"AREAS\" [msgcat::mc \"Selected Nodes: \"] \"NODES\"]"<<endl;
cout<<"$combo_gravity insert list end [list X X -X -X  Y  Y -Y -Y  Z  Z  -Z -Z]"<<endl;
cout<<"$combo_loadtype  insert list end [list [msgcat::mc \"Replace \"] \"Replace\" [msgcat::mc \"Append \" ] \"Append\"]"<<endl;
cout<<"::Customized::Util::StaticPressure::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable toploc"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable last_picktype"<<endl;
cout<<"variable stepsize"<<endl;
cout<<"set loadpattern \"Replace\""<<endl;
cout<<"set picktype    \"NODES\""<<endl;
cout<<"set last_picktype  \"NODES\""<<endl;
cout<<"set toploc {}"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"set stepsize {}"<<endl;
cout<<"set factor 1.0"<<endl;
cout<<"set rw 10.0"<<endl;
cout<<"set acelX [ans_getvalue common,,acelcm,,real,22]"<<endl;
cout<<"set acelY [ans_getvalue common,,acelcm,,real,23]"<<endl;
cout<<"set acelZ [ans_getvalue common,,acelcm,,real,24]"<<endl;
cout<<"set  gravity \"-Z\""<<endl;
cout<<"if {$acelX>0} {set gravity X }"<<endl;
cout<<"if {$acelX<0} {set gravity -X }"<<endl;
cout<<"if {$acelY>0} {set gravity Y }"<<endl;
cout<<"if {$acelY<0} {set gravity -Y }"<<endl;
cout<<"if {$acelZ>0} {set gravity Z }"<<endl;
cout<<"if {$acelZ<0} {set gravity -Z }"<<endl;
cout<<"}"<<endl;
cout<<"proc picknode_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .staticpressure]"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_top_node {uidlRtn} {"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_TopLocation"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_TopLocation"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .staticpressure]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_TopLocation {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable toploc"<<endl;
cout<<"variable gravity"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"if {$node_nums>1} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Only 1 node can be select!\"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set direction_flag [get_direction $gravity]"<<endl;
cout<<"set direction [lindex $direction_flag 0]"<<endl;
cout<<"set num [ans_evalexpr \"ndnext(0)\"]"<<endl;
cout<<"set toploc [ans_evalexpr [format \"N%s(%s)\" $direction $num]]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedNodes {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"for {set i 0} {$i < $node_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr ndnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend selobjs $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc pickarea_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"raise .staticpressure"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedAreas {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"set area_nums [ans_getvalue \"area,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"for {set i 0} {$i < $area_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr arnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend selobjs $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc autoCalculate {args} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable toploc"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable stepsize"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable rw"<<endl;
cout<<"set direction_flag [get_direction $gravity]"<<endl;
cout<<"set direction [lindex $direction_flag 0]"<<endl;
cout<<"set flag [lindex $direction_flag 1]"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"set nodes [getNodesAttachToArea]"<<endl;
cout<<"} else {"<<endl;
cout<<"set nodes $selobjs"<<endl;
cout<<"}"<<endl;
cout<<"if {[llength $nodes]==0} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set nodedata {}"<<endl;
cout<<"foreach node $nodes {"<<endl;
cout<<"lappend nodedata [ans_evalexpr [format \"N%s(%s)\" $direction $node]]"<<endl;
cout<<"}"<<endl;
cout<<"set nodedata [lsort -real $nodedata]"<<endl;
cout<<"set min_val [lindex $nodedata 0]"<<endl;
cout<<"set max_val [lindex $nodedata end]"<<endl;
cout<<"set height [expr $max_val-$min_val]"<<endl;
cout<<"if {$args==\"WaterTop\"} {"<<endl;
cout<<"set toploc [expr $flag==-1.0?$min_val:$max_val]"<<endl;
cout<<"}"<<endl;
cout<<"if {$args==\"Stepsize\"} {"<<endl;
cout<<"set stepsize [expr  -$flag*$rw]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc getNodesAttachToArea {}\\"<<endl;
cout<<"{"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"set selnodes {}"<<endl;
cout<<"ans_sendcommand \"ASEL,NONE\""<<endl;
cout<<"foreach area $selobjs {"<<endl;
cout<<"ans_sendcommand \"ASEL,A,,,$area\""<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"NSLA,S,1\"} err]"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"for {set i 0} {$i < $node_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr ndnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend selnodes $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"return $selnodes"<<endl;
cout<<"}"<<endl;
cout<<"proc apply_load {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable stepsize"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable toploc"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable picktype"<<endl;
cout<<"set  err  {}"<<endl;
cout<<"if {[llength $selobjs]==0} {"<<endl;
cout<<"set err \"No Object Was Select! \""<<endl;
cout<<"}"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"set nodes [getNodesAttachToArea]"<<endl;
cout<<"} else {"<<endl;
cout<<"set nodes $selobjs"<<endl;
cout<<"}"<<endl;
cout<<"if {[llength $nodes]==0} {"<<endl;
cout<<"set err \"No Nodes Was Select!!\""<<endl;
cout<<"}"<<endl;
cout<<"foreach var [list $toploc $stepsize] {"<<endl;
cout<<"if {[string trim $var]==\"\"} {"<<endl;
cout<<"set err \"Empty Input Data!\""<<endl;
cout<<"break"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {![string match {} $err]} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc $err]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set direction_flag [get_direction $gravity]"<<endl;
cout<<"set direction [lindex $direction_flag 0]"<<endl;
cout<<"if {$loadpattern==\"Replace\"} {"<<endl;
cout<<"set cmd_sfcum \"SFCUM,PRES,REPL,1,1,\""<<endl;
cout<<"} else {"<<endl;
cout<<"set cmd_sfcum \"SFCUM,PRES,ADD,1,1,\""<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand $cmd_sfcum} err"<<endl;
cout<<"catch {ans_sendcommand \"SFGRAD,PRES,0,$direction,$toploc,[expr $factor*$stepsize]\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SF,ALL,PRES,0\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/PSF,PRES,NORM,2,0,1\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/REP,FAST\"} err"<<endl;
cout<<"puts \"######## Static Pressure APDL Start ############\""<<endl;
cout<<"puts \"$cmd_sfcum\""<<endl;
cout<<"puts \"SFGRAD,PRES,0,$direction,$toploc,$stepsize*$factor\""<<endl;
cout<<"puts \"SF,ALL,PRES,0\""<<endl;
cout<<"puts \"######## Static Pressure APDL Finish ############\""<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )/GO} err"<<endl;
cout<<"after 500 {destroy .staticpressure}"<<endl;
cout<<"}"<<endl;
cout<<"proc get_direction {thedirection} \\"<<endl;
cout<<"{"<<endl;
cout<<"if {[string length $thedirection]==1} {"<<endl;
cout<<"set gravity $thedirection"<<endl;
cout<<"set  flag  -1.0"<<endl;
cout<<"} else {"<<endl;
cout<<"set gravity [string index $thedirection 1]"<<endl;
cout<<"set flag 1.0"<<endl;
cout<<"}"<<endl;
cout<<"return [list $gravity $flag]"<<endl;
cout<<"}"<<endl;
cout<<"proc changePickTypeEvent {} {"<<endl;
cout<<"variable picktype"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"variable last_picktype"<<endl;
cout<<"variable selobjs"<<endl;
cout<<"if {$picktype==$last_picktype} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set last_picktype $picktype"<<endl;
cout<<"set selobjs {}"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"$btn_pick configure -tooltip [msgcat::mc \"Select Areas \"]"<<endl;
cout<<"} else {"<<endl;
cout<<"$btn_pick configure -tooltip [msgcat::mc \"Select Nodes \"]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc selCurrentEvent {} {"<<endl;
cout<<"variable picktype"<<endl;
cout<<"if {$picktype==\"AREAS\"} {"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"} else {"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_node_area {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable picktype"<<endl;
cout<<"catch {ans_sendcommand )/NOPR} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_area,AREA} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"if {$picktype==\"NODES\"} {"<<endl;
cout<<"::uidl::callFnc Fnc_NSEL_S [namespace code picknode_callback]"<<endl;
cout<<"} else {"<<endl;
cout<<"::uidl::callFnc Fnc_ASEL_S [namespace code pickarea_callback]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::Customized::Util::StaticPressure::main"<<endl;

}
void CoutScript_PressureDynamic()
{
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval ::Customized::Util::DynamicPressure {"<<endl;
cout<<"proc main {} {\\"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable png"<<endl;
cout<<"variable font"<<endl;
cout<<"variable plotshow"<<endl;
cout<<"variable underface"<<endl;
cout<<"variable sideface"<<endl;
cout<<"variable ori_gravity"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable btn_under_check"<<endl;
cout<<"variable btn_side_check"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set png_unpick [file join $path images unpick24x24.png]"<<endl;
cout<<"set png(pick) [file join $path images pick24x24.png]"<<endl;
cout<<"set png(hide) [file join $path images hide24x24.png]"<<endl;
cout<<"set png(config) [file join $path images config24x24.png]"<<endl;
cout<<"set png(import) [file join $path images import24x24.png]"<<endl;
cout<<"set png(chart) [file join $path images chart24x24.png]"<<endl;
cout<<"set png(check) [file join $path images check24x24.png]"<<endl;
cout<<"set plotshow    [file join $path \"AnsysPlugin.exe\"]"<<endl;
cout<<"if [winfo exists .dynamicpressure] {"<<endl;
cout<<"wm deiconify .dynamicpressure"<<endl;
cout<<"raise .dynamicpressure"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .dynamicpressure]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Dynamic Pressure \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-380)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-500)/2}]"<<endl;
cout<<"wm geometry .dynamicpressure 380x500+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .torlence]} {"<<endl;
cout<<"destroy .torlence"<<endl;
cout<<"}"<<endl;
cout<<"destroy .dynamicpressure"<<endl;
cout<<"}"<<endl;
cout<<"set label_loadtype  [label $parent.label_loadtype \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Load Pattern \"] ]"<<endl;
cout<<"set combo_loadtype [euidl::combobox $parent.loadtype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope loadpattern] ]"<<endl;
cout<<"set labeltips [label $parent.labeltips \\"<<endl;
cout<<"-text [::msgcat::mc \"Please Select Data File: \"] \\"<<endl;
cout<<"-width 20 -font $font(cn)]"<<endl;
cout<<"set frame_file [frame $parent.frame_file]"<<endl;
cout<<"set textfile [entry $parent.textfile\\"<<endl;
cout<<"-textvariable [scope filename] \\"<<endl;
cout<<"-width 25\\"<<endl;
cout<<"-font $font(cn)]"<<endl;
cout<<"set btn_import [euidl::button $parent.importbtn \\"<<endl;
cout<<"-tooltip [::msgcat::mc \"Import File \"] \\"<<endl;
cout<<"-imagefile $png(import) \\"<<endl;
cout<<"-command [code selectFile_Click]]"<<endl;
cout<<"set btn_chart [euidl::button $parent.chartbtn \\"<<endl;
cout<<"-tooltip [::msgcat::mc \"Show Data \"] \\"<<endl;
cout<<"-imagefile $png(chart) \\"<<endl;
cout<<"-command [code btn_chart_click]]"<<endl;
cout<<"set label_side [euidl::label $parent.label_side \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Select Sideface: \"]]"<<endl;
cout<<"set entry_side [entry  $parent.entry_side  \\"<<endl;
cout<<"-textvariable [scope sideface] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-relief ridge\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set btn_side [euidl::button $parent.btn_side \\"<<endl;
cout<<"-command [list [namespace code pick_area] \"side\"]   \\"<<endl;
cout<<"-imagefile $png(pick) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Sideface: \"] ]"<<endl;
cout<<"set btn_side_check [euidl::button $parent.btn_side_check \\"<<endl;
cout<<"-command [list [code select_current] side]   \\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Current \"] ]"<<endl;
cout<<"set label_under [euidl::label $parent.label_under \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Select Underface: \"]]"<<endl;
cout<<"set entry_under [entry  $parent.entry_under  \\"<<endl;
cout<<"-textvariable [scope underface] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-relief ridge\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set btn_under [euidl::button $parent.btn_under \\"<<endl;
cout<<"-command [list [namespace code pick_area] \"under\"]   \\"<<endl;
cout<<"-imagefile $png(pick) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Underface: \"] ]"<<endl;
cout<<"set btn_under_check [euidl::button $parent.btn_under_check \\"<<endl;
cout<<"-command [list [code select_current] under]   \\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Current \"] ]"<<endl;
cout<<"set label_rw [euidl::label $parent.label_rw \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Water Weight \"]]"<<endl;
cout<<"set entry_rw [euidl::entry  $parent.entry_rw -width 10  \\"<<endl;
cout<<"-variable [scope rw] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_direction_G [euidl::label $parent.label_g_d \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"GravityDirection: \"]]"<<endl;
cout<<"set combo_direction_G [euidl::combobox $parent.ori_gravity \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-font $font(en) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"GravityDirection: \"] \\"<<endl;
cout<<"-variable [scope ori_gravity] ]"<<endl;
cout<<"set label_direction_W [euidl::label $parent.label_w_d \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"WaterFlowDirection: \"]]"<<endl;
cout<<"set combo_direction_W [euidl::combobox $parent.ori_water \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-tooltip [msgcat::mc \"WaterFlowDirection: \"] \\"<<endl;
cout<<"-font $font(en) \\"<<endl;
cout<<"-variable [scope ori_water] ]"<<endl;
cout<<"set label_factor [euidl::label $parent.label_factor \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Partial Factor: \"]]"<<endl;
cout<<"set entry_factor [euidl::entry  $parent.entryfactor -width 10  \\"<<endl;
cout<<"-variable [scope factor] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set frame_oncancel [frame $parent.frame_oncancel]"<<endl;
cout<<"set btn_ok [button $parent.btn_ok  \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [namespace code applyLoad] ]"<<endl;
cout<<"set btn_cancel [button $parent.btn_cancel  \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .dynamicpressure}]"<<endl;
cout<<"grid $labeltips -row 0 -column 0 -columnspan 2 -sticky w  -padx 2m  -pady 2m"<<endl;
cout<<"grid $btn_import -row 0 -column 2 -sticky w"<<endl;
cout<<"grid $btn_chart  -row 0 -column 3 -sticky e -padx 2m"<<endl;
cout<<"grid $textfile -row 1 -column 0 -columnspan 3 -sticky ew -padx 3m -pady 2m"<<endl;
cout<<"grid $label_loadtype  -row 2 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_loadtype  -row 2 -column 1 -sticky w -padx 2m  -pady 2m"<<endl;
cout<<"grid $label_direction_G -row 3 -column 0 -sticky w  -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_direction_G -row 3 -column 1 -sticky w  -padx 2m -pady 2m"<<endl;
cout<<"grid $label_under -row 4 -column 0 -sticky w  -padx 2m"<<endl;
cout<<"grid $entry_under -row 4 -column 1 -sticky w  -padx 2m"<<endl;
cout<<"grid $btn_under -row 4 -column 2 -sticky w"<<endl;
cout<<"grid $btn_under_check -row 4 -column 3 -sticky e   -padx 2m"<<endl;
cout<<"grid $label_direction_W -row 5 -column 0 -sticky w  -padx 2m"<<endl;
cout<<"grid $combo_direction_W -row 5 -column 1 -sticky w   -padx 2m"<<endl;
cout<<"grid $label_side -row 6 -column 0 -sticky w  -padx 2m"<<endl;
cout<<"grid $entry_side -row 6 -column 1 -sticky w  -padx 2m"<<endl;
cout<<"grid $btn_side -row 6 -column 2 -sticky w"<<endl;
cout<<"grid $btn_side_check -row 6 -column 3 -sticky e  -padx 2m"<<endl;
cout<<"grid $label_rw -row 7 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_rw -row 7 -column 1 -sticky w -padx 2m"<<endl;
cout<<"grid $label_factor -row 8 -column 0 -sticky w -padx 2m"<<endl;
cout<<"grid $entry_factor -row 8 -column 1 -sticky w -padx 2m"<<endl;
cout<<"pack  $btn_ok  $btn_cancel -in $frame_oncancel -side left -fill both -padx 12m -pady 4m"<<endl;
cout<<"grid $frame_oncancel  -row 9 -column 0   -columnspan 4   -sticky nsew"<<endl;
cout<<"$combo_direction_G insert list end [list X X -X -X  Y  Y -Y -Y  Z  Z  -Z -Z]"<<endl;
cout<<"$combo_direction_W insert list end [list X X -X -X  Y  Y -Y -Y  Z  Z  -Z -Z]"<<endl;
cout<<"$combo_loadtype  insert list end [list [msgcat::mc \"Replace \"] \"Replace\" [msgcat::mc \"Append \" ] \"Append\"]"<<endl;
cout<<"::Customized::Util::DynamicPressure::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc select_current {arg} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable btn_under_check"<<endl;
cout<<"variable btn_side_check"<<endl;
cout<<"variable activate_combo"<<endl;
cout<<"set activate_combo $arg"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"if {$arg==\"side\"} {"<<endl;
cout<<"$btn_side_check configure -relief sunken"<<endl;
cout<<"} else {"<<endl;
cout<<"$btn_under_check configure -relief sunken"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable underface"<<endl;
cout<<"variable sideface"<<endl;
cout<<"variable ori_gravity"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable rw"<<endl;
cout<<"set loadpattern \"Replace\""<<endl;
cout<<"set underface {}"<<endl;
cout<<"set sideface {}"<<endl;
cout<<"set factor 1.0"<<endl;
cout<<"set rw 10"<<endl;
cout<<"set acelX [ans_getvalue common,,acelcm,,real,22]"<<endl;
cout<<"set acelY [ans_getvalue common,,acelcm,,real,23]"<<endl;
cout<<"set acelZ [ans_getvalue common,,acelcm,,real,24]"<<endl;
cout<<"set  ori_gravity {}"<<endl;
cout<<"set  ori_water {}"<<endl;
cout<<"if {$acelX>0} {set ori_gravity X }"<<endl;
cout<<"if {$acelX<0} {set ori_gravity -X }"<<endl;
cout<<"if {$acelY>0} {set ori_gravity Y }"<<endl;
cout<<"if {$acelY<0} {set ori_gravity -Y }"<<endl;
cout<<"if {$acelZ>0} {set ori_gravity Z }"<<endl;
cout<<"if {$acelZ<0} {set ori_gravity -Z }"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_area {combo_name} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable ori_gravity"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable activate_combo"<<endl;
cout<<"set err {}"<<endl;
cout<<"if {$combo_name==\"under\" && $ori_gravity==\"\"} {"<<endl;
cout<<"set err \"No Underface Direction!\""<<endl;
cout<<"}"<<endl;
cout<<"if {$combo_name==\"side\" && $ori_water==\"\"} {"<<endl;
cout<<"set err \"No Sideface Direction!\""<<endl;
cout<<"}"<<endl;
cout<<"if {$err!=\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips: \"] \\"<<endl;
cout<<"-message  [::msgcat::mc $err]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set activate_combo $combo_name"<<endl;
cout<<"catch {ans_sendcommand )/NOPR} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_area,AREA} err"<<endl;
cout<<"::uidl::callFnc Fnc_ASEL_S [namespace code pickarea_callback]"<<endl;
cout<<"}"<<endl;
cout<<"proc pickarea_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedAreas"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .dynamicpressure]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedAreas {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable sideface"<<endl;
cout<<"variable underface"<<endl;
cout<<"variable activate_combo"<<endl;
cout<<"set area_nums [ans_getvalue \"area,,count\"]"<<endl;
cout<<"set num 0"<<endl;
cout<<"set areas {}"<<endl;
cout<<"for {set i 0} {$i < $area_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr arnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend areas $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {$activate_combo==\"side\"} {"<<endl;
cout<<"set sideface $areas"<<endl;
cout<<"} else {"<<endl;
cout<<"set underface $areas"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_node {loc_name} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable activate_entry"<<endl;
cout<<"if {$ori_water==\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips: \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"You Must Select the Water Direction First! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set activate_entry $loc_name"<<endl;
cout<<"catch {ans_sendcommand )/NOPR} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"::uidl::callFnc Fnc_NSEL_S [namespace code picknode_callback]"<<endl;
cout<<"}"<<endl;
cout<<"proc picknode_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .dynamicpressure]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedNodes {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable activate_entry"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"if {$node_nums>1} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips: \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Only 1 node can be select!\"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set direction_flag [get_direction $ori_water]"<<endl;
cout<<"set direction [lindex $direction_flag 0]"<<endl;
cout<<"set num [ans_evalexpr \"ndnext(0)\"]"<<endl;
cout<<"set loc [ans_evalexpr [format \"N%s(%s)\" $direction $num]]"<<endl;
cout<<"if {$activate_entry==\"start\"} {"<<endl;
cout<<"set startloc $loc"<<endl;
cout<<"} else {"<<endl;
cout<<"set endloc  $loc"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc get_direction {thedirection} \\"<<endl;
cout<<"{"<<endl;
cout<<"if {[string length $thedirection]==1} {"<<endl;
cout<<"set direction $thedirection"<<endl;
cout<<"set  flag  -1.0"<<endl;
cout<<"} else {"<<endl;
cout<<"set direction [string index $thedirection 1]"<<endl;
cout<<"set flag 1.0"<<endl;
cout<<"}"<<endl;
cout<<"return [list $direction $flag]"<<endl;
cout<<"}"<<endl;
cout<<"proc selectFile_Click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable parent"<<endl;
cout<<"set tempfile [tk_getOpenFile -initialfile *.txt -filetypes {{Txt .txt}}]"<<endl;
cout<<"if {[file exists $tempfile]} {"<<endl;
cout<<"set filename $tempfile"<<endl;
cout<<"loadDataFromTxt"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc loadDataFromTxt {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable inputdata"<<endl;
cout<<"if {[info exists inputdata]} {"<<endl;
cout<<"unset inputdata"<<endl;
cout<<"}"<<endl;
cout<<"set fl [open $filename r]"<<endl;
cout<<"set data [read $fl]"<<endl;
cout<<"close $fl"<<endl;
cout<<"array set inputdata $data"<<endl;
cout<<"}"<<endl;
cout<<"proc getElementNodeMap {arealist} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable elements"<<endl;
cout<<"catch {ans_sendcommand \"ASEL,NONE\"} err"<<endl;
cout<<"foreach area $arealist {"<<endl;
cout<<"catch {ans_sendcommand \"ASEL,A,,,$area\"} err"<<endl;
cout<<"}"<<endl;
cout<<"if {[catch {ans_sendcommand \"NSLA,S,1\"} err]} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips: \"] \\"<<endl;
cout<<"-message  [::msgcat::mc $err]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[info exists elements]} {"<<endl;
cout<<"unset elements"<<endl;
cout<<"}"<<endl;
cout<<"set count [ans_getvalue \"node,,count\"]"<<endl;
cout<<"set ndnum  0"<<endl;
cout<<"for {set i 0} {$i < $count} {incr i} {"<<endl;
cout<<"set  ndnum [ans_evalexpr \"NDNEXT($ndnum)\"]"<<endl;
cout<<"for {set j 1} {$j < 20} {incr j} {"<<endl;
cout<<"set enum  [ans_evalexpr \"ENEXTN($ndnum,$j)\"]"<<endl;
cout<<"if {$enum!=0} {"<<endl;
cout<<"lappend elements($enum) $ndnum"<<endl;
cout<<"} else {"<<endl;
cout<<"break"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc getNodeValue {loc} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable inputdata"<<endl;
cout<<"set keys [array names inputdata]"<<endl;
cout<<"if {[lsearch $keys $loc]>=0} {"<<endl;
cout<<"return $inputdata($loc)"<<endl;
cout<<"} else {"<<endl;
cout<<"lappend keys $loc"<<endl;
cout<<"set keys [lsort -real $keys]"<<endl;
cout<<"set index [lsearch $keys $loc]"<<endl;
cout<<"set len   [expr [llength $keys]-1]"<<endl;
cout<<"if {$index==0} {"<<endl;
cout<<"set x1 [lindex $keys 1]"<<endl;
cout<<"return 0"<<endl;
cout<<"} elseif {$index==$len} {"<<endl;
cout<<"set x1 [lindex $keys [expr $len-1]]"<<endl;
cout<<"return 0"<<endl;
cout<<"} else {"<<endl;
cout<<"set x1 [lindex $keys [expr $index-1]]"<<endl;
cout<<"set x2 [lindex $keys [expr $index+1]]"<<endl;
cout<<"set y1  $inputdata($x1)"<<endl;
cout<<"set y2  $inputdata($x2)"<<endl;
cout<<"return [expr $y1+($loc-$x1)*1.0*($y2-$y1)/($x2-$x1)]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_chart_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable filename"<<endl;
cout<<"variable inputdata"<<endl;
cout<<"variable plotshow"<<endl;
cout<<"variable parent"<<endl;
cout<<"if {![file exists $filename]} {return}"<<endl;
cout<<"set xdata [array names inputdata]"<<endl;
cout<<"if {[llength $xdata]==0} {return}"<<endl;
cout<<"set ydata {}"<<endl;
cout<<"foreach x $xdata {"<<endl;
cout<<"lappend ydata $inputdata($x)"<<endl;
cout<<"}"<<endl;
cout<<"set title  [::msgcat::mc \"Dynamic Pressure \"]"<<endl;
cout<<"set xlabel [::msgcat::mc \"Distance (m) \"]"<<endl;
cout<<"set ylabel [::msgcat::mc \"Water Height(m) \"]"<<endl;
cout<<"set geometry    [wm geometry $parent]"<<endl;
cout<<"set data  \"\\\"<root  title='$title' geometry='$geometry' xlabel='$xlabel' ylabel='$ylabel'>"<<endl;
cout<<"<graphs>"<<endl;
cout<<"<graph id='1'>"<<endl;
cout<<"<xlist>$xdata</xlist>"<<endl;
cout<<"<ylist>$ydata</ylist>"<<endl;
cout<<"<style legend='$title' line='black blue 0.6' point='black white 8' />"<<endl;
cout<<"</graph>"<<endl;
cout<<"</graphs>"<<endl;
cout<<"</root>\\\"\""<<endl;
cout<<"exec $plotshow $data"<<endl;
cout<<"raise $parent"<<endl;
cout<<"}"<<endl;
cout<<"proc applyLoad {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable ori_gravity"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable underface"<<endl;
cout<<"variable sideface"<<endl;
cout<<"variable filename"<<endl;
cout<<"if {![file exists $filename]} {"<<endl;
cout<<"tk_messageBox  -parent $parent -icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Failed import Data \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"File not exists,Please check the path! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"loadDataFromTxt"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_element,ELEMENT} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_area,AREA} err"<<endl;
cout<<"if {$loadpattern==\"Replace\"} {"<<endl;
cout<<"catch {ans_sendcommand \"SFCUM,PRES,REPL,1,1,\"} err"<<endl;
cout<<"} else {"<<endl;
cout<<"catch {ans_sendcommand \"SFCUM,PRES,ADD,1,1,\"} err"<<endl;
cout<<"}"<<endl;
cout<<"set  err  {}"<<endl;
cout<<"if {[llength $underface]==0} {"<<endl;
cout<<"set err \"No Underface Was Select!\""<<endl;
cout<<"} else {"<<endl;
cout<<"applyUnderLoad"<<endl;
cout<<"}"<<endl;
cout<<"if {[llength $sideface]==0} {"<<endl;
cout<<"set err \"No Sideface Was Select!\""<<endl;
cout<<"} else {"<<endl;
cout<<"applySideLoad"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"/PSF,PRES,NORM,2,0,1\"} err"<<endl;
cout<<"catch {ans_sendcommand \"/REPLO\"} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )/GO} err"<<endl;
cout<<"after 500 {destroy .dynamicpressure}"<<endl;
cout<<"}"<<endl;
cout<<"proc applyUnderLoad {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable underface"<<endl;
cout<<"variable elements"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable rw"<<endl;
cout<<"variable factor"<<endl;
cout<<"getElementNodeMap  $underface"<<endl;
cout<<"set water_ori_flag [get_direction $ori_water]"<<endl;
cout<<"set water_ori [lindex $water_ori_flag 0]"<<endl;
cout<<"foreach name [array names elements] {"<<endl;
cout<<"if {[llength $elements($name)] <3} {"<<endl;
cout<<"continue"<<endl;
cout<<"}"<<endl;
cout<<"set locs_h {}"<<endl;
cout<<"catch {ans_sendcommand \"NSEL,None\"} err"<<endl;
cout<<"foreach node $elements($name) {"<<endl;
cout<<"lappend locs_h [ans_evalexpr [format \"N%s(%s)\" $water_ori $node]]"<<endl;
cout<<"catch {ans_sendcommand \"NSEL,A,,,$node\"} err"<<endl;
cout<<"}"<<endl;
cout<<"set locs_h [lsort -real $locs_h]"<<endl;
cout<<"set min_loc [lindex $locs_h 0]"<<endl;
cout<<"set max_loc [lindex $locs_h end]"<<endl;
cout<<"set element_dis [expr $max_loc-$min_loc]"<<endl;
cout<<"set min_height [getNodeValue $min_loc]"<<endl;
cout<<"set max_height [getNodeValue $max_loc]"<<endl;
cout<<"set min_pressure [expr $rw*$min_height*$factor]"<<endl;
cout<<"set max_pressure [expr $rw*$max_height*$factor]"<<endl;
cout<<"set stepsize [expr ($max_pressure-$min_pressure)/$element_dis]"<<endl;
cout<<"catch {ans_sendcommand \"SFGRAD,PRES,0,$water_ori,$min_loc,$stepsize\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SF,ALL,PRES,$min_pressure\"} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc applySideLoad {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable sideface"<<endl;
cout<<"variable elements"<<endl;
cout<<"variable ori_gravity"<<endl;
cout<<"variable ori_water"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable rw"<<endl;
cout<<"getElementNodeMap  $sideface"<<endl;
cout<<"set water_ori_flag [get_direction $ori_water]"<<endl;
cout<<"set water_ori [lindex $water_ori_flag 0]"<<endl;
cout<<"set gravity_ori_flag [get_direction $ori_gravity]"<<endl;
cout<<"set gravity_ori [lindex $gravity_ori_flag 0]"<<endl;
cout<<"set gravity_flag [lindex $gravity_ori_flag end]"<<endl;
cout<<"foreach name [array names elements] {"<<endl;
cout<<"if {[llength $elements($name)] <3} {"<<endl;
cout<<"continue"<<endl;
cout<<"}"<<endl;
cout<<"set locs_h {}"<<endl;
cout<<"set locs_v {}"<<endl;
cout<<"catch {ans_sendcommand \"NSEL,None\"} err"<<endl;
cout<<"foreach node $elements($name) {"<<endl;
cout<<"lappend locs_h [ans_evalexpr [format \"N%s(%s)\" $water_ori $node]]"<<endl;
cout<<"lappend locs_v [ans_evalexpr [format \"N%s(%s)\" $gravity_ori $node]]"<<endl;
cout<<"catch {ans_sendcommand \"NSEL,A,,,$node\"} err"<<endl;
cout<<"}"<<endl;
cout<<"set sum [expr [join $locs_h \"+\"]]"<<endl;
cout<<"set average [expr $sum*1.0/[llength $elements($name)]]"<<endl;
cout<<"set absheight  [getNodeValue $average]"<<endl;
cout<<"set locs_v [lsort -real $locs_v]"<<endl;
cout<<"set min_loc_v [lindex $locs_v 0]"<<endl;
cout<<"set max_loc_v [lindex $locs_v end]"<<endl;
cout<<"set element_dis [expr $max_loc_v-$min_loc_v]"<<endl;
cout<<"set min_height [expr $absheight-$min_loc_v]"<<endl;
cout<<"set max_height [expr $absheight-$max_loc_v]"<<endl;
cout<<"if {$min_height<0} {continue}"<<endl;
cout<<"set min_pressure [expr $rw*$min_height*$factor]"<<endl;
cout<<"set max_pressure [expr $rw*$max_height*$factor]"<<endl;
cout<<"set stepsize [expr ($max_pressure-$min_pressure)/$element_dis]"<<endl;
cout<<"catch {ans_sendcommand \"SFGRAD,PRES,0,$direction,$min_loc_v,$stepsize\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SF,ALL,PRES,$min_pressure\"} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::Customized::Util::DynamicPressure::main"<<endl;

}
void CoutScript_PressureUplift()
{
cout<<"encoding system euc-cn"<<endl;
cout<<"package	 require msgcat"<<endl;
cout<<"namespace eval ::Customized::Util::UpLiftPressure {"<<endl;
cout<<"proc main {} {\\"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable btn_pick"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable scale"<<endl;
cout<<"variable expression"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable btn_check"<<endl;
cout<<"variable png"<<endl;
cout<<"variable font"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set png(select) [file join $path images pick24x24.png]"<<endl;
cout<<"set png(question) [file join $path images question24x24.png]"<<endl;
cout<<"set png(check) [file join $path images check24x24.png]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(small) {\"Microsoft YaHei\" 10 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"if [winfo exists .upliftpressure] {"<<endl;
cout<<"wm deiconify .upliftpressure"<<endl;
cout<<"raise .upliftpressure"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .upliftpressure]"<<endl;
cout<<"wm title $parent [::msgcat::mc \"UpLift Pressure \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-350)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-400)/2}]"<<endl;
cout<<"wm geometry .upliftpressure 350x320+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .exphelp]} {"<<endl;
cout<<"destroy .exphelp"<<endl;
cout<<"}"<<endl;
cout<<"destroy .upliftpressure"<<endl;
cout<<"}"<<endl;
cout<<"set label_loadtype  [label $parent.label_loadtype \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Load Pattern \"] ]"<<endl;
cout<<"set combo_loadtype [euidl::combobox $parent.loadtype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope loadpattern] ]"<<endl;
cout<<"set label_pick [euidl::label $parent.label_pick \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Selected Nodes: \"]]"<<endl;
cout<<"set btn_pick [euidl::button $parent.btn_pick \\"<<endl;
cout<<"-command [code pick_node]   \\"<<endl;
cout<<"-imagefile $png(select) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Nodes \"] ]"<<endl;
cout<<"set entry_pickinfo [entry $parent.entry_pickinfo \\"<<endl;
cout<<"-textvariable [scope nodes] \\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-relief  ridge]"<<endl;
cout<<"set btn_check [euidl::button $parent.btn_check \\"<<endl;
cout<<"-command [namespace code select_current]   \\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select Current \"] ]"<<endl;
cout<<"set label_factor [euidl::label $parent.label_p \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Partial Factor: \"]]"<<endl;
cout<<"set entry_factor [euidl::entry  $parent.entryfactor -width 10  \\"<<endl;
cout<<"-variable [scope factor] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_scale [euidl::label $parent.labelscale \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Scale: \"]]"<<endl;
cout<<"set entry_scale [euidl::entry  $parent.entryscale -width 10  \\"<<endl;
cout<<"-variable [scope scale] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata ansreal]"<<endl;
cout<<"set label_exp [euidl::label $parent.label_exp \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text \"[msgcat::mc \"Expression: \"]:\"]"<<endl;
cout<<"set entry_exp [euidl::entry  $parent.entry_exp -width 10  \\"<<endl;
cout<<"-variable [scope expression] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)]"<<endl;
cout<<"set btn_question [euidl::button $parent.btn_question \\"<<endl;
cout<<"-command [code showExpHelp]   \\"<<endl;
cout<<"-imagefile $png(question) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Show Expression \"] ]"<<endl;
cout<<"set frame_oncancel [frame $parent.frame_oncancel]"<<endl;
cout<<"set btn_ok [button $parent.btn_ok  \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command [namespace code apply_load] ]"<<endl;
cout<<"set btn_cancel [button $parent.btn_cancel  \\"<<endl;
cout<<"-text [msgcat::mc \"Cancel \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-width 5\\"<<endl;
cout<<"-command { destroy .upliftpressure}]"<<endl;
cout<<"grid $label_loadtype  -row 1 -column 0 -sticky w -pady 2m"<<endl;
cout<<"grid $combo_loadtype  -row 1 -column 1 -sticky w -pady 2m"<<endl;
cout<<"grid $label_pick -row 2 -column 0  -sticky w"<<endl;
cout<<"grid $entry_pickinfo -row 2 -column 1 -sticky w"<<endl;
cout<<"grid $btn_pick -row 2 -column 2"<<endl;
cout<<"grid $btn_check -row 2 -column 3"<<endl;
cout<<"grid $label_factor -row 3 -column 0 -sticky w"<<endl;
cout<<"grid $entry_factor -row 3 -column 1 -sticky w"<<endl;
cout<<"grid $label_scale -row 4 -column 0 -sticky w"<<endl;
cout<<"grid $entry_scale -row 4 -column 1 -sticky w"<<endl;
cout<<"grid $label_exp -row 5 -column 0  -sticky w"<<endl;
cout<<"grid $entry_exp -row 5 -column 1 -sticky w"<<endl;
cout<<"grid $btn_question -row 5 -column 2"<<endl;
cout<<"pack  $btn_ok  $btn_cancel -in $frame_oncancel -side left -fill both -padx 12m -pady 5m"<<endl;
cout<<"grid $frame_oncancel  -row 6 -column 0   -columnspan 3   -sticky nsew"<<endl;
cout<<"$combo_loadtype  insert list end [list [msgcat::mc \"Replace \"] \"Replace\" [msgcat::mc \"Append \" ] \"Append\"]"<<endl;
cout<<"::Customized::Util::UpLiftPressure::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc select_current {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable btn_check"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"$btn_check configure -relief sunken"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable scale"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable expression"<<endl;
cout<<"set loadpattern \"Replace\""<<endl;
cout<<"set factor 1.2"<<endl;
cout<<"set scale  0.01"<<endl;
cout<<"set nodes {}"<<endl;
cout<<"set expression {}"<<endl;
cout<<"}"<<endl;
cout<<"proc pick_node {} \\"<<endl;
cout<<"{"<<endl;
cout<<"catch {ans_sendcommand )/NOPR} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"::uidl::callFnc Fnc_NSEL_S [namespace code picknode_callback]"<<endl;
cout<<"}"<<endl;
cout<<"proc picknode_callback {uidlRtn} \\"<<endl;
cout<<"{"<<endl;
cout<<"switch -- $uidlRtn {"<<endl;
cout<<"0 { # OK"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"}"<<endl;
cout<<"1 { # Cancel"<<endl;
cout<<"}"<<endl;
cout<<"2 { # Apply"<<endl;
cout<<"get_SelectedNodes"<<endl;
cout<<"catch {ans_sendcommand Fnc_RemoveDialogs} err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"after 25 [raise .upliftpressure]"<<endl;
cout<<"}"<<endl;
cout<<"proc get_SelectedNodes {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable nodes"<<endl;
cout<<"set node_nums [ans_getvalue \"node,,count\"]"<<endl;
cout<<"set nodes {}"<<endl;
cout<<"set num 0"<<endl;
cout<<"for {set i 0} {$i < $node_nums} {incr i} {"<<endl;
cout<<"set num [ans_evalexpr ndnext($num)]"<<endl;
cout<<"if {$num!=0} {"<<endl;
cout<<"lappend nodes $num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc apply_load {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable scale"<<endl;
cout<<"variable nodes"<<endl;
cout<<"variable loadpattern"<<endl;
cout<<"variable expression"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_element,ELEMENT} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_area,AREA} err"<<endl;
cout<<"set  err  {}"<<endl;
cout<<"if {[llength $nodes]==0} {"<<endl;
cout<<"set err \"No Nodes Was Select!\""<<endl;
cout<<"}"<<endl;
cout<<"if {$expression==\"\"} {"<<endl;
cout<<"set err \"Expression is None \""<<endl;
cout<<"}"<<endl;
cout<<"set firstnode [ans_evalexpr \"ndnext(0)\"]"<<endl;
cout<<"set theExp [ParseExpression $firstnode]"<<endl;
cout<<"if {[catch {ans_evalexpr $theExp}]} {"<<endl;
cout<<"set err \"Expression is Wrong! \""<<endl;
cout<<"}"<<endl;
cout<<"if {![string match {} $err]} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc $err]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=21} {"<<endl;
cout<<"ans_sendcommand \"/SOLU\""<<endl;
cout<<"}"<<endl;
cout<<"if {$loadpattern==\"Replace\"} {"<<endl;
cout<<"set cmd_sfcum \"SFCUM,PRES,REPL,1,1,\""<<endl;
cout<<"} else {"<<endl;
cout<<"set cmd_sfcum \"SFCUM,PRES,ADD,1,1,\""<<endl;
cout<<"}"<<endl;
cout<<"set NMAX [lindex [lsort -real $nodes] end]"<<endl;
cout<<"ans_sendcommand   $cmd_sfcum"<<endl;
cout<<"ans_sendcommand  \"*dim,_PRES,array,$NMAX\""<<endl;
cout<<"foreach node $nodes {"<<endl;
cout<<"ans_sendcommand \"_PRES($node)=$factor*$scale*([ParseExpression $node])\""<<endl;
cout<<"}"<<endl;
cout<<"ans_sendcommand \"SFFUN,PRES,_PRES(1)\""<<endl;
cout<<"ans_sendcommand \"SF,ALL,PRES,0\""<<endl;
cout<<"ans_sendcommand \"*SET,_PRES\""<<endl;
cout<<"ans_sendcommand \"/PSF,PRES,NORM,2,0,1\""<<endl;
cout<<"ans_sendcommand \"/REP,FAST\""<<endl;
cout<<"puts \"######## UpLift Pressure APDL Start ############\""<<endl;
cout<<"puts \">>>> *dim,_PRES,array,$NMAX\""<<endl;
cout<<"puts \">>>> _PRES(i)=$factor*$scale*([ParseExpression i])\""<<endl;
cout<<"puts \">>>> $cmd_sfcum\""<<endl;
cout<<"puts \">>>> SFFUN,PRES,_PRES(1)\""<<endl;
cout<<"puts \">>>> SF,ALL,PRES,0\""<<endl;
cout<<"puts \">>>> *SET,_PRES\""<<endl;
cout<<"puts \"######## UpLift Pressure APDL Finish ############\""<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )/GO} err"<<endl;
cout<<"after 500 {destroy .upliftpressure}"<<endl;
cout<<"}"<<endl;
cout<<"proc ParseExpression {node} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable expression"<<endl;
cout<<"regsub -all -nocase {NX\\(.*\\)|NX|X}  $expression NX($node)  regx"<<endl;
cout<<"regsub -all -nocase {NY\\(.*\\)|NY|Y}  $regx       NY($node)  regy"<<endl;
cout<<"regsub -all -nocase {NZ\\(.*\\)|NZ|Z}  $regy       NZ($node)  regz"<<endl;
cout<<"return $regz"<<endl;
cout<<"}"<<endl;
cout<<"proc showExpHelp {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable factor"<<endl;
cout<<"variable scale"<<endl;
cout<<"variable utimateExp"<<endl;
cout<<"if [winfo exists .exphelp] {"<<endl;
cout<<"destroy .exphelp"<<endl;
cout<<"}"<<endl;
cout<<"set utimateExp {}"<<endl;
cout<<"set help [toplevel .exphelp]"<<endl;
cout<<"wm title $help [::msgcat::mc \"Show Expression \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-500)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-220)/2}]"<<endl;
cout<<"wm geometry .exphelp 500x220+$x+$y"<<endl;
cout<<"set label_tips [label $help.label_tips \\"<<endl;
cout<<"-text [::msgcat::mc \"Utimate Expression:\"]\\"<<endl;
cout<<"-font $font(cn)]"<<endl;
cout<<"set entry_exp [entry $help.entry_exp \\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-relief ridge\\"<<endl;
cout<<"-state readonly\\"<<endl;
cout<<"-textvariable [scope utimateExp]]"<<endl;
cout<<"set tips1 [label $help.tips1 \\"<<endl;
cout<<"-text [::msgcat::mc \"Expression Is NoCase\"]\\"<<endl;
cout<<"-font $font(small)]"<<endl;
cout<<"set tips2 [label $help.tips2 \\"<<endl;
cout<<"-text [::msgcat::mc \"X->NX(id),Y->NY(id),Z->NZ(id)\"]\\"<<endl;
cout<<"-font $font(small)]"<<endl;
cout<<"set tips3 [label $help.tips3 \\"<<endl;
cout<<"-text [::msgcat::mc \"Exp:2*X+Y-Z+100=2*NX+NY()-NZ()\"]\\"<<endl;
cout<<"-font $font(small)]"<<endl;
cout<<"set tips4 [label $help.tips4 \\"<<endl;
cout<<"-text [::msgcat::mc \"Utimate Result\"]\\"<<endl;
cout<<"-font $font(small)]"<<endl;
cout<<"set btnok [button $help.btnok \\"<<endl;
cout<<"-text  [::msgcat::mc \"Ok\"]\\"<<endl;
cout<<"-font $font(small)\\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command {destroy .exphelp}]"<<endl;
cout<<"grid $tips1 -row 0 -column 0 -sticky w"<<endl;
cout<<"grid $tips2 -row 1 -column 0 -sticky w"<<endl;
cout<<"grid $tips3 -row 2 -column 0 -sticky w"<<endl;
cout<<"grid $tips4 -row 3 -column 0 -sticky w"<<endl;
cout<<"grid $btnok -row 6 -column 0 -pady 3m"<<endl;
cout<<"set parsedexp [ParseExpression \"id\"]"<<endl;
cout<<"if {$parsedexp!=\"\"} {"<<endl;
cout<<"grid $label_tips -row 4 -column 0 -sticky w"<<endl;
cout<<"grid $entry_exp -row 5 -column 0 -sticky ew"<<endl;
cout<<"set utimateExp \"$factor*$scale*($parsedexp)\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::Customized::Util::UpLiftPressure::main"<<endl;

}
void CoutScript_ManagerComponent()
{
cout<<"package require msgcat"<<endl;
cout<<"namespace eval ::Customized::Manager::Component {} {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"variable cmplistvar"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set font(content)  {\"Microsoft YaHei\" 11 normal}"<<endl;
cout<<"set font(title)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set png(node) [file join $path images node24x24.png]"<<endl;
cout<<"set png(element) [file join $path images element24x24.png]"<<endl;
cout<<"set png(create) [file join $path images new24x24.png]"<<endl;
cout<<"set png(delete) [file join $path images delete24x24.png]"<<endl;
cout<<"set png(display) [file join $path images display24x24.png]"<<endl;
cout<<"set png(plot) [file join $path images plot24x24.png]"<<endl;
cout<<"set png(info) [file join $path images info24x24.png]"<<endl;
cout<<"if {[winfo exists .componentmanager]} {"<<endl;
cout<<"wm deiconify .componentmanager"<<endl;
cout<<"raise .componentmanager"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .componentmanager]"<<endl;
cout<<"wm title $parent [msgcat::mc \"Component Manager \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-700)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-450)/2}]"<<endl;
cout<<"wm geometry $parent  700x450+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .cmpapdl]} {"<<endl;
cout<<"destroy .cmpapdl"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .cmpinfo]} {"<<endl;
cout<<"destroy .cmpinfo"<<endl;
cout<<"}"<<endl;
cout<<"if {[winfo exists .cmpnew]} {"<<endl;
cout<<"destroy .cmpnew"<<endl;
cout<<"}"<<endl;
cout<<"destroy .componentmanager"<<endl;
cout<<"}"<<endl;
cout<<"set left [euidl::labeledframe $parent.left -font $font(content)  -text [msgcat::mc \"Defined Components \"]]"<<endl;
cout<<"grid $left -row 1 -column 0  -sticky news"<<endl;
cout<<"set left [$left childsite]"<<endl;
cout<<"set header [euidl::labeledframe $parent.bottom -font $font(content) -text [msgcat::mc \"Toolbar \"]]"<<endl;
cout<<"set right [euidl::labeledframe $parent.right -font $font(content) -text [msgcat::mc \"Selected Components \"]]"<<endl;
cout<<"grid $right -row 1 -column 1  -sticky news"<<endl;
cout<<"set right [$right childsite]"<<endl;
cout<<"set footer [frame $parent.footer]"<<endl;
cout<<"grid $footer  -row 2 -column 0  -columnspan 2"<<endl;
cout<<"grid  columnconfigure $parent 0 -weight 2"<<endl;
cout<<"grid  columnconfigure $parent 1 -weight 1"<<endl;
cout<<"grid  rowconfigure $parent 1 -weight 1"<<endl;
cout<<"grid  rowconfigure $parent 2 -weight 1"<<endl;
cout<<"set btnok [button $parent.ok -text [msgcat::mc \"Ok \"]  -width 8 -font $font(content) -command [code execAPDL] ]"<<endl;
cout<<"set btncancel [button $parent.cancel -text [msgcat::mc \"Cancel \"] -width 8 -font $font(content) -command {destroy .componentmanager} ]"<<endl;
cout<<"pack  $btnok  $btncancel -in $footer -side left -padx 15m -pady 4m"<<endl;
cout<<"set table [euidl::colhead $left.table \\"<<endl;
cout<<"-variable [scope tabledata] \\"<<endl;
cout<<"-selectbackground #09f\\"<<endl;
cout<<"-borderwidth 0 \\"<<endl;
cout<<"-hscrollmode none \\"<<endl;
cout<<"-contextmenu 1 \\"<<endl;
cout<<"]"<<endl;
cout<<"$table insert cols {Name} end"<<endl;
cout<<"$table insert cols {Type} end"<<endl;
cout<<"$table insert cols {Property} end"<<endl;
cout<<"$table tag configure {Name} -sortmethod dictionary"<<endl;
cout<<"$table tag configure {Type} -sortmethod dictionary"<<endl;
cout<<"$table tag configure {Property} -sortmethod dictionary"<<endl;
cout<<"$table tag configure title -anchor center"<<endl;
cout<<"$table tag configure title -font $font(title)"<<endl;
cout<<"$table tag configure row -font $font(content)"<<endl;
cout<<"$table tag configure row -anchor center"<<endl;
cout<<"[$table component table] width [$table tag coltag {Name}] 30"<<endl;
cout<<"[$table component table] width [$table tag coltag {Type}] 15"<<endl;
cout<<"[$table component table] width [$table tag coltag {Property}] 30"<<endl;
cout<<"[$table component table] configure -rowheight 2"<<endl;
cout<<"bind $table <Double-1> [code showComponent]"<<endl;
cout<<"pack $table -fill both -expand 1"<<endl;
cout<<"$table deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Sel \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-command [list [code handleComponent] \"S\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"UnSel \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-command [list [code handleComponent] \"U\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"ReSel \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-command [list [code handleComponent] \"R\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"AlsoSel \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-command [list [code handleComponent] \"A\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [::msgcat::mc \"Display Component \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [ code Display]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [::msgcat::mc \"Plot Component InContext \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [ code PlotInContext]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Delete Component \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [namespace code delComponent]"<<endl;
cout<<"set cmplistbox [euidl::scrolledlistbox $right.cmplistbox \\"<<endl;
cout<<"-listvariable [scope cmplistvar]\\"<<endl;
cout<<"-exportselection false \\"<<endl;
cout<<"-height 250 \\"<<endl;
cout<<"-selectmode extended\\"<<endl;
cout<<"-hscrollmode none \\"<<endl;
cout<<"-textfont  $font(content) \\"<<endl;
cout<<"-contextmenu 1 \\"<<endl;
cout<<"-selectbackground #09f\\"<<endl;
cout<<"-dblclickcommand [namespace code editAPDL] \\"<<endl;
cout<<"-relief  flat"<<endl;
cout<<"]"<<endl;
cout<<"$cmplistbox deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$cmplistbox insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"MoveUp \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [list [namespace code cmplistMove] \"up\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$cmplistbox insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"MoveDown \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [list [namespace code cmplistMove] \"down\"]"<<endl;
cout<<"incr cmindex"<<endl;
cout<<"$cmplistbox insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Del \"] \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-command [namespace code delAPDL]"<<endl;
cout<<"grid $cmplistbox -sticky news"<<endl;
cout<<"grid  columnconfigure $right 0 -weight 1"<<endl;
cout<<"grid  columnconfigure $left 0 -weight 1"<<endl;
cout<<"grid  rowconfigure $right 0 -weight 1"<<endl;
cout<<"grid  rowconfigure $left 0 -weight 1"<<endl;
cout<<"set btn_node [euidl::button $parent.btn_node \\"<<endl;
cout<<"-command [namespace code ShowNodesFilter] \\"<<endl;
cout<<"-imagefile $png(node) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Nodes Filter \"]]"<<endl;
cout<<"set btn_element [euidl::button $parent.btn_element \\"<<endl;
cout<<"-command [namespace code ShowElementsFilter] \\"<<endl;
cout<<"-imagefile $png(element) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Elements Filter \"] ]"<<endl;
cout<<"set btn_create [euidl::button $parent.btn_create \\"<<endl;
cout<<"-command [code createComponent] \\"<<endl;
cout<<"-imagefile $png(create) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Create Component \"] ]"<<endl;
cout<<"set btn_delete [euidl::button $parent.btn_delete \\"<<endl;
cout<<"-command [code delComponent]\\"<<endl;
cout<<"-imagefile $png(delete) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Delete Component \"] ]"<<endl;
cout<<"set btn_display [euidl::button $parent.btn_display \\"<<endl;
cout<<"-command [code Display]\\"<<endl;
cout<<"-imagefile $png(display) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Display Component \"] ]"<<endl;
cout<<"set btn_plot [euidl::button $parent.btn_plot \\"<<endl;
cout<<"-command [code PlotInContext]\\"<<endl;
cout<<"-imagefile $png(plot) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Plot Component InContext \"] ]"<<endl;
cout<<"set btn_list [euidl::button $parent.btn_list \\"<<endl;
cout<<"-command [code ListWithEntities]\\"<<endl;
cout<<"-imagefile $png(info) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Show Component Detail \"] ]"<<endl;
cout<<"grid $header -row 0 -column 0 -sticky news -columnspan 2"<<endl;
cout<<"set header [$header childsite]"<<endl;
cout<<"pack $btn_create $btn_delete $btn_node $btn_element\\"<<endl;
cout<<"$btn_display $btn_plot $btn_list\\"<<endl;
cout<<"-in $header -side left -padx 1m"<<endl;
cout<<"update idletasks"<<endl;
cout<<"::Customized::Manager::Component::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc ShowNodesFilter {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable  nodeseltype"<<endl;
cout<<"variable  nodeselmethod"<<endl;
cout<<"variable  nodeselitem"<<endl;
cout<<"variable  minnodeloc"<<endl;
cout<<"variable  maxnodeloc"<<endl;
cout<<"variable label_nodeselitems"<<endl;
cout<<"variable combo_nodeselitems"<<endl;
cout<<"variable label_location"<<endl;
cout<<"variable entry_minlocation"<<endl;
cout<<"variable entry_maxlocation"<<endl;
cout<<"if {[winfo exists .nodefilter]} {"<<endl;
cout<<"destroy .nodefilter"<<endl;
cout<<"}"<<endl;
cout<<"set nodefilter [toplevel .nodefilter]"<<endl;
cout<<"wm title $nodefilter [msgcat::mc \"Nodes Filter \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-280)/2}]"<<endl;
cout<<"wm geometry $nodefilter  300x280+$x+$y"<<endl;
cout<<"set label_seltype  [label $nodefilter.label_seltype \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Select Type \"] ]"<<endl;
cout<<"set combo_seltype  [euidl::combobox $nodefilter.combo_seltype  \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope nodeseltype ] ]"<<endl;
cout<<"set label_selmethod  [label $nodefilter.label_selmethod \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Select Method \"] ]"<<endl;
cout<<"set combo_selmethod  [euidl::combobox $nodefilter.combo_selmethod  \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-command [code changeNodeMethod]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope nodeselmethod] ]"<<endl;
cout<<"set label_nodeselitems  [label $nodefilter.label_nodeselitems \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Select Location \"] ]"<<endl;
cout<<"set combo_nodeselitems  [euidl::combobox $nodefilter.combo_nodeselitems  \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope nodeselitem] ]"<<endl;
cout<<"set label_location  [label $nodefilter.label_location \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Location Scope \"] ]"<<endl;
cout<<"set entry_minlocation [entry  $nodefilter.entry_minlocation  \\"<<endl;
cout<<"-textvariable [scope minnodeloc] \\"<<endl;
cout<<"-width 6\\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set entry_maxlocation [entry  $nodefilter.entry_maxlocation  \\"<<endl;
cout<<"-textvariable [scope maxnodeloc] \\"<<endl;
cout<<"-width 6\\"<<endl;
cout<<"-font $font(content)]"<<endl;
cout<<"set btn_ok  [button $nodefilter.btnok \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [code ok_nodefilter_click]\\"<<endl;
cout<<"-text [::msgcat::mc \"Ok \"] ]"<<endl;
cout<<"set btn_cancel [button $nodefilter.btncancel \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command {destroy .nodefilter}\\"<<endl;
cout<<"-text [::msgcat::mc \"Cancel \"] ]"<<endl;
cout<<"grid $label_selmethod -row 0 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_selmethod -row 0 -column 1"<<endl;
cout<<"grid $label_nodeselitems -row 1 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_nodeselitems -row 1 -column 1"<<endl;
cout<<"grid $label_location -row 2 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $entry_minlocation -row 2 -column 1 -sticky w"<<endl;
cout<<"grid $entry_maxlocation -row 2 -column 1 -sticky e"<<endl;
cout<<"grid $label_seltype -row 3 -column 0 -sticky w -padx 2m -pady 2m"<<endl;
cout<<"grid $combo_seltype -row 3 -column 1"<<endl;
cout<<"grid $btn_ok -row 4 -column 0 -pady 4m"<<endl;
cout<<"grid $btn_cancel -row 4 -column 1"<<endl;
cout<<"$combo_selmethod insert list end [list [msgcat::mc \"By Location \"] \"LOC\" [msgcat::mc \"Attached To \"]  \"1\"]"<<endl;
cout<<"$combo_nodeselitems insert list end [list \"X\" \"X\" \"Y\" \"Y\" \"Z\" \"Z\"]"<<endl;
cout<<"$combo_seltype insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"Sel \"] S\\"<<endl;
cout<<"[msgcat::mc \"ReSel \"] R\\"<<endl;
cout<<"[msgcat::mc \"AlsoSel \"] A \\"<<endl;
cout<<"[msgcat::mc \"UnSel \"] U]"<<endl;
cout<<"set nodeselmethod \"LOC\""<<endl;
cout<<"set nodeselitem   \"X\""<<endl;
cout<<"set nodeseltype   \"R\""<<endl;
cout<<"}"<<endl;
cout<<"proc changeNodeMethod {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable nodeselmethod"<<endl;
cout<<"variable nodeselitem"<<endl;
cout<<"variable label_nodeselitems"<<endl;
cout<<"variable combo_nodeselitems"<<endl;
cout<<"variable label_location"<<endl;
cout<<"variable entry_minlocation"<<endl;
cout<<"variable entry_maxlocation"<<endl;
cout<<"$combo_nodeselitems delete list 0 end"<<endl;
cout<<"switch -exact -- $nodeselmethod {"<<endl;
cout<<"LOC {"<<endl;
cout<<"grid $label_location  $entry_minlocation $entry_maxlocation"<<endl;
cout<<"$label_nodeselitems configure -text [msgcat::mc  \"Select Location \"]"<<endl;
cout<<"$combo_nodeselitems insert list end [list \"X\" \"X\" \"Y\" \"Y\" \"Z\" \"Z\"]"<<endl;
cout<<"set nodeselitem \"X\""<<endl;
cout<<"}"<<endl;
cout<<"1  {"<<endl;
cout<<"grid remove $label_location  $entry_minlocation $entry_maxlocation"<<endl;
cout<<"$label_nodeselitems configure -text [msgcat::mc  \"Attached To \"]"<<endl;
cout<<"$combo_nodeselitems insert list end [list \"Elements\" \"E\" \"Areas\" \"A\" \"Lines\" \"L\" \"Volumes\" \"V\"]"<<endl;
cout<<"set nodeselitem \"A\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_nodefilter_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"variable nodeselmethod"<<endl;
cout<<"variable nodeselitem"<<endl;
cout<<"variable nodeseltype"<<endl;
cout<<"variable minnodeloc"<<endl;
cout<<"variable maxnodeloc"<<endl;
cout<<"switch -exact -- $nodeselmethod {"<<endl;
cout<<"LOC {"<<endl;
cout<<"set command \"NSEL,$nodeseltype,LOC,$nodeselitem,$minnodeloc,$maxnodeloc\""<<endl;
cout<<"}"<<endl;
cout<<"1 {"<<endl;
cout<<"set command \"NSL$nodeselitem,$nodeseltype,1\""<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"$cmplistbox insert end [list $command $command]"<<endl;
cout<<"if { [$cmplistbox size]>0} {"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$cmplistbox getContextMenu] entryconfigure $i -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc ShowElementsFilter {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable  elementseltype"<<endl;
cout<<"variable  elementselmethod"<<endl;
cout<<"variable  elementselitem"<<endl;
cout<<"variable label_elementselitems"<<endl;
cout<<"variable combo_elementselitems"<<endl;
cout<<"if {[winfo exists .elementfilter]} {"<<endl;
cout<<"destroy .elementfilter"<<endl;
cout<<"}"<<endl;
cout<<"set elementfilter [toplevel .elementfilter]"<<endl;
cout<<"wm title $elementfilter [msgcat::mc \"Elements Filter \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-280)/2}]"<<endl;
cout<<"wm geometry $elementfilter  300x280+$x+$y"<<endl;
cout<<"set label_seltype  [label $elementfilter.label_seltype \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Select Type \"] ]"<<endl;
cout<<"set combo_seltype  [euidl::combobox $elementfilter.combo_seltype  \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope elementseltype ] ]"<<endl;
cout<<"set label_eleselmethod  [label $elementfilter.label_eleselmethod \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Select Method \"] ]"<<endl;
cout<<"set combo_eleselmethod  [euidl::combobox $elementfilter.combo_eleselmethod  \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-command [code changeElementMethod]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope elementselmethod] ]"<<endl;
cout<<"set label_elementselitems  [label $elementfilter.label_elementselitems \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-text [::msgcat::mc \"Selected Category \"] ]"<<endl;
cout<<"set combo_elementselitems  [euidl::combobox $elementfilter.combo_elementselitems  \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 12\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope elementselitem] ]"<<endl;
cout<<"set btn_ok  [button $elementfilter.btnok \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [code ok_elementfilter_click]\\"<<endl;
cout<<"-text [::msgcat::mc \"Ok \"] ]"<<endl;
cout<<"set btn_cancel [button $elementfilter.btncancel \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command {destroy .elementfilter}\\"<<endl;
cout<<"-text [::msgcat::mc \"Cancel \"] ]"<<endl;
cout<<"grid $label_eleselmethod -row 0 -column 0 -sticky w -padx 2m -pady 6m"<<endl;
cout<<"grid $combo_eleselmethod -row 0 -column 1"<<endl;
cout<<"grid $label_elementselitems -row 1 -column 0 -sticky w -padx 2m -pady 4m"<<endl;
cout<<"grid $combo_elementselitems -row 1 -column 1"<<endl;
cout<<"grid $label_seltype -row 3 -column 0 -sticky w -padx 2m -pady 4m"<<endl;
cout<<"grid $combo_seltype -row 3 -column 1"<<endl;
cout<<"grid $btn_ok -row 4 -column 0 -pady 10m"<<endl;
cout<<"grid $btn_cancel -row 4 -column 1"<<endl;
cout<<"$combo_eleselmethod insert list end [list \\"<<endl;
cout<<"[::msgcat::mc \"Mat \"] \"Mat\" \\"<<endl;
cout<<"[::msgcat::mc \"Type \"]  \"Type\"\\"<<endl;
cout<<"[::msgcat::mc \"Real \"] \"Real\"]"<<endl;
cout<<"$combo_elementselitems insert list end [GetAnsysData MAT]"<<endl;
cout<<"$combo_seltype insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"Sel \"] S\\"<<endl;
cout<<"[msgcat::mc \"ReSel \"] R\\"<<endl;
cout<<"[msgcat::mc \"AlsoSel \"] A \\"<<endl;
cout<<"[msgcat::mc \"UnSel \"] U]"<<endl;
cout<<"set elementselmethod \"Mat\""<<endl;
cout<<"set elementseltype   \"R\""<<endl;
cout<<"}"<<endl;
cout<<"proc changeElementMethod {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable elementselmethod"<<endl;
cout<<"variable label_elementselitems"<<endl;
cout<<"variable combo_elementselitems"<<endl;
cout<<"variable elementselitem"<<endl;
cout<<"$combo_elementselitems delete list 0 end"<<endl;
cout<<"$label_elementselitems configure -text \"[::msgcat::mc \"$elementselmethod \"]:\""<<endl;
cout<<"set listdata [GetAnsysData $elementselmethod]"<<endl;
cout<<"$combo_elementselitems insert list end $listdata"<<endl;
cout<<"set elementselitem [lindex [lindex $listdata 0] 0]"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_elementfilter_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"variable elementselmethod"<<endl;
cout<<"variable elementselitem"<<endl;
cout<<"variable elementseltype"<<endl;
cout<<"if {[string trim $elementselitem]==\"\"} {"<<endl;
cout<<"tk_messageBox  \\"<<endl;
cout<<"-parent .elementfilter \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  \"[::msgcat::mc \"$elementselmethod \"] [::msgcat::mc \"UnDefined!\"]\""<<endl;
cout<<"} else {"<<endl;
cout<<"set command \"ESEL,$elementseltype,$elementselmethod,,$elementselitem\""<<endl;
cout<<"$cmplistbox insert end [list $command $command]"<<endl;
cout<<"if { [$cmplistbox size]>0} {"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$cmplistbox getContextMenu] entryconfigure $i -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc GetAnsysData {category} \\"<<endl;
cout<<"{"<<endl;
cout<<"set datalist {}"<<endl;
cout<<"foreach {name id} [ans_getlist $category] {"<<endl;
cout<<"if {[string match \"None defined\" $name]} {"<<endl;
cout<<"continue"<<endl;
cout<<"}"<<endl;
cout<<"set id [string trim $id]"<<endl;
cout<<"lappend datalist $id $id"<<endl;
cout<<"}"<<endl;
cout<<"lappend datalist \"\" \"\""<<endl;
cout<<"return $datalist"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable cmplistvar"<<endl;
cout<<"variable cmpcategory"<<endl;
cout<<"set cmplistvar {}"<<endl;
cout<<"set cmpcategory(1)  \"Nodes\""<<endl;
cout<<"set cmpcategory(2)  \"Elements\""<<endl;
cout<<"set cmpcategory(6)   \"KeyPoints\""<<endl;
cout<<"set cmpcategory(7)   \"Lines\""<<endl;
cout<<"set cmpcategory(8)   \"Areas\""<<endl;
cout<<"set cmpcategory(9)   \"Volumes\""<<endl;
cout<<"set cmpcategory(11)   \"Subcomponents L1\""<<endl;
cout<<"set cmpcategory(12)   \"Subcomponents L2\""<<endl;
cout<<"set cmpcategory(13)   \"Subcomponents L3\""<<endl;
cout<<"set cmpcategory(14)   \"Subcomponents L4\""<<endl;
cout<<"set cmpcategory(15)   \"Subcomponents L5\""<<endl;
cout<<"set num [ans_getvalue \"COMP,0,NCOMP\"]"<<endl;
cout<<"for {set i 0} {$i < $num} {incr i} {"<<endl;
cout<<"set id [expr $i+1]"<<endl;
cout<<"set name [string trim [ans_getvalue \"COMP,$id,NAME\"]]"<<endl;
cout<<"if {[string index $name 0]==\"_\"} {"<<endl;
cout<<"continue"<<endl;
cout<<"}"<<endl;
cout<<"set type [string trim [ans_getvalue \"COMP,$name,TYPE\"]]"<<endl;
cout<<"set index  \"_property_$name\""<<endl;
cout<<"set flag [ans_getvalue parm,$index,type]"<<endl;
cout<<"if {$flag!=-1} {"<<endl;
cout<<"set property [string trim [ans_getvalue parm,$index,value]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set property \"UnDefined\""<<endl;
cout<<"}"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($i,-1) {}"<<endl;
cout<<"set tabledata($i,0)  $name"<<endl;
cout<<"set tabledata($i,1)  $cmpcategory($type)"<<endl;
cout<<"set tabledata($i,2)  $property"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"for {set i 0} {$i < 7} {incr i} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure $i -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc handleComponent {operator} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"set selection [lsort -integer  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"set cmpname $tabledata($sel,0)"<<endl;
cout<<"set command \"CMSEL,$operator,$cmpname\""<<endl;
cout<<"$cmplistbox insert end [list $command $command]"<<endl;
cout<<"}"<<endl;
cout<<"if { [llength $selection] > 1 } {"<<endl;
cout<<"set rowNum 0"<<endl;
cout<<"} else {"<<endl;
cout<<"set rowNum [$table index end row]"<<endl;
cout<<"if { $sel < $rowNum } {"<<endl;
cout<<"set rowNum $sel"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if { [$cmplistbox size]>0} {"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$cmplistbox getContextMenu] entryconfigure $i -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc showComponent {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable font"<<endl;
cout<<"variable cmpname"<<endl;
cout<<"variable cmptype"<<endl;
cout<<"variable cmpproperty"<<endl;
cout<<"variable subform"<<endl;
cout<<"variable png"<<endl;
cout<<"if {[winfo exists .cmpinfo]} {"<<endl;
cout<<"destroy .cmpinfo]"<<endl;
cout<<"}"<<endl;
cout<<"set selection [lsort -integer  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection 0]"<<endl;
cout<<"$table selection clear all"<<endl;
cout<<"$table selection set $sel,-1"<<endl;
cout<<"set cmpname $tabledata($sel,0)"<<endl;
cout<<"set cmptype $tabledata($sel,1)"<<endl;
cout<<"set cmpproperty $tabledata($sel,2)"<<endl;
cout<<"set subtitle \"[msgcat::mc \"Components \"]:$cmpname\""<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set subform [toplevel .cmpinfo]"<<endl;
cout<<"grab set $subform"<<endl;
cout<<"wm title .cmpinfo $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-250)/2}]"<<endl;
cout<<"wm geometry $subform  300x250+$x+$y"<<endl;
cout<<"wm transient $subform"<<endl;
cout<<"set btn_infolist [euidl::button $subform.btn_infolist \\"<<endl;
cout<<"-command [code ListWithEntities]   \\"<<endl;
cout<<"-imagefile $png(info) \\"<<endl;
cout<<"-width 250\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Show Component Detail \"] ]"<<endl;
cout<<"set labelName [label $subform.labelName \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentName \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryName [entry $subform.entryName\\"<<endl;
cout<<"-textvariable [scope cmpname] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelType [label $subform.labelType\\"<<endl;
cout<<"-text [msgcat::mc \"ComponentType \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryType [entry $subform.entryType \\"<<endl;
cout<<"-textvariable [scope cmptype] \\"<<endl;
cout<<"-width 10 -font $font(content)\\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-width 15 ]"<<endl;
cout<<"set labelProperty [label $subform.labelId \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentProperty \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryProperty [entry $subform.entryId \\"<<endl;
cout<<"-textvariable [scope cmpproperty] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set frameokcancel [label $subform.frameokcancel]"<<endl;
cout<<"set btnok [button $subform.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [namespace code ok_info_click]]"<<endl;
cout<<"set btnexit [button $subform.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .cmpinfo }]"<<endl;
cout<<"grid $labelName -row 0  -column 0  -sticky w"<<endl;
cout<<"grid $entryName -row 0  -column 1  -padx 6m -pady 2m"<<endl;
cout<<"grid $labelType -row 1  -column 0 -sticky w"<<endl;
cout<<"grid $entryType -row 1   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelProperty -row 2  -column 0 -sticky w"<<endl;
cout<<"grid $entryProperty -row 2  -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 4 -column 0  -columnspan 2 -pady 4m"<<endl;
cout<<"update idletasks"<<endl;
cout<<"}"<<endl;
cout<<"proc cmplistMove {direction} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cmplistvar"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"set len [$cmplistbox size]"<<endl;
cout<<"set sel [lindex [$cmplistbox curselection] 0]"<<endl;
cout<<"if {$direction==\"up\"} {"<<endl;
cout<<"set nextsel [expr $sel==0?$len-1:$sel-1]"<<endl;
cout<<"} else {"<<endl;
cout<<"set nextsel [expr $sel==$len-1?0:$sel+1]"<<endl;
cout<<"}"<<endl;
cout<<"set data [$cmplistbox get $sel]"<<endl;
cout<<"set nextdata [$cmplistbox get $nextsel]"<<endl;
cout<<"lset cmplistvar $nextsel $data"<<endl;
cout<<"lset cmplistvar $sel $nextdata"<<endl;
cout<<"$cmplistbox selection clear 0 end"<<endl;
cout<<"$cmplistbox selection set  $nextsel"<<endl;
cout<<"$cmplistbox activate  $nextsel"<<endl;
cout<<"}"<<endl;
cout<<"proc editAPDL {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"variable cmpcategory"<<endl;
cout<<"variable selname"<<endl;
cout<<"variable seltype"<<endl;
cout<<"variable selmethod"<<endl;
cout<<"variable selproperty"<<endl;
cout<<"variable apdlform"<<endl;
cout<<"variable ts"<<endl;
cout<<"if {[winfo exists .cmpapdl]} {"<<endl;
cout<<"destroy .cmpapdl]"<<endl;
cout<<"}"<<endl;
cout<<"set selection [lsort -integer  [$cmplistbox curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection 0]"<<endl;
cout<<"$cmplistbox selection clear 0 end"<<endl;
cout<<"$cmplistbox selection set $sel"<<endl;
cout<<"set item [$cmplistbox get $sel]"<<endl;
cout<<"set apdl [split $item ,]"<<endl;
cout<<"set categories {NSEL ESEL NSLA NSLE NSLL}"<<endl;
cout<<"set selcategory [string trim [lindex $apdl 0]]"<<endl;
cout<<"if {[lsearch $categories $selcategory]>=0} {"<<endl;
cout<<"puts [lsearch $categories $selcategory]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set selmethod [string trim [lindex $apdl 1]]"<<endl;
cout<<"set selname [string trim [lindex $apdl 2]]"<<endl;
cout<<"set seltype $cmpcategory([ans_getvalue \"COMP,$selname,TYPE\"])"<<endl;
cout<<"set index  \"_property_$selname\""<<endl;
cout<<"set flag [ans_getvalue parm,$index,type]"<<endl;
cout<<"if {$flag!=-1} {"<<endl;
cout<<"set selproperty [string trim [ans_getvalue parm,$index,value]]"<<endl;
cout<<"} else {"<<endl;
cout<<"set selproperty \"UnDefined\""<<endl;
cout<<"}"<<endl;
cout<<"set subtitle \"[msgcat::mc \"Components \"]:$selname\""<<endl;
cout<<"set sublabeltips  \"\""<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set apdlform [toplevel .cmpapdl]"<<endl;
cout<<"grab set $apdlform"<<endl;
cout<<"wm title .cmpapdl $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-250)/2}]"<<endl;
cout<<"wm geometry $apdlform  300x250+$x+$y"<<endl;
cout<<"wm transient $apdlform"<<endl;
cout<<"set labelTips       [label $apdlform.labelTips -text $sublabeltips -font $font(content)]"<<endl;
cout<<"set labelName [label $apdlform.labelName \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentName \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryName [entry $apdlform.entryName\\"<<endl;
cout<<"-textvariable [scope selname] \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelType [label $apdlform.labelType \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentType \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryType [entry $apdlform.entryType\\"<<endl;
cout<<"-textvariable [scope seltype] \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelSelMehod [label $apdlform.labelSelMehod\\"<<endl;
cout<<"-text [msgcat::mc \"Select Type \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set comboSelMehod [euidl::combobox $apdlform.comboSelMehod \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope selmethod]]"<<endl;
cout<<"set labelProperty [label $apdlform.labelId \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentProperty \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryProperty [entry $apdlform.entryId \\"<<endl;
cout<<"-textvariable [scope selproperty] \\"<<endl;
cout<<"-width 10 \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set frameokcancel [label $apdlform.frameokcancel]"<<endl;
cout<<"set btnok [button $apdlform.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [namespace code ok_apdl_click]]"<<endl;
cout<<"set btnexit [button $apdlform.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .cmpapdl }]"<<endl;
cout<<"grid $labelName -row 0  -column 0  -sticky w"<<endl;
cout<<"grid $entryName -row 0  -column 1  -padx 6m -pady 2m"<<endl;
cout<<"grid $labelType -row 1  -column 0  -sticky w"<<endl;
cout<<"grid $entryType -row 1  -column 1  -padx 6m -pady 2m"<<endl;
cout<<"grid $labelProperty -row 2  -column 0 -sticky w"<<endl;
cout<<"grid $entryProperty -row 2  -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelSelMehod -row 3  -column 0 -sticky w"<<endl;
cout<<"grid $comboSelMehod -row 3   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 4 -column 0  -columnspan 2 -pady 4m"<<endl;
cout<<"$comboSelMehod insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"Sel \"] S\\"<<endl;
cout<<"[msgcat::mc \"ReSel \"] R\\"<<endl;
cout<<"[msgcat::mc \"AlsoSel \"] A \\"<<endl;
cout<<"[msgcat::mc \"UnSel \"] U]"<<endl;
cout<<"update idletasks"<<endl;
cout<<"}"<<endl;
cout<<"proc delAPDL {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"set selection [lsort -integer -decreasing [$cmplistbox  curselection]]"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"$cmplistbox delete $sel"<<endl;
cout<<"}"<<endl;
cout<<"set thestate [expr [$cmplistbox size]==0?\"disabled\":\"normal\" ]"<<endl;
cout<<"for {set i 0} {$i < 3} {incr i} {"<<endl;
cout<<"[$cmplistbox getContextMenu] entryconfigure $i -state $thestate"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_info_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable subform"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable cmpname"<<endl;
cout<<"variable cmptype"<<endl;
cout<<"variable cmpproperty"<<endl;
cout<<"set name_reg [regexp -all -inline -- {^[A-Za-z][A-Za-z0-9_]+$}  $cmpname]"<<endl;
cout<<"if {$name_reg!=$cmpname || [string trim $name_reg]==\"\"} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message [msgcat::mc \"Wrong Component Name Format! \"] \\"<<endl;
cout<<"-icon error"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set sel [$table curselection]"<<endl;
cout<<"set cmpname [string toupper $cmpname]"<<endl;
cout<<"set previousname $tabledata($sel,0)"<<endl;
cout<<"set previousproperty $tabledata($sel,2)"<<endl;
cout<<"if {$previousname!=$cmpname} {"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_node,NODE} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_element,ELEMENT} err"<<endl;
cout<<"catch {ans_sendcommand )CM,_temp_area,AREA} err"<<endl;
cout<<"ans_sendcommand \"CMSEL,S,$previousname\""<<endl;
cout<<"ans_sendcommand \"CM,$cmpname,$cmptype\""<<endl;
cout<<"ans_sendcommand \"CMDELE,$previousname\""<<endl;
cout<<"catch {ans_sendcommand )CMSEL,S,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_area} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,R,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_element} err"<<endl;
cout<<"catch {ans_sendcommand )CMSEL,R,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )CMDEL,_temp_node} err"<<endl;
cout<<"catch {ans_sendcommand )/GO} err"<<endl;
cout<<"}"<<endl;
cout<<"if {$previousproperty!=$cmpproperty} {"<<endl;
cout<<"ans_sendcommand \"*set,_property_$cmpname,'$cmpproperty'\""<<endl;
cout<<"}"<<endl;
cout<<"set tabledata($sel,-1) {}"<<endl;
cout<<"set tabledata($sel,0)  $cmpname"<<endl;
cout<<"set tabledata($sel,1)  $cmptype"<<endl;
cout<<"set tabledata($sel,2)  $cmpproperty"<<endl;
cout<<"$table selection set $sel,-1"<<endl;
cout<<"destroy $subform"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_apdl_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable apdlform"<<endl;
cout<<"variable selname"<<endl;
cout<<"variable selmethod"<<endl;
cout<<"variable cmplistvar"<<endl;
cout<<"variable cmplistbox"<<endl;
cout<<"set sel [$cmplistbox curselection]"<<endl;
cout<<"lset cmplistvar $sel \"CMSEL,$selmethod,$selname\""<<endl;
cout<<"destroy $apdlform"<<endl;
cout<<"}"<<endl;
cout<<"proc delComponent {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"set selection [lsort -integer -decreasing  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"set name $tabledata($sel,0)"<<endl;
cout<<"set property $tabledata($sel,2)"<<endl;
cout<<"ans_sendcommand \"CMDEL,$name\""<<endl;
cout<<"ans_sendcommand \"*set,_property_$name\""<<endl;
cout<<"$table delete rows $sel"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"for {set i 0} {$i < 7} {incr i} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure $i -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc createComponent {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable font"<<endl;
cout<<"variable newname"<<endl;
cout<<"variable newtype"<<endl;
cout<<"variable newproperty"<<endl;
cout<<"variable newcmpform"<<endl;
cout<<"set newname {}"<<endl;
cout<<"set newproperty {}"<<endl;
cout<<"set newtype Nodes"<<endl;
cout<<"if {[winfo exists .cmpnew]} {"<<endl;
cout<<"destroy .cmpnew]"<<endl;
cout<<"}"<<endl;
cout<<"set subtitle [msgcat::mc \"Create Component \"]"<<endl;
cout<<"set thestate normal"<<endl;
cout<<"set newcmpform [toplevel .cmpnew]"<<endl;
cout<<"wm title .cmpnew $subtitle"<<endl;
cout<<"set x [expr {([winfo screenwidth .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-250)/2}]"<<endl;
cout<<"wm geometry $newcmpform  300x250+$x+$y"<<endl;
cout<<"set labelName [label $newcmpform.labelName \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentName \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryName [entry $newcmpform.entryName\\"<<endl;
cout<<"-textvariable [scope newname] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set labelType [label $newcmpform.labelType\\"<<endl;
cout<<"-text [msgcat::mc \"ComponentType \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set comboType [euidl::combobox $newcmpform.comboType \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-variable [scope newtype]]"<<endl;
cout<<"set labelProperty [label $newcmpform.labelId \\"<<endl;
cout<<"-text [msgcat::mc \"ComponentProperty \"] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8]"<<endl;
cout<<"set entryProperty [entry $newcmpform.entryId \\"<<endl;
cout<<"-textvariable [scope newproperty] \\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set frameokcancel [label $newcmpform.frameokcancel]"<<endl;
cout<<"set btnok [button $newcmpform.btnok \\"<<endl;
cout<<"-text [msgcat::mc \"Ok \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [code ok_new_cmp_click]]"<<endl;
cout<<"set btnexit [button $newcmpform.btnexit\\"<<endl;
cout<<"-text [msgcat::mc \"Exit \"]\\"<<endl;
cout<<"-font $font(content) \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command { destroy .cmpnew }]"<<endl;
cout<<"grid $labelName -row 1  -column 0  -sticky w"<<endl;
cout<<"grid $entryName -row 1  -column 1  -padx 6m -pady 2m"<<endl;
cout<<"grid $labelType -row 2  -column 0 -sticky w"<<endl;
cout<<"grid $comboType -row 2   -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"grid $labelProperty -row 3  -column 0 -sticky w"<<endl;
cout<<"grid $entryProperty -row 3  -column 1 -padx 6m  -pady 2m"<<endl;
cout<<"pack $btnok $btnexit -in $frameokcancel -side left -padx 5m"<<endl;
cout<<"grid $frameokcancel  -row 4 -column 0  -columnspan 2 -pady 4m"<<endl;
cout<<"$comboType insert list end [list \\"<<endl;
cout<<"\"Nodes\" Nodes\\"<<endl;
cout<<"\"Elements\" Elements\\"<<endl;
cout<<"\"Areas\" Areas \\"<<endl;
cout<<"\"Volumes\" Volumes]"<<endl;
cout<<"update idletasks"<<endl;
cout<<"}"<<endl;
cout<<"proc ok_new_cmp_click {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable newname"<<endl;
cout<<"variable newtype"<<endl;
cout<<"variable newproperty"<<endl;
cout<<"variable newcmpform"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable table"<<endl;
cout<<"variable cmpne"<<endl;
cout<<"set name_reg [regexp -all -inline -- {^[A-Za-z][A-Za-z0-9_]+$}  $newname]"<<endl;
cout<<"if {$name_reg!=$newname ||[string trim $newname]==\"\"} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message [msgcat::mc \"Wrong Component Name Format! \"] \\"<<endl;
cout<<"-icon error"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set newname [string toupper $newname]"<<endl;
cout<<"set rownum [$table index end row]"<<endl;
cout<<"for {set i 0} {$i <= $rownum} {incr i} {"<<endl;
cout<<"if {$newname==$tabledata($i,0)} {"<<endl;
cout<<"set answer [tk_messageBox \\"<<endl;
cout<<"-title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message [msgcat::mc \"Really Cover The Component? \"] \\"<<endl;
cout<<"-icon question \\"<<endl;
cout<<"-type yesno ]"<<endl;
cout<<"if {$answer==\"yes\"} {"<<endl;
cout<<"ans_sendcommand \"CM,$newname,$newtype\""<<endl;
cout<<"ans_sendcommand \"*set,_property_$newname,'$newproperty'\""<<endl;
cout<<"set tabledata([expr $rownum+1],-1) {}"<<endl;
cout<<"$table insert row $i"<<endl;
cout<<"$table delete rows $i"<<endl;
cout<<"set tabledata($i,-1) {}"<<endl;
cout<<"set tabledata($i,0)  $newname"<<endl;
cout<<"set tabledata($i,1)  $newtype"<<endl;
cout<<"set tabledata($i,2)  $newproperty"<<endl;
cout<<"$table  selection set  $i,-1"<<endl;
cout<<"destroy  $newcmpform"<<endl;
cout<<"}"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"ans_sendcommand \"CM,$newname,$newtype\""<<endl;
cout<<"ans_sendcommand \"*set,_property_$newname,'$newproperty'\""<<endl;
cout<<"incr rownum"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($rownum,-1) {}"<<endl;
cout<<"set tabledata($rownum,0)  $newname"<<endl;
cout<<"set tabledata($rownum,1)  $newtype"<<endl;
cout<<"set tabledata($rownum,2)  $newproperty"<<endl;
cout<<"$table  selection set  $rownum,-1"<<endl;
cout<<"for {set i 0} {$i < 7} {incr i} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure $i -state normal"<<endl;
cout<<"}"<<endl;
cout<<"destroy  $newcmpform"<<endl;
cout<<"}"<<endl;
cout<<"proc execAPDL {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable cmplistvar"<<endl;
cout<<"foreach var $cmplistvar {"<<endl;
cout<<"ans_sendcommand $var"<<endl;
cout<<"}"<<endl;
cout<<"ans_sendcommand \"SAVE\""<<endl;
cout<<"ans_sendcommand \"/REPLOT\""<<endl;
cout<<"}"<<endl;
cout<<"proc Display {} {"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"::apdl::storeUserSelection ALL"<<endl;
cout<<"set selection [$table curselection]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"::apdl::restoreUserSelection"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set first 1"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"if { $first } {"<<endl;
cout<<"set first 0"<<endl;
cout<<"catch {ans_sendcommand \\"<<endl;
cout<<"CMSEL,S,$tabledata($sel,0)}"<<endl;
cout<<"} else {"<<endl;
cout<<"catch {ans_sendcommand \\"<<endl;
cout<<"CMSEL,A,$tabledata($sel,0)}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand CMPLOT}"<<endl;
cout<<"::apdl::restoreUserSelection"<<endl;
cout<<"}"<<endl;
cout<<"proc PlotInContext {} {"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"global env"<<endl;
cout<<"set selection [$table curselection]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"::apdl::noprint 1"<<endl;
cout<<"::apdl::storeUserSelection ALL"<<endl;
cout<<"set sledge(3) [ans_getvalue COMMON,,D3COM,,INT,16]"<<endl;
cout<<"set sledge(4) [ans_getvalue COMMON,,D3COM,,REAL,173]"<<endl;
cout<<"set slnum [ans_getvalue COMMON,,D3COM,,INT,30]"<<endl;
cout<<"set pnum(type) [ans_getvalue COMMON,,D3COM,,INT,99]"<<endl;
cout<<"set pnum(real) [ans_getvalue COMMON,,D3COM,,INT,100]"<<endl;
cout<<"set psymb(esys) [ans_getvalue COMMON,,D3COM,,INT,143]"<<endl;
cout<<"if {[file exists [file join ~ cmpplot.mac]]} {"<<endl;
cout<<"file delete -force [file join ~ cmpplot.mac]"<<endl;
cout<<"} elseif {[file exists [file join [pwd] cmpplot.mac]]} {"<<endl;
cout<<"file delete -force [file join [pwd] cmpplot.mac]"<<endl;
cout<<"}"<<endl;
cout<<"ans_sendcommand *CREATE,cmpplot,mac"<<endl;
cout<<"ans_sendcommand /COM,"<<endl;
cout<<"ans_sendcommand /COM,PLOT COMPONENT(S)"<<endl;
cout<<"ans_sendcommand ~eui,'::apdl::noprint 1'"<<endl;
cout<<"ans_sendcommand ~eui,'::apdl::nooutput 1'"<<endl;
cout<<"catch {ans_sendcommand /GSAVE,COMPONENT,GSAV,'$env(EUIDL_DEFAULTS)',TRLC} err"<<endl;
cout<<"ans_sendcommand /TRLCY,ON"<<endl;
cout<<"ans_sendcommand /EDGE,,1,45"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"::apdl::restoreUserSelection"<<endl;
cout<<"::apdl::noprint 0"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"set sel [lindex $selection 0]"<<endl;
cout<<"set name $tabledata($sel,0)"<<endl;
cout<<"set type $tabledata($sel,1)"<<endl;
cout<<"switch -- $type {"<<endl;
cout<<"Elements {"<<endl;
cout<<"catch {ans_sendcommand ESEL,ALL}"<<endl;
cout<<"}"<<endl;
cout<<"Areas {"<<endl;
cout<<"catch {ans_sendcommand ASEL,ALL}"<<endl;
cout<<"}"<<endl;
cout<<"Volumes {"<<endl;
cout<<"catch {ans_sendcommand VSEL,ALL}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand CM,ALL$type,$type}"<<endl;
cout<<"catch {ans_sendcommand CMSEL,S,ALL$type}"<<endl;
cout<<"catch {ans_sendcommand /TRLCY,CM,1.0,ALL$type}"<<endl;
cout<<"set selection [$table curselection]"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"ans_sendcommand CMSEL,A,$tabledata($sel,0)"<<endl;
cout<<"ans_sendcommand \\"<<endl;
cout<<"/TRLCY,CM,0.0,$tabledata($sel,0)"<<endl;
cout<<"}"<<endl;
cout<<"ans_sendcommand CMPLOT"<<endl;
cout<<"ans_sendcommand CMDEL,ALL$type"<<endl;
cout<<"ans_sendcommand /TRLCY,DEFA"<<endl;
cout<<"catch {ans_sendcommand /GRESUME,COMPONENT,GSAV,'$env(EUIDL_DEFAULTS)'} err"<<endl;
cout<<"catch {ans_sendcommand /EDGE,,$sledge(3),$sledge(4)} err"<<endl;
cout<<"catch {ans_sendcommand /PSYMB,ESYS,$psymb(esys)} err"<<endl;
cout<<"catch {ans_sendcommand /NUM,$slnum} err"<<endl;
cout<<"catch {ans_sendcommand /PNUM,TYPE,$pnum(type)} err"<<endl;
cout<<"catch {ans_sendcommand /PNUM,REAL,$pnum(type)} err"<<endl;
cout<<"ans_sendcommand /mrep,cmpplot"<<endl;
cout<<"ans_sendcommand ~eui,'::apdl::nooutput 0'"<<endl;
cout<<"ans_sendcommand ~eui,'::apdl::noprint 0'"<<endl;
cout<<"ans_sendcommand *END"<<endl;
cout<<"catch {ans_sendcommand cmpplot}"<<endl;
cout<<"::apdl::restoreUserSelection"<<endl;
cout<<"::apdl::noprint 0"<<endl;
cout<<"}"<<endl;
cout<<"proc ListWithEntities {} {"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"::apdl::storeUserSelection ALL"<<endl;
cout<<"set selection [lsort -integer  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"::apdl::restoreUserSelection"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand CMSEL,NONE}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"catch {ans_sendcommand \\"<<endl;
cout<<"CMSEL,A,$tabledata($sel,0)}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand CMLIST,,1}"<<endl;
cout<<"::apdl::restoreUserSelection"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::Customized::Manager::Component::main"<<endl;

}
void CoutScript_SeismicTimeHistory()
{
cout<<"package  require msgcat"<<endl;
cout<<"namespace eval ::euidl::Seismic::TimeHistory {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable png"<<endl;
cout<<"variable font"<<endl;
cout<<"variable plotshow"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale seismic]"<<endl;
cout<<"set png(check) [file join $path images check24x24.png]"<<endl;
cout<<"set png(import) [file join $path images import24x24.png]"<<endl;
cout<<"set png(chart) [file join $path images chart24x24.png]"<<endl;
cout<<"set font(cn)   {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)   {Consolas 12 normal}"<<endl;
cout<<"set plotshow    [file join $path \"AnsysPlugin.exe\"]"<<endl;
cout<<"if [winfo exists .timehistory] {"<<endl;
cout<<"wm deiconify .timehistory"<<endl;
cout<<"raise .timehistory"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel  .timehistory]"<<endl;
cout<<"wm title $parent [msgcat::mc \"TimeHistory Analysis \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-600)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-360)/2}]"<<endl;
cout<<"wm geometry .timehistory 600x360+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .exphelp]} {"<<endl;
cout<<"destroy .exphelp}"<<endl;
cout<<"destroy .timehistory"<<endl;
cout<<"}"<<endl;
cout<<"set tabset [::euidl::tabnotebook $parent.tabset]"<<endl;
cout<<"$tabset configure -equaltabs no"<<endl;
cout<<"$tabset configure -raiseselect true"<<endl;
cout<<"$tabset configure -tabpos n"<<endl;
cout<<"$tabset configure -height 3.5i"<<endl;
cout<<"$tabset configure -width 6.0i"<<endl;
cout<<"grid $tabset -row 1 -column 0 -sticky nsew"<<endl;
cout<<"addTabTimeHistory"<<endl;
cout<<"::euidl::Seismic::TimeHistory::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc addTabTimeHistory {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable png"<<endl;
cout<<"variable font"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable parentglo"<<endl;
cout<<"variable datafile"<<endl;
cout<<"variable datatype"<<endl;
cout<<"variable unittype"<<endl;
cout<<"variable dataspace"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable gxyz"<<endl;
cout<<"variable label_dataSpace"<<endl;
cout<<"variable entry_dataSpace"<<endl;
cout<<"variable label_dataGravity"<<endl;
cout<<"variable entry_dataGravity"<<endl;
cout<<"set page [$tabset add]"<<endl;
cout<<"$tabset pageconfigure 0  \\"<<endl;
cout<<"-label [msgcat::mc \"TimeHistory Analysis \"] \\"<<endl;
cout<<"-font $font(cn)"<<endl;
cout<<"set tab0 [frame $page.hold]"<<endl;
cout<<"set label_dataType [label $parent.label_dataType \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Input Data Type \"] ]"<<endl;
cout<<"set combo_dataType [euidl::combobox $parent.combo_dataType \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [code changeDataTpye]\\"<<endl;
cout<<"-variable [scope datatype]]"<<endl;
cout<<"set label_unitType [label $parent.label_unitType \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Data Unit Type \"] ]"<<endl;
cout<<"set combo_unitType [euidl::combobox $parent.combo_unitType \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [code changeUnitTpye]\\"<<endl;
cout<<"-variable [scope unittype]]"<<endl;
cout<<"set label_dataSpace [label $parent.label_dataSpace \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-text [::msgcat::mc \"Input Data Space \"] ]"<<endl;
cout<<"set entry_dataSpace [euidl::entry  $parent.entry_dataSpace \\"<<endl;
cout<<"-variable [scope dataspace] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-state disabled\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata real]"<<endl;
cout<<"set label_dataGravity [label $parent.label_dataGravity \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text \"[::msgcat::mc \"Gravity \"]G:\" ]"<<endl;
cout<<"set entry_dataGravity [euidl::entry  $parent.entry_dataGravity \\"<<endl;
cout<<"-variable [scope gravity] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata real]"<<endl;
cout<<"set label_xyzGravity [label $parent.label_xyzGravity \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Load Direction \"] ]"<<endl;
cout<<"set combo_xyzGravity [euidl::combobox $parent.combo_xyzGravity \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope gxyz]]"<<endl;
cout<<"set label_importData [euidl::label $parent.label_importData \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Please Select The TimeHistory Data File: \"]]"<<endl;
cout<<"set btn_importData [euidl::button $parent.btn_importData \\"<<endl;
cout<<"-command [code dataImport]   \\"<<endl;
cout<<"-imagefile $png(import) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Import TimeHistory Data \"] ]"<<endl;
cout<<"set entry_importData [entry  $parent.entry_importData \\"<<endl;
cout<<"-width 10  \\"<<endl;
cout<<"-textvariable [scope datafile] \\"<<endl;
cout<<"-font $font(cn)]"<<endl;
cout<<"set btn_updateTimeChart [euidl::button $parent.btn_updateTimeChart \\"<<endl;
cout<<"-command [code updateTimeHistoryChart]   \\"<<endl;
cout<<"-imagefile $png(chart) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"TimeHistory Input Data \"] ]"<<endl;
cout<<"set btn_solveTime [euidl::button $parent.btn_solveTime \\"<<endl;
cout<<"-command [code timeSolve]   \\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Solve TimeHistory \"] ]"<<endl;
cout<<"grid $label_dataType  -in $tab0 -row 0 -column 0  -sticky w"<<endl;
cout<<"grid $combo_dataType    -in $tab0 -row 0 -column 1 -sticky w"<<endl;
cout<<"grid $label_dataSpace  -in $tab0 -row 0 -column 2  -sticky w"<<endl;
cout<<"grid $entry_dataSpace   -in $tab0 -row 0 -column 3 -sticky w"<<endl;
cout<<"grid $label_unitType -in $tab0 -row 1 -column 0  -pady 5m -sticky w"<<endl;
cout<<"grid $combo_unitType   -in $tab0 -row 1 -column 1 -sticky w"<<endl;
cout<<"grid $label_dataGravity  -in $tab0 -row 1 -column 2 -pady 5m -sticky w"<<endl;
cout<<"grid $entry_dataGravity   -in $tab0 -row 1 -column 3 -sticky w"<<endl;
cout<<"grid $label_xyzGravity  -in $tab0 -row 2 -column 0  -sticky w -sticky w"<<endl;
cout<<"grid $combo_xyzGravity   -in $tab0 -row 2 -column 1 -sticky w"<<endl;
cout<<"grid $label_importData  -in $tab0 -row 3 -column 0 -columnspan 2  -sticky w"<<endl;
cout<<"grid $btn_importData    -in $tab0 -row 3 -column 2"<<endl;
cout<<"grid $btn_updateTimeChart  -in $tab0 -row 3 -column 3"<<endl;
cout<<"grid $entry_importData  -in $tab0 -row 4 -column 0  -columnspan 4 -sticky nsew"<<endl;
cout<<"grid $btn_solveTime  -in $tab0 -row 5 -column 0  -columnspan 4 -sticky nsew -pady 5m"<<endl;
cout<<"for {set i 0} {$i < 4} {incr i} {"<<endl;
cout<<"grid columnconfigure $tab0 $i -weight 1"<<endl;
cout<<"}"<<endl;
cout<<"pack $tab0 -side top -anchor nw -fill both -expand 1 -padx 5 -pady 5"<<endl;
cout<<"$combo_dataType insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"Time-Acceleration \"] \"T-G\" \\"<<endl;
cout<<"[msgcat::mc \"Space-Acceleration \" ] \"S-G\"]"<<endl;
cout<<"$combo_unitType insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"g/s2 \"]  \"GS2\" \\"<<endl;
cout<<"[msgcat::mc \"m/s2 \" ] \"MS2\"]"<<endl;
cout<<"$combo_xyzGravity insert list end [list X  X Y Y Z Z]"<<endl;
cout<<"}"<<endl;
cout<<"proc changeDataTpye {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable label_dataSpace"<<endl;
cout<<"variable entry_dataSpace"<<endl;
cout<<"variable datatype"<<endl;
cout<<"if {$datatype==\"S-G\"} {"<<endl;
cout<<"$label_dataSpace  configure -state normal"<<endl;
cout<<"$entry_dataSpace   configure -state normal"<<endl;
cout<<"} else {"<<endl;
cout<<"$label_dataSpace  configure -state disabled"<<endl;
cout<<"$entry_dataSpace   configure -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc changeUnitTpye {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable label_dataGravity"<<endl;
cout<<"variable entry_dataGravity"<<endl;
cout<<"variable unittype"<<endl;
cout<<"variable gravity"<<endl;
cout<<"if {$unittype==\"GS2\"} {"<<endl;
cout<<"$label_dataGravity  configure -state normal"<<endl;
cout<<"$entry_dataGravity   configure -state normal"<<endl;
cout<<"set gravity 9.8"<<endl;
cout<<"} else {"<<endl;
cout<<"$label_dataGravity  configure -state disabled"<<endl;
cout<<"$entry_dataGravity   configure -state disabled"<<endl;
cout<<"set gravity 1"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc tabSwitch {arg} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable tabset"<<endl;
cout<<"set index [$tabset view]"<<endl;
cout<<"switch -exact -- $arg {"<<endl;
cout<<"Back {"<<endl;
cout<<"incr index -1"<<endl;
cout<<"$tabset view $index"<<endl;
cout<<"}"<<endl;
cout<<"Next {"<<endl;
cout<<"incr index"<<endl;
cout<<"$tabset view $index"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"changeButtonState"<<endl;
cout<<"}"<<endl;
cout<<"proc changeButtonState {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable btnback"<<endl;
cout<<"variable btnnext"<<endl;
cout<<"set pageindex [$tabset view]"<<endl;
cout<<"set pageend [$tabset index end]"<<endl;
cout<<"$btnnext configure -state [expr $pageindex==$pageend?\"disabled\":\"normal\"]"<<endl;
cout<<"$btnback configure -state [expr $pageindex==0?\"disabled\":\"normal\"]"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable gxyz"<<endl;
cout<<"variable datafile"<<endl;
cout<<"variable datatype"<<endl;
cout<<"variable dataspace"<<endl;
cout<<"variable unittype"<<endl;
cout<<"set datafile {}"<<endl;
cout<<"set datatype \"T-G\""<<endl;
cout<<"set gravity 9.8"<<endl;
cout<<"set dataspace 0.05"<<endl;
cout<<"set unittype \"GS2\""<<endl;
cout<<"set gxyz Z"<<endl;
cout<<"$tabset view 0"<<endl;
cout<<"}"<<endl;
cout<<"proc dataImport {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable datafile"<<endl;
cout<<"variable datatype"<<endl;
cout<<"variable dataspace"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable Ts"<<endl;
cout<<"variable Gs"<<endl;
cout<<"variable num"<<endl;
cout<<"set filename [tk_getOpenFile \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-initialfile *.txt \\"<<endl;
cout<<"-filetypes {{Txt .txt}}]"<<endl;
cout<<"if {![file exists $filename] || [string trim $filename]==\"\"} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set datafile $filename"<<endl;
cout<<"set fl [open $datafile r]"<<endl;
cout<<"set data [read $fl]"<<endl;
cout<<"close $fl"<<endl;
cout<<"set Ts {}"<<endl;
cout<<"set Gs {}"<<endl;
cout<<"set num 0"<<endl;
cout<<"if {$datatype==\"S-G\"} {"<<endl;
cout<<"foreach g $data {"<<endl;
cout<<"lappend Ts [expr $num*$dataspace]"<<endl;
cout<<"lappend Gs $g"<<endl;
cout<<"incr num"<<endl;
cout<<"}"<<endl;
cout<<"} else {"<<endl;
cout<<"foreach {t g} $data {"<<endl;
cout<<"lappend Ts $t"<<endl;
cout<<"lappend Gs $g"<<endl;
cout<<"incr num"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc updateTimeHistoryChart {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable Gs"<<endl;
cout<<"variable Ts"<<endl;
cout<<"variable plotshow"<<endl;
cout<<"variable datafile"<<endl;
cout<<"variable num"<<endl;
cout<<"if {![file exists $datafile] || $num==0 } {"<<endl;
cout<<"tk_messageBox  \\"<<endl;
cout<<"-parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Can Not Get TimeHistory Data! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set title  [::msgcat::mc \"TimeHistory Input Data \"]"<<endl;
cout<<"set xlabel [::msgcat::mc \"Time(s) \"]"<<endl;
cout<<"set ylabel \"[::msgcat::mc \"Acceleration \"]g/s^2\""<<endl;
cout<<"set geometry    [wm geometry $parent]"<<endl;
cout<<"set data  \"\\\"<root  title='$title' geometry='$geometry' xlabel='$xlabel' ylabel='$ylabel'>"<<endl;
cout<<"<graphs>"<<endl;
cout<<"<graph id='1'>"<<endl;
cout<<"<xlist>$Ts</xlist>"<<endl;
cout<<"<ylist>$Gs</ylist>"<<endl;
cout<<"<style legend='$title' line='black blue 0.2' point='blue red 1' />"<<endl;
cout<<"</graph>"<<endl;
cout<<"</graphs>"<<endl;
cout<<"</root>\\\"\""<<endl;
cout<<"exec $plotshow $data"<<endl;
cout<<"raise $parent"<<endl;
cout<<"}"<<endl;
cout<<"proc timeSolve {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable datafile"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable gxyz"<<endl;
cout<<"variable Ts"<<endl;
cout<<"variable Gs"<<endl;
cout<<"variable num"<<endl;
cout<<"if {![file exists $datafile] || $num==0} {"<<endl;
cout<<"tk_messageBox  \\"<<endl;
cout<<"-parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Can Not Get TimeHistory Data! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[checkEnvironment]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"/UIS,MSGPOP,3\"} err"<<endl;
cout<<"for {set i 0} {$i < $num} {incr i} {"<<endl;
cout<<"set t    [lindex $Ts $i]"<<endl;
cout<<"set g    [lindex $Gs $i]"<<endl;
cout<<"switch -exact -- $gxyz {"<<endl;
cout<<"X { catch {ans_sendcommand \"ACEL,$g*$gravity,0,0\"} err}"<<endl;
cout<<"Y { catch {ans_sendcommand \"ACEL,0,$g*$gravity,0\"} err}"<<endl;
cout<<"Z { catch {ans_sendcommand \"ACEL,0,0,$g*$gravity\"} err}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"TIME,$t\"} err"<<endl;
cout<<"catch {ans_sendcommand \"OUTERS,ALL,ALL\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SOLVE\"} err"<<endl;
cout<<"}"<<endl;
cout<<"puts \"#########TimeHistory Analysis APDL Start ############\""<<endl;
cout<<"puts \"*DO,i,1,$num,1\""<<endl;
cout<<"switch -exact -- $gxyz {"<<endl;
cout<<"X {puts \"ACEL,g,0,0\"}"<<endl;
cout<<"Y {puts \"ACEL,0,g,0\"}"<<endl;
cout<<"Z {puts \"ACEL,0,0,g\"}"<<endl;
cout<<"}"<<endl;
cout<<"puts  \"TIME,time\""<<endl;
cout<<"puts  \"*ENDDO\""<<endl;
cout<<"puts  \"OUTERS,ALL,ALL\""<<endl;
cout<<"puts  \"SOLVE\""<<endl;
cout<<"puts \"#########TimeHistory Analysis APDL Finish ############\""<<endl;
cout<<"catch {ans_sendcommand \"/UIS,MSGPOP,DEFA\"} err"<<endl;
cout<<"if [winfo exists .timehistory] {"<<endl;
cout<<"raise .timehistory"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc checkEnvironment {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=21} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-message \"[msgcat::mc \"This Operation Need Environment: \"] \\n [msgcat::mc \"SOLU\"]\" \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return 1"<<endl;
cout<<"}"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::Seismic::TimeHistory::main"<<endl;

}
void CoutScript_SeismicSpectrum()
{
cout<<"package  require msgcat"<<endl;
cout<<"namespace eval ::euidl::Seismic::SpectrumAnalysis {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable btnback"<<endl;
cout<<"variable btnnext"<<endl;
cout<<"variable png"<<endl;
cout<<"variable font"<<endl;
cout<<"variable plotshow"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale seismic]"<<endl;
cout<<"set png(check) [file join $path images check24x24.png]"<<endl;
cout<<"set png(import) [file join $path images import24x24.png]"<<endl;
cout<<"set png(save) [file join $path images save24x24.png]"<<endl;
cout<<"set png(chart) [file join $path images chart24x24.png]"<<endl;
cout<<"set png(update) [file join $path images update24x24.png]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"set plotshow    [file join $path \"AnsysPlugin.exe\"]"<<endl;
cout<<"if [winfo exists .spectrum] {"<<endl;
cout<<"wm deiconify .spectrum"<<endl;
cout<<"raise .spectrum"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel  .spectrum]"<<endl;
cout<<"wm title $parent [msgcat::mc \"Spectrum Analysis \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-650)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-500)/2}]"<<endl;
cout<<"wm geometry .spectrum 650x500+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"if {[winfo exists .exphelp]} {"<<endl;
cout<<"destroy .exphelp}"<<endl;
cout<<"destroy .spectrum"<<endl;
cout<<"}"<<endl;
cout<<"set footer [frame $parent.footer]"<<endl;
cout<<"set btncancel [button $parent.cancel \\"<<endl;
cout<<"-text [::msgcat::mc \"Exit \"] \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-command {destroy .spectrum}]"<<endl;
cout<<"set btnback [button $parent.previous \\"<<endl;
cout<<"-text [::msgcat::mc \"Back \"] \\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [list [code tabSwitch] \"Back\"]]"<<endl;
cout<<"set btnnext [button $parent.next \\"<<endl;
cout<<"-text [::msgcat::mc \"Next \"] \\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-width 8\\"<<endl;
cout<<"-command [list [code tabSwitch] \"Next\"]]"<<endl;
cout<<"set tabset [::euidl::tabnotebook $parent.tabset]"<<endl;
cout<<"$tabset configure -equaltabs no"<<endl;
cout<<"$tabset configure -raiseselect true"<<endl;
cout<<"$tabset configure -tabpos n"<<endl;
cout<<"$tabset configure -height 4.5i"<<endl;
cout<<"$tabset configure -width 6i"<<endl;
cout<<"grid $tabset -row 1 -column 0 -sticky nsew"<<endl;
cout<<"pack $btnback $btnnext  $btncancel -in $footer -side left -padx 15m"<<endl;
cout<<"grid $footer -row 2 -column 0 -pady 10"<<endl;
cout<<"addTabModal"<<endl;
cout<<"addTabSpectrum"<<endl;
cout<<"::euidl::Seismic::SpectrumAnalysis::initialize"<<endl;
cout<<"}"<<endl;
cout<<"proc addTabModal {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable method"<<endl;
cout<<"variable number"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"set page [$tabset add]"<<endl;
cout<<"$tabset pageconfigure 0  \\"<<endl;
cout<<"-label [msgcat::mc \"Modal Analysis \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [code changeButtonState]"<<endl;
cout<<"set tab1 [frame $page.hold]"<<endl;
cout<<"set label_modeMethod  [label $parent.label_modemethod \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Mode Method \"] ]"<<endl;
cout<<"set combo_modeMethod [euidl::combobox $parent.combo_modemethod \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope method]]"<<endl;
cout<<"set label_modeNumber [euidl::label $parent.label_modeNumber \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Mode Number \"]]"<<endl;
cout<<"set entry_modeNumber [euidl::entry  $parent.entry_modeNumber \\"<<endl;
cout<<"-width 10  \\"<<endl;
cout<<"-variable [scope number] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata integer]"<<endl;
cout<<"set btn_solveModal [euidl::button $parent.btn_solveModal \\"<<endl;
cout<<"-command [code modalSolve]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 50\\"<<endl;
cout<<"-imagefile $png(check) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Solve Modal \"] ]"<<endl;
cout<<"set btn_readModal [euidl::button $parent.btn_readModal \\"<<endl;
cout<<"-command [code modalImport]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 50\\"<<endl;
cout<<"-imagefile $png(import) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Import Modal \"] ]"<<endl;
cout<<"set btn_saveModal [euidl::button $parent.btn_saveModal \\"<<endl;
cout<<"-command [code modalExport]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 50\\"<<endl;
cout<<"-imagefile $png(save) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Export Modal \"] ]"<<endl;
cout<<"set modalframe [euidl::labeledframe $parent.modalframe \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Defined Frequencies \"]]"<<endl;
cout<<"grid $modalframe -in $tab1 -row 0 -column 2 -rowspan 3 -columnspan 2 -sticky news"<<endl;
cout<<"set modalframe [$modalframe childsite]"<<endl;
cout<<"set table [euidl::colhead $modalframe.table \\"<<endl;
cout<<"-variable [scope tabledata] \\"<<endl;
cout<<"-selectbackground #09f\\"<<endl;
cout<<"-borderwidth 0 \\"<<endl;
cout<<"-width 280\\"<<endl;
cout<<"-height 180\\"<<endl;
cout<<"-hscrollmode none \\"<<endl;
cout<<"-contextmenu 1 \\"<<endl;
cout<<"]"<<endl;
cout<<"$table insert cols {ID} end"<<endl;
cout<<"$table insert cols {Frequency} end"<<endl;
cout<<"$table tag configure {ID} -sortmethod integer"<<endl;
cout<<"$table tag configure {Frequency} -sortmethod dictionary"<<endl;
cout<<"$table tag configure title -anchor center"<<endl;
cout<<"$table tag configure title -font $font(cn)"<<endl;
cout<<"$table tag configure row -font $font(cn)"<<endl;
cout<<"$table tag configure row -anchor center"<<endl;
cout<<"[$table component table] width [$table tag coltag {ID}] 15"<<endl;
cout<<"[$table component table] width [$table tag coltag {Frequency}] 35"<<endl;
cout<<"[$table component table] configure -rowheight 2"<<endl;
cout<<"pack $table -fill both -expand 1"<<endl;
cout<<"pack $table -fill both -expand 1"<<endl;
cout<<"$table deleteContextMenu 0 end"<<endl;
cout<<"set cmindex 0"<<endl;
cout<<"$table insertContextMenu $cmindex command \\"<<endl;
cout<<"-label [msgcat::mc \"Delete Frequency \"] \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-underline 0 \\"<<endl;
cout<<"-command [code deleteFrequency]"<<endl;
cout<<"grid $label_modeMethod -in $tab1 -row 0 -column 0  -sticky w"<<endl;
cout<<"grid $combo_modeMethod -in $tab1 -row 0 -column 1  -sticky w -padx 2m"<<endl;
cout<<"grid $label_modeNumber -in $tab1 -row 1 -column 0  -sticky w"<<endl;
cout<<"grid $entry_modeNumber -in $tab1 -row 1 -column 1  -sticky w -padx 2m"<<endl;
cout<<"grid $btn_solveModal -in $tab1 -row 2 -column 0  -columnspan 2"<<endl;
cout<<"grid $btn_readModal  -in $tab1 -row 3 -column 2"<<endl;
cout<<"grid $btn_saveModal  -in $tab1 -row 3 -column 3"<<endl;
cout<<"for {set i 0} {$i < 4} {incr i} {"<<endl;
cout<<"grid rowconfigure    $tab1 $i  -weight 1"<<endl;
cout<<"grid columnconfigure $tab1 $i -weight 1"<<endl;
cout<<"}"<<endl;
cout<<"pack $tab1 -side top -anchor nw -fill both -expand 1 -padx 5 -pady 5"<<endl;
cout<<"$combo_modeMethod  insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"Block Lanczos \"] \"LANB\" \\"<<endl;
cout<<"[msgcat::mc \"Subspace \" ] \"SUBSP\"]"<<endl;
cout<<"}"<<endl;
cout<<"proc modalExport {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable projectname"<<endl;
cout<<"set rowsnum [$table index end row]"<<endl;
cout<<"if {$rowsnum==-1} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Solve Modal First! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set modalfile [tk_getSaveFile -initialfile [format \"%s_modal.txt\" $projectname] -filetypes {{txt .txt}}]"<<endl;
cout<<"if {[string trim $modalfile]==\"\"} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set fl [open $modalfile w]"<<endl;
cout<<"for {set i 0} {$i <=$rowsnum} {incr i} {"<<endl;
cout<<"set num  $tabledata($i,0)"<<endl;
cout<<"set fre  $tabledata($i,1)"<<endl;
cout<<"puts $fl \"$num $fre\""<<endl;
cout<<"}"<<endl;
cout<<"catch {close $fl} err"<<endl;
cout<<"set msg [tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon info \\"<<endl;
cout<<"-title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [msgcat::mc \" Save successful! \"]]"<<endl;
cout<<"}"<<endl;
cout<<"proc importMcomResustFile {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable mcomfile"<<endl;
cout<<"variable projectname"<<endl;
cout<<"set selfile [tk_getOpenFile -initialfile [format \"%s.mcom\" $projectname] -filetypes {{mcom .mcom}}]"<<endl;
cout<<"if {[file exists $selfile]} {"<<endl;
cout<<"set mcomfile [string trim $selfile]"<<endl;
cout<<"readMcomResultFile"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc addTabSpectrum {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable font"<<endl;
cout<<"variable png"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable buildtype"<<endl;
cout<<"variable intensity"<<endl;
cout<<"variable bmax"<<endl;
cout<<"variable tg"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable direction"<<endl;
cout<<"variable site"<<endl;
cout<<"variable basesite"<<endl;
cout<<"variable mcomfile"<<endl;
cout<<"set page [$tabset add]"<<endl;
cout<<"$tabset pageconfigure 1 \\"<<endl;
cout<<"-label [msgcat::mc \"Spectrum Analysis \"]\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-command [code changeButtonState]"<<endl;
cout<<"set tab1 [frame $page.hold]"<<endl;
cout<<"set label_buildtype  [label $parent.label_buildtype \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Build Type \"] ]"<<endl;
cout<<"set combo_buildtype [euidl::combobox $parent.combo_buildtype \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [list [code changeSpecCombobox] \"buildtype\"]\\"<<endl;
cout<<"-variable [scope buildtype]]"<<endl;
cout<<"set label_intensity  [label $parent.label_intensity \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [::msgcat::mc \"Earthquake Intensity \"] ]"<<endl;
cout<<"set combo_intensity [euidl::combobox $parent.combo_intensity \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [list [code changeSpecCombobox] \"intensity\"]\\"<<endl;
cout<<"-variable [scope intensity]]"<<endl;
cout<<"set label_gravity [euidl::label $parent.label_gravity \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Acceleration \"]]"<<endl;
cout<<"set entry_gravity [euidl::entry  $parent.entry_gravity \\"<<endl;
cout<<"-variable [scope gravity]\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-validatedata real\\"<<endl;
cout<<"-width 15]"<<endl;
cout<<"set label_basesite [euidl::label $parent.label_basesite \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Base Site Value \"]]"<<endl;
cout<<"set combo_basesite [euidl::combobox $parent.combo_basesite \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [list [code changeSpecCombobox] \"site\"]\\"<<endl;
cout<<"-variable [scope basesite]]"<<endl;
cout<<"set label_site [euidl::label $parent.label_site \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Site Class \"]]"<<endl;
cout<<"set combo_site [euidl::combobox $parent.combo_site \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-command [list [code changeSpecCombobox] \"site\"]\\"<<endl;
cout<<"-variable [scope site]]"<<endl;
cout<<"set label_bmax [euidl::label $parent.label_bmax \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Bmax \"]]"<<endl;
cout<<"set entry_bmax [euidl::entry  $parent.entry_bmax \\"<<endl;
cout<<"-width 10  \\"<<endl;
cout<<"-variable [scope bmax] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata real]"<<endl;
cout<<"set label_tg [euidl::label $parent.label_tg \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Tg \"]]"<<endl;
cout<<"set entry_tg [euidl::entry  $parent.entry_tg \\"<<endl;
cout<<"-width 10  \\"<<endl;
cout<<"-variable [scope tg] \\"<<endl;
cout<<"-validate focusout\\"<<endl;
cout<<"-width 15\\"<<endl;
cout<<"-font $font(en)\\"<<endl;
cout<<"-validatedata real]"<<endl;
cout<<"set btn_updatechart [euidl::button $parent.btn_updatechartl \\"<<endl;
cout<<"-command [code updateSpectrumChart]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 50\\"<<endl;
cout<<"-imagefile $png(chart) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Update Spectrum \"] ]"<<endl;
cout<<"set label_direction [euidl::label $parent.label_direction \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"Load Direction \"]]"<<endl;
cout<<"set combo_direction [euidl::combobox $parent.combo_direction \\"<<endl;
cout<<"-exportselection 1 \\"<<endl;
cout<<"-style dropdown \\"<<endl;
cout<<"-listheight 100 \\"<<endl;
cout<<"-width 13\\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-variable [scope direction]]"<<endl;
cout<<"set btn_spectrumSolve [euidl::button $parent.btn_spectrumSolve \\"<<endl;
cout<<"-command [code spectrumSolve]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 50\\"<<endl;
cout<<"-imagefile $png(check)  \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Solve Spectrum \"] ]"<<endl;
cout<<"set label_readmcom [euidl::label $parent.label_readmcom \\"<<endl;
cout<<"-height 2 \\"<<endl;
cout<<"-font $font(cn) \\"<<endl;
cout<<"-text [msgcat::mc \"The McomFile \"]]"<<endl;
cout<<"set entry_readmcom [entry  $parent.entry_readmcom \\"<<endl;
cout<<"-textvariable [scope mcomfile] \\"<<endl;
cout<<"-font $font(cn)]"<<endl;
cout<<"set btn_selectmcom [euidl::button $parent.btn_selectmcom \\"<<endl;
cout<<"-command [code importMcomResustFile]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 40\\"<<endl;
cout<<"-imagefile $png(import) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Select McomFile \"] ]"<<endl;
cout<<"set btn_readmcom [euidl::button $parent.btn_readmcom \\"<<endl;
cout<<"-command [code readMcomResultFile]   \\"<<endl;
cout<<"-height 30\\"<<endl;
cout<<"-width 40\\"<<endl;
cout<<"-imagefile $png(update) \\"<<endl;
cout<<"-tooltip [msgcat::mc \"Read McomFile \"] ]"<<endl;
cout<<"grid $label_buildtype -in $tab1 -row 0 -column 0  -sticky w"<<endl;
cout<<"grid $combo_buildtype -in $tab1 -row 0 -column 1  -sticky w  -padx 4m -pady 1m"<<endl;
cout<<"grid $label_direction -in $tab1 -row 0 -column 2  -sticky w  -padx 4m"<<endl;
cout<<"grid $combo_direction -in $tab1 -row 0 -column 3  -sticky w   -pady 1m"<<endl;
cout<<"grid $label_basesite -in $tab1 -row 1 -column 0  -sticky w"<<endl;
cout<<"grid $combo_basesite -in $tab1 -row 1 -column 1  -sticky w  -padx 4m -pady 1m"<<endl;
cout<<"grid $label_site -in $tab1 -row 1 -column 2 -sticky w   -padx 4m"<<endl;
cout<<"grid $combo_site -in $tab1 -row 1 -column 3 -sticky w   -pady 1m"<<endl;
cout<<"grid $label_intensity -in $tab1 -row 2 -column 0  -sticky w"<<endl;
cout<<"grid $combo_intensity -in $tab1 -row 2 -column 1  -sticky w   -padx 4m -pady 1m"<<endl;
cout<<"grid $label_gravity -in $tab1 -row 2 -column 2  -sticky w  -padx 4m"<<endl;
cout<<"grid $entry_gravity -in $tab1 -row 2 -column 3  -sticky w   -pady 1m"<<endl;
cout<<"grid $label_bmax -in $tab1 -row 3 -column 0  -sticky w"<<endl;
cout<<"grid $entry_bmax -in $tab1 -row 3 -column 1  -sticky w -padx 4m"<<endl;
cout<<"grid $label_tg -in $tab1 -row 3 -column 2  -sticky w -padx 4m"<<endl;
cout<<"grid $entry_tg -in $tab1 -row 3 -column 3  -sticky w"<<endl;
cout<<"grid $btn_updatechart -in $tab1 -row 4 -column 0 -columnspan 2"<<endl;
cout<<"grid $btn_spectrumSolve -in $tab1 -row 4 -column 2  -columnspan 2"<<endl;
cout<<"grid $label_readmcom  -in $tab1 -row 5 -column 0"<<endl;
cout<<"grid $entry_readmcom  -in $tab1 -row 5 -column 1  -columnspan 2 -sticky ew"<<endl;
cout<<"grid $btn_selectmcom  -in $tab1 -row 5 -column 3  -sticky w -padx 5m"<<endl;
cout<<"grid $btn_readmcom  -in $tab1 -row 5 -column 3  -sticky e -padx 5m"<<endl;
cout<<"$combo_buildtype  insert list end [list\\"<<endl;
cout<<"[msgcat::mc \"Earth Dam \"] Earth\\"<<endl;
cout<<"[msgcat::mc \"Gravity Dam \"] Gravity\\"<<endl;
cout<<"[msgcat::mc \"Arch Dam \"] Arch\\"<<endl;
cout<<"[msgcat::mc \"Sluice IntaketTower \"] Sluice]"<<endl;
cout<<"$combo_intensity  insert list end [list\\"<<endl;
cout<<"\"default (1.0g)\" 1\\"<<endl;
cout<<"\"6 (0.05g)\" 0.05\\"<<endl;
cout<<"\"7 (0.10g)\" 0.10\\"<<endl;
cout<<"\"7 (0.15g)\" 0.15\\"<<endl;
cout<<"\"8 (0.20g)\" 0.20\\"<<endl;
cout<<"\"8 (0.30g)\" 0.30\\"<<endl;
cout<<"\"9 (0.40g)\" 0.40]"<<endl;
cout<<"$combo_basesite  insert list end [list\\"<<endl;
cout<<"\"0.35s\" 1\\"<<endl;
cout<<"\"0.40s\" 2\\"<<endl;
cout<<"\"0.45s\" 3]"<<endl;
cout<<"$combo_site  insert list end [list\\"<<endl;
cout<<"\"I0\" 1\\"<<endl;
cout<<"\"I1\" 2\\"<<endl;
cout<<"\"II\" 3\\"<<endl;
cout<<"\"III\" 4\\"<<endl;
cout<<"\"IV\" 5]"<<endl;
cout<<"$combo_direction  insert list end [list \\"<<endl;
cout<<"\"X\" \"1,0,0\"\\"<<endl;
cout<<"\"Y\" \"0,1,0\"\\"<<endl;
cout<<"\"Z\" \"0,0,1\"]"<<endl;
cout<<"for {set i 0} {$i < 4} {incr i} {"<<endl;
cout<<"grid rowconfigure    $tab1 $i  -weight 1"<<endl;
cout<<"grid columnconfigure $tab1 $i -weight 1"<<endl;
cout<<"}"<<endl;
cout<<"pack $tab1 -side top -anchor nw -fill both -expand 1 -padx 5 -pady 5"<<endl;
cout<<"}"<<endl;
cout<<"proc tabSwitch {arg} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable tabset"<<endl;
cout<<"set index [$tabset view]"<<endl;
cout<<"switch -exact -- $arg {"<<endl;
cout<<"Back {"<<endl;
cout<<"incr index -1"<<endl;
cout<<"$tabset view $index"<<endl;
cout<<"}"<<endl;
cout<<"Next {"<<endl;
cout<<"incr index"<<endl;
cout<<"$tabset view $index"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"changeButtonState"<<endl;
cout<<"}"<<endl;
cout<<"proc translateModalData {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable frequs"<<endl;
cout<<"variable values"<<endl;
cout<<"variable gravity"<<endl;
cout<<"set trfrequs  {}"<<endl;
cout<<"set trvalues  {}"<<endl;
cout<<"set datalist [GetSpecModalPoints]"<<endl;
cout<<"set frequs [lindex $datalist 0]"<<endl;
cout<<"set values [lindex $datalist 2]"<<endl;
cout<<"set num [llength $frequs]"<<endl;
cout<<"for {set i 0} {$i < $num} {incr i} {"<<endl;
cout<<"lappend trfrequs [expr [lindex $frequs $i]*$gravity]"<<endl;
cout<<"lappend trvalues [expr [lindex $values $i]*$gravity]"<<endl;
cout<<"}"<<endl;
cout<<"return [list $trfrequs $trvalues]"<<endl;
cout<<"}"<<endl;
cout<<"proc changeButtonState {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable btnback"<<endl;
cout<<"variable btnnext"<<endl;
cout<<"set pagenow [$tabset view]"<<endl;
cout<<"set pageend [$tabset index end]"<<endl;
cout<<"set rowsnum [$table index end row]"<<endl;
cout<<"$btnnext configure -state [expr $pagenow==$pageend?\"disabled\":\"normal\"]"<<endl;
cout<<"$btnback configure -state [expr $pagenow==0?\"disabled\":\"normal\"]"<<endl;
cout<<"}"<<endl;
cout<<"proc changeSpecCombobox {args} \\"<<endl;
cout<<"{"<<endl;
cout<<"if {$args==\"buildtype\"} {"<<endl;
cout<<"variable buildtype"<<endl;
cout<<"variable bmax"<<endl;
cout<<"switch -exact -- $buildtype {"<<endl;
cout<<"Earth {set bmax 1.60}"<<endl;
cout<<"Gravity {set bmax 2.0}"<<endl;
cout<<"Arch {set bmax 2.50}"<<endl;
cout<<"Sluice {set bmax 2.25}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {$args==\"site\"} {"<<endl;
cout<<"variable basesite"<<endl;
cout<<"variable site"<<endl;
cout<<"variable tg"<<endl;
cout<<"set index \"$basesite-$site\""<<endl;
cout<<"switch -exact -- $index {"<<endl;
cout<<"1-1 {set tg  0.20}"<<endl;
cout<<"1-2 {set tg  0.25}"<<endl;
cout<<"1-3 {set tg  0.35}"<<endl;
cout<<"1-4 {set tg  0.45}"<<endl;
cout<<"1-5 {set tg  0.65}"<<endl;
cout<<"2-1 {set tg  0.25}"<<endl;
cout<<"2-2 {set tg  0.30}"<<endl;
cout<<"2-3 {set tg  0.40}"<<endl;
cout<<"2-4 {set tg  0.55}"<<endl;
cout<<"2-5 {set tg  0.75}"<<endl;
cout<<"3-1 {set tg  0.30}"<<endl;
cout<<"3-2 {set tg  0.35}"<<endl;
cout<<"3-3 {set tg  0.45}"<<endl;
cout<<"3-4 {set tg  0.65}"<<endl;
cout<<"3-5 {set tg  0.90}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if {$args==\"intensity\"} {"<<endl;
cout<<"variable intensity"<<endl;
cout<<"variable gravity"<<endl;
cout<<"set gravity [expr $intensity*9.8]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc initialize {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable btnback"<<endl;
cout<<"variable method"<<endl;
cout<<"variable number"<<endl;
cout<<"variable intensity"<<endl;
cout<<"variable basesite"<<endl;
cout<<"variable site"<<endl;
cout<<"variable buildtype"<<endl;
cout<<"variable bmax"<<endl;
cout<<"variable tg"<<endl;
cout<<"variable gravity"<<endl;
cout<<"variable direction"<<endl;
cout<<"variable projectname"<<endl;
cout<<"variable datafile"<<endl;
cout<<"variable mcomfile"<<endl;
cout<<"set method \"SUBSP\""<<endl;
cout<<"set number 10"<<endl;
cout<<"set buildtype Earth"<<endl;
cout<<"set bmax 1.60"<<endl;
cout<<"set intensity 0.10"<<endl;
cout<<"set basesite 1"<<endl;
cout<<"set site 3"<<endl;
cout<<"set tg 0.35"<<endl;
cout<<"set gravity 9.8"<<endl;
cout<<"set direction \"1,0,0\""<<endl;
cout<<"set datafile {}"<<endl;
cout<<"set projectname [string trim [ans_getvalue \"ACTIVE,0,JOBNAM\"]]"<<endl;
cout<<"set mcomfile [format \"%s.mcom\" $projectname]"<<endl;
cout<<"$tabset view 0"<<endl;
cout<<"$btnback configure -state \"disabled\""<<endl;
cout<<"modalShow"<<endl;
cout<<"}"<<endl;
cout<<"proc modalSolve {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable method"<<endl;
cout<<"variable number"<<endl;
cout<<"variable parent"<<endl;
cout<<"if {[checkEnvironment]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set msg \"\""<<endl;
cout<<"set number [string trim $number]"<<endl;
cout<<"if {$number==\"\"} {"<<endl;
cout<<"set msg \"The Modal Number is Empty! \""<<endl;
cout<<"}"<<endl;
cout<<"if {$number>100} {"<<endl;
cout<<"set msg \"The Biggest Modal Number is 100! \""<<endl;
cout<<"}"<<endl;
cout<<"if {$msg!=\"\"} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  $msg"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"ANTYPE,MODAL\"} err"<<endl;
cout<<"catch {ans_sendcommand \"MODOPT,$method,$number\"} err"<<endl;
cout<<"catch {ans_sendcommand \"MXPAND,$number, , ,1\"} err"<<endl;
cout<<"catch {ans_sendcommand  \"SOLVE\"} err"<<endl;
cout<<"raise .spectrum"<<endl;
cout<<"after  500 [modalShow]"<<endl;
cout<<"}"<<endl;
cout<<"proc modalShow {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable number"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"set rowsnum [$table index end row]"<<endl;
cout<<"for {set i $rowsnum} {$i >=0 } {incr i -1} {"<<endl;
cout<<"$table delete rows $i"<<endl;
cout<<"}"<<endl;
cout<<"for {set i 0} {$i < $number} {incr i} {"<<endl;
cout<<"set num [expr $i+1]"<<endl;
cout<<"set fre [ans_getvalue \"MODE,$num,FREQ\"]"<<endl;
cout<<"if {$fre!=0} {"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($i,-1) {}"<<endl;
cout<<"set tabledata($i,0)  $num"<<endl;
cout<<"set tabledata($i,1)  $fre"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]!=-1} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state normal"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc modalImport {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"variable tabset"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable projectname"<<endl;
cout<<"set filename [tk_getOpenFile \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-initialfile [format \"%s_modal.txt\" $projectname] \\"<<endl;
cout<<"-filetypes {{Txt .txt}}]"<<endl;
cout<<"if {![file exists $filename]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set rowsnum [$table index end row]"<<endl;
cout<<"for {set i $rowsnum} {$i >=0 } {incr i -1} {"<<endl;
cout<<"$table delete rows $i"<<endl;
cout<<"}"<<endl;
cout<<"set fl [open $filename r]"<<endl;
cout<<"set data [read $fl]"<<endl;
cout<<"close $fl"<<endl;
cout<<"set index 0"<<endl;
cout<<"foreach {id fre} $data {"<<endl;
cout<<"if {$fre!=0} {"<<endl;
cout<<"$table insert row end"<<endl;
cout<<"set tabledata($index,-1) {}"<<endl;
cout<<"set tabledata($index,0)  $id"<<endl;
cout<<"set tabledata($index,1)  $fre"<<endl;
cout<<"incr index"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc spectrumSolve {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable direction"<<endl;
cout<<"if {[$table index end row]==-1} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Solve Modal First! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"if {[checkEnvironment]} {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set transData [translateModalData]"<<endl;
cout<<"set frequs [lindex $transData 0]"<<endl;
cout<<"set values [lindex $transData 1]"<<endl;
cout<<"catch {ans_sendcommand \"ANTYPE,SPECTR\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SPOPT,SPRS\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SVTYP,2,1\"} err"<<endl;
cout<<"catch {ans_sendcommand \"SED,$direction\"} err"<<endl;
cout<<"catch {ans_sendcommand \"FREQ\" } err"<<endl;
cout<<"set commands(FREQ) {}"<<endl;
cout<<"lappend commands(FREQ) [lrange $frequs 0 8]"<<endl;
cout<<"lappend commands(FREQ) [lrange $frequs 9 18]"<<endl;
cout<<"lappend commands(FREQ) [lrange $frequs 19 20]"<<endl;
cout<<"set commands(SV,) {}"<<endl;
cout<<"lappend commands(SV,) [lrange $values 0 8]"<<endl;
cout<<"lappend commands(SV,) [lrange $values 9 18]"<<endl;
cout<<"lappend commands(SV,) [lrange $values 19 20]"<<endl;
cout<<"foreach name [lsort [array names commands]] {"<<endl;
cout<<"foreach command $commands($name) {"<<endl;
cout<<"if {[llength $command]!=0} {"<<endl;
cout<<"set command [concat $name $command]"<<endl;
cout<<"set command [join $command \",\"]"<<endl;
cout<<"catch {ans_sendcommand $command } err"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"catch {ans_sendcommand \"SRSS,0.001,DISP,,STATIC\"} err"<<endl;
cout<<"catch {ans_sendcommand \"Solve\"} err"<<endl;
cout<<"readMcomResultFile"<<endl;
cout<<"}"<<endl;
cout<<"proc updateSpectrumChart {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable table"<<endl;
cout<<"variable plotshow"<<endl;
cout<<"set rowsnum [$table index end row]"<<endl;
cout<<"if {$rowsnum==-1} {"<<endl;
cout<<"tk_messageBox  -parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Solve Modal First! \"]"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set title  [::msgcat::mc \"Design Response Spectrum \"]"<<endl;
cout<<"set xlabel [::msgcat::mc \"Time(s) \"]"<<endl;
cout<<"set ylabel \"[::msgcat::mc \"Acceleration \"]m/s^2\""<<endl;
cout<<"set geometry    [wm geometry $parent]"<<endl;
cout<<"set sepcCurve   [GetSpecCurvePoints]"<<endl;
cout<<"set specName [::msgcat::mc \"Design Response Spectrum \"]"<<endl;
cout<<"set xcurve      [lindex $sepcCurve 0]"<<endl;
cout<<"set ycurve      [lindex $sepcCurve 1]"<<endl;
cout<<"set specPonts   [GetSpecModalPoints]"<<endl;
cout<<"set SpecModalName [::msgcat::mc \"Modal Spectrum \"]"<<endl;
cout<<"set xmodal     [lindex $specPonts 1]"<<endl;
cout<<"set ymodal      [lindex $specPonts 2]"<<endl;
cout<<"set data  \"\\\"<root  title='$title' geometry='$geometry' xlabel='$xlabel' ylabel='$ylabel'>"<<endl;
cout<<"<graphs>"<<endl;
cout<<"<graph id='1'>"<<endl;
cout<<"<xlist>$xcurve</xlist>"<<endl;
cout<<"<ylist>$ycurve</ylist>"<<endl;
cout<<"<style legend='$specName' line='black blue 0.3' />"<<endl;
cout<<"</graph>"<<endl;
cout<<"<graph id='2'>"<<endl;
cout<<"<xlist>$xmodal</xlist>"<<endl;
cout<<"<ylist>$ymodal</ylist>"<<endl;
cout<<"<style legend='$SpecModalName' point='black blue 6' />"<<endl;
cout<<"</graph>"<<endl;
cout<<"</graphs>"<<endl;
cout<<"</root>\\\"\""<<endl;
cout<<"exec $plotshow $data"<<endl;
cout<<"after 300 [raise $parent]"<<endl;
cout<<"}"<<endl;
cout<<"proc GetSpecCurvePoints {} \\"<<endl;
cout<<"{"<<endl;
cout<<"set maxtime 3.0"<<endl;
cout<<"set space 0.05"<<endl;
cout<<"set num [expr $maxtime/$space]"<<endl;
cout<<"set times {}"<<endl;
cout<<"set values {}"<<endl;
cout<<"for {set i 0} {$i <= $num} {incr i} {"<<endl;
cout<<"set thetime [expr $space*$i]"<<endl;
cout<<"set thevalue [getModalData $thetime]"<<endl;
cout<<"lappend times $thetime"<<endl;
cout<<"lappend values $thevalue"<<endl;
cout<<"}"<<endl;
cout<<"return [list $times $values]"<<endl;
cout<<"}"<<endl;
cout<<"proc GetSpecModalPoints {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"set num [$table index end row]"<<endl;
cout<<"if {$num==-1} {"<<endl;
cout<<"return {}"<<endl;
cout<<"}"<<endl;
cout<<"set frequs {}"<<endl;
cout<<"set times  {}"<<endl;
cout<<"set values {}"<<endl;
cout<<"for {set i 0} {$i <= $num} {incr i} {"<<endl;
cout<<"set thefre  $tabledata($i,1)"<<endl;
cout<<"set thetime [expr 1.0/$thefre]"<<endl;
cout<<"set thevalue [getModalData $thetime]"<<endl;
cout<<"lappend frequs $thefre"<<endl;
cout<<"lappend times  $thetime"<<endl;
cout<<"lappend values $thevalue"<<endl;
cout<<"}"<<endl;
cout<<"return  [list $frequs $times $values]"<<endl;
cout<<"}"<<endl;
cout<<"proc getModalData {thetime} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable bmax"<<endl;
cout<<"variable tg"<<endl;
cout<<"set slope [expr ($bmax-1.0)/0.1]"<<endl;
cout<<"if {$thetime<0.1} {"<<endl;
cout<<"set theval [expr $slope*$thetime+1.0]"<<endl;
cout<<"} elseif {$thetime>=0.1 && $thetime<=$tg} {"<<endl;
cout<<"set theval $bmax"<<endl;
cout<<"} else {"<<endl;
cout<<"set theval [expr $bmax*pow(($tg/$thetime),0.6)]"<<endl;
cout<<"}"<<endl;
cout<<"return $theval"<<endl;
cout<<"}"<<endl;
cout<<"proc readMcomResultFile {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable mcomfile"<<endl;
cout<<"if {![file exists $mcomfile]} {"<<endl;
cout<<"tk_messageBox  \\"<<endl;
cout<<"-parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"Can Not Find The mcom File! \"]"<<endl;
cout<<"return"<<endl;
cout<<"} else {"<<endl;
cout<<"catch {ans_sendcommand \"/POST1\" } err"<<endl;
cout<<"catch {ans_sendcommand \"/INPUT,$mcomfile\" } err"<<endl;
cout<<"}"<<endl;
cout<<"tk_messageBox  \\"<<endl;
cout<<"-parent $parent \\"<<endl;
cout<<"-icon warning \\"<<endl;
cout<<"-title [::msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-message  [::msgcat::mc \"McomFile Import Successfully! \"]"<<endl;
cout<<"}"<<endl;
cout<<"proc deleteFrequency {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable table"<<endl;
cout<<"variable tabledata"<<endl;
cout<<"set selection [lsort -integer -decreasing  [$table curselection]]"<<endl;
cout<<"if { [string match {} $selection] } {"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"foreach sel $selection {"<<endl;
cout<<"$table delete rows $sel"<<endl;
cout<<"}"<<endl;
cout<<"if { [$table index end row]==-1} {"<<endl;
cout<<"[$table getContextMenu] entryconfigure 0 -state disabled"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc checkEnvironment {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=21 } {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-message \"[msgcat::mc \"This Operation Need Environment: \"] \\n [msgcat::mc \"SOLU\"]\" \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return 1"<<endl;
cout<<"}"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::Seismic::SpectrumAnalysis::main"<<endl;

}
void CoutScript_ToolKitSeismic()
{
cout<<"package  require msgcat"<<endl;
cout<<"namespace eval ::euidl::Seismic::SeismicLoadKit {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable font"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable btn"<<endl;
cout<<"variable path"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"if [winfo exists .seismicloadkit] {"<<endl;
cout<<"wm deiconify .seismicloadkit"<<endl;
cout<<"raise .seismicloadkit"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .seismicloadkit]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Seismic Load Kit \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-260)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-80)/2}]"<<endl;
cout<<"wm geometry .seismicloadkit 260x80+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"destroy .seismicloadkit"<<endl;
cout<<"}"<<endl;
cout<<"set btn(Spectrum) [euidl::button $parent.btn_staticPressure \\"<<endl;
cout<<"-command [list [code showSeismicModule] \"SeismicSpectrum\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-text [msgcat::mc \"Spectrum Analysis \"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Spectrum Analysis \"] ]"<<endl;
cout<<"set btn(TimeHistory) [euidl::button $parent.btn(TimeHistory) \\"<<endl;
cout<<"-command [list [code showSeismicModule] \"SeismicTimeHistory\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-text [msgcat::mc \"TimeHistory Analysis \" ]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"TimeHistory Analysis \" ] ]"<<endl;
cout<<"grid $btn(Spectrum)     -row 0 -column 0 -padx 2m -pady 2m"<<endl;
cout<<"grid $btn(TimeHistory)  -row 0 -column 1  -padx 2m -pady 2m"<<endl;
cout<<"foreach name [array names btn] {"<<endl;
cout<<"bind $btn($name) <Enter> [list [code  btn_enter] %W]"<<endl;
cout<<"bind $btn($name) <Leave> [list [code  btn_leave] %W]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc showSeismicModule {modulename} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable path"<<endl;
cout<<"if {[checkEnvironment]} {return}"<<endl;
cout<<"eval [exec [file join $path \"AnsysScript.exe\" ] $modulename $path]"<<endl;
cout<<"destroy $parent"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_enter {control} \\"<<endl;
cout<<"{"<<endl;
cout<<"$control configure -background systemScrollbar"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_leave {control} \\"<<endl;
cout<<"{"<<endl;
cout<<"$control configure -background systemWindow"<<endl;
cout<<"}"<<endl;
cout<<"proc checkEnvironment {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=17 && $env!=21} {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-message \"[msgcat::mc \"This Operation Need Environment: \"] \\n [msgcat::mc \"PREP7\"]\\n [msgcat::mc \"SOLU\"]\" \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return 1"<<endl;
cout<<"}"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::Seismic::SeismicLoadKit::main"<<endl;

}
void CoutScript_ToolKitLoad()
{
cout<<"package  require msgcat"<<endl;
cout<<"namespace eval ::euidl::LoadToolKit {"<<endl;
cout<<"proc main {} {"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable font"<<endl;
cout<<"variable btn"<<endl;
cout<<"variable path"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout << "set path "<<path << endl;
cout<<"::msgcat::mcload  [file join $path locale]"<<endl;
cout<<"if [winfo exists .loadtoolkit] {"<<endl;
cout<<"wm deiconify .loadtoolkit"<<endl;
cout<<"raise .loadtoolkit"<<endl;
cout<<"return"<<endl;
cout<<"}"<<endl;
cout<<"set parent [toplevel .loadtoolkit]"<<endl;
cout<<"set font(cn)  {\"Microsoft YaHei\" 12 normal}"<<endl;
cout<<"set font(en)  {Consolas 12 normal}"<<endl;
cout<<"wm title $parent [::msgcat::mc \"Load Tool Kit \"]"<<endl;
cout<<"set x [expr {([winfo screenwidth  .]-300)/2}]"<<endl;
cout<<"set y [expr {([winfo screenheight .]-160)/2}]"<<endl;
cout<<"wm geometry .loadtoolkit 280x160+$x+$y"<<endl;
cout<<"wm protocol $parent WM_DELETE_WINDOW {"<<endl;
cout<<"destroy .loadtoolkit"<<endl;
cout<<"}"<<endl;
cout<<"set btn(staticPressure) [euidl::button $parent.btn(staticPressure) \\"<<endl;
cout<<"-command [list [code showLoadTool] \"PressureStatic\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-text [msgcat::mc \"Hydrostatic Pressure \"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Hydrostatic Pressure \"] ]"<<endl;
cout<<"set btn(dynamicPressure) [euidl::button $parent.btn(dynamicPressure) \\"<<endl;
cout<<"-command [list [code showLoadTool] \"PressureDynamic\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-text [msgcat::mc \"Dynamic Pressure \" ]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Dynamic Pressure \" ] ]"<<endl;
cout<<"set btn(ConcentratedForce) [euidl::button $parent.btn(ConcentratedForce) \\"<<endl;
cout<<"-command [list [code showLoadTool] \"PressureConcentrated\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-text [msgcat::mc \"Concentrated Force \"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Concentrated Force \"] ]"<<endl;
cout<<"set btn(PressureUplift) [euidl::button $parent.pressureUplift \\"<<endl;
cout<<"-command [list [code showLoadTool] \"PressureUplift\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-text [msgcat::mc \"UpLift Pressure \"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"UpLift Pressure \"] ]"<<endl;
cout<<"set btn(PressureWave) [euidl::button $parent.pressureWave \\"<<endl;
cout<<"-command [list [code showLoadTool] \"PressureWave\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-text [msgcat::mc \"Wave Force \"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Wave Force \"] ]"<<endl;
cout<<"set btn(ComponentManager) [euidl::button $parent.componentManager \\"<<endl;
cout<<"-command [list [code showLoadTool] \"ManagerComponent\"]  \\"<<endl;
cout<<"-width 10\\"<<endl;
cout<<"-font $font(cn)\\"<<endl;
cout<<"-height 1\\"<<endl;
cout<<"-text [msgcat::mc \"Component Manager \"]\\"<<endl;
cout<<"-tooltip [msgcat::mc \"Component Manager \"]]"<<endl;
cout<<"grid $btn(ComponentManager)   -row 0 -column 0 -padx 2m -pady 2m"<<endl;
cout<<"grid $btn(staticPressure)     -row 0 -column 1  -padx 2m -pady 2m"<<endl;
cout<<"grid $btn(dynamicPressure)    -row 1 -column 0 -padx 2m -pady 2m"<<endl;
cout<<"grid $btn(ConcentratedForce)  -row 1 -column 1 -padx 2m -pady 2m"<<endl;
cout<<"grid $btn(PressureUplift)     -row 2 -column 0 -padx 2m -pady 2m"<<endl;
cout<<"grid $btn(PressureWave)       -row 2 -column 1 -padx 2m -pady 2m"<<endl;
cout<<"foreach name [array names btn] {"<<endl;
cout<<"bind $btn($name) <Enter> [list [code  btn_enter] %W]"<<endl;
cout<<"bind $btn($name) <Leave> [list [code  btn_leave] %W]"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"proc showLoadTool {modulename} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"variable path"<<endl;
cout<<"if {[chekcEnvironment]} {return}"<<endl;
cout<<"eval [exec [file join $path \"AnsysScript.exe\" ] $modulename $path]"<<endl;
cout<<"destroy $parent"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_enter {control} \\"<<endl;
cout<<"{"<<endl;
cout<<"$control configure -background systemScrollbar"<<endl;
cout<<"}"<<endl;
cout<<"proc btn_leave {control} \\"<<endl;
cout<<"{"<<endl;
cout<<"$control configure -background systemWindow"<<endl;
cout<<"}"<<endl;
cout<<"proc chekcEnvironment {} \\"<<endl;
cout<<"{"<<endl;
cout<<"variable parent"<<endl;
cout<<"set env [ans_getvalue \"ACTIVE,0,ROUT\"]"<<endl;
cout<<"if {$env!=17 && $env!=21 } {"<<endl;
cout<<"tk_messageBox -title [msgcat::mc \"Tips \"] \\"<<endl;
cout<<"-parent $parent\\"<<endl;
cout<<"-message \"[msgcat::mc \"This Operation Need Environment: \"] \\n [msgcat::mc \"PREP7\"]\\n [msgcat::mc \"SOLU\"]\" \\"<<endl;
cout<<"-icon warning"<<endl;
cout<<"return 1"<<endl;
cout<<"}"<<endl;
cout<<"return 0"<<endl;
cout<<"}"<<endl;
cout<<"}"<<endl;
cout<<"::euidl::LoadToolKit::main"<<endl;

}